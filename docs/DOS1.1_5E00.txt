RAM:0000             ; Format      : Binary file
RAM:0000             ; Base Address: 0000h Range: 5E00h - 8000h Loaded length: 2200h
RAM:0000
RAM:0000             ; Processor       : z80 []
RAM:0000             ; Target assembler: Zilog Macro Assembler
RAM:0000
RAM:0000             ; ===========================================================================
RAM:0000
RAM:0000             ; Segment type: Regular


RAM:A200             BOOT_SECTOR:                            ; ROM BASIC loads boot sector here at $A200, then jumps here
RAM:A200 3E 06                       ld      a, 6
RAM:A202 D3 43                       out     (43h), a        ; Move bank#6 into $C000-$FFFF , and test to see if it is RAM
RAM:A204 21 FF FF                    ld      hl, 0FFFFh
RAM:A207 7E                          ld      a, (hl)
RAM:A208 2F                          cpl
RAM:A209 77                          ld      (hl), a
RAM:A20A BE                          cp      (hl)
RAM:A20B 20 70                       jr      nz, NO_RAM_350  ; running on LASER 350 with no extra RAM?
RAM:A20D 21 AE A2                    ld      hl, DOS_BASIC
RAM:A210 CD 87 A2                    call    PRINT_STRING_HL_0
RAM:A213
RAM:A213             loc_A213:                               ; CODE XREF: RAM:A231↓j
RAM:A213 31 FF 9F                    ld      sp, 9FFFh
RAM:A216 06 22                       ld      b, 34           ; 34 sectors = $2200 bytes.  T0/S0 => T2/S1
RAM:A218 11 00 00                    ld      de, 0
RAM:A21B 21 00 DE                    ld      hl, 0DE00h      ; load at $DE00, but move to bank#1 later on
RAM:A21E
RAM:A21E             read_next_sector:                       ; CODE XREF: RAM:A241↓j
RAM:A21E                                                     ; RAM:A24A↓j
RAM:A21E D5                          push    de
RAM:A21F C5                          push    bc
RAM:A220 E5                          push    hl
RAM:A221 22 0B 86                    ld      (word_860B), hl
RAM:A224 21 C2 A2                    ld      hl, SECTOR_SKEW_TABLE
RAM:A227 16 00                       ld      d, 0
RAM:A229 19                          add     hl, de
RAM:A22A 7E                          ld      a, (hl)         ; get skewed Sector#
RAM:A22B 32 09 86                    ld      (byte_8609), a
RAM:A22E CD 33 00                    call    byte_33
RAM:A231 38 E0                       jr      c, loc_A213
RAM:A233 E1                          pop     hl
RAM:A234 11 00 01                    ld      de, 100h
RAM:A237 19                          add     hl, de
RAM:A238 C1                          pop     bc
RAM:A239 05                          dec     b
RAM:A23A 28 10                       jr      z, dos_read     ; jump if all sectors read ok
RAM:A23C D1                          pop     de
RAM:A23D 1C                          inc     e
RAM:A23E 7B                          ld      a, e
RAM:A23F FE 10                       cp      16              ; 16 sectors read yet?
RAM:A241 38 DB                       jr      c, read_next_sector
RAM:A243 1E 00                       ld      e, 0            ; reset sector# to ZERO
RAM:A245 14                          inc     d               ; increment track count
RAM:A246 7A                          ld      a, d
RAM:A247 32 08 86                    ld      (byte_8608), a
RAM:A24A 18 D2                       jr      read_next_sector
RAM:A24C             ; ---------------------------------------------------------------------------
RAM:A24C
RAM:A24C             dos_read:                               ; CODE XREF: RAM:A23A↑j
RAM:A24C 3E 05                       ld      a, 5
RAM:A24E 32 68 86                    ld      (BANK3_COPY), a
RAM:A251 D3 43                       out     (43h), a        ; move bank#5 back into SLOT#3 $C000-$FFFF
RAM:A253 FD 21 60 FE                 ld      iy, 0FE60h
RAM:A257 21 FF FA                    ld      hl, 0FAFFh
RAM:A25A 22 3D 80                    ld      (word_803D), hl
RAM:A25D F9                          ld      sp, hl
RAM:A25E 22 D8 83                    ld      (word_83D8), hl
RAM:A261 11 00 FE                    ld      de, 0FE00h
RAM:A264 19                          add     hl, de
RAM:A265 22 9D 83                    ld      (word_839D), hl
RAM:A268 11 41 80                    ld      de, word_8041
RAM:A26B E5                          push    hl
RAM:A26C CD C1 5E                    call    sub_5EC1        ; call routine in ROM to adjust HIMEM pointers
RAM:A26F E1                          pop     hl
RAM:A270 22 C2 83                    ld      (word_83C2), hl
RAM:A273 3E 06                       ld      a, 6            ; Make RAM 6 appear in BANK#1 , then jump into the entry point there.
RAM:A275 32 66 86                    ld      (BANK1_COPY), a
RAM:A278 D3 41                       out     (41h), a
RAM:A27A C3 2D 5F                    jp      DOS_ENTRY		; Jump to DOS entry point $5F2D
RAM:A27D             ; ---------------------------------------------------------------------------
RAM:A27D
RAM:A27D             NO_RAM_350:                             ; CODE XREF: RAM:A20B↑j
RAM:A27D 3E 05                       ld      a, 5
RAM:A27F 32 68 86                    ld      (BANK3_COPY), a
RAM:A282 D3 43                       out     (43h), a
RAM:A284 21 92 A2                    ld      hl, aInsufficientMe ; "INSUFFICIENT MEMORY FOR DOS"
RAM:A287
RAM:A287             ; =============== S U B R O U T I N E =======================================
RAM:A287
RAM:A287
RAM:A287             PRINT_STRING_HL_0:                      ; CODE XREF: RAM:A210↑p
RAM:A287                                                     ; PRINT_STRING_HL_0+9↓j
RAM:A287 7E                          ld      a, (hl)
RAM:A288 B7                          or      a
RAM:A289 C8                          ret     z
RAM:A28A E5                          push    hl
RAM:A28B CD 0B 00                    call    unk_B
RAM:A28E E1                          pop     hl
RAM:A28F 23                          inc     hl
RAM:A290 18 F5                       jr      PRINT_STRING_HL_0
RAM:A290             ; End of function PRINT_STRING_HL_0
RAM:A290
RAM:A290             ; ---------------------------------------------------------------------------
RAM:A292 49 4E 53 55+aInsufficientMe:.ascii 'INSUFFICIENT MEMORY FOR DOS',0
RAM:A292 46 46 49 43+                                        ; DATA XREF: RAM:A284↑o
RAM:A2AE 1C          DOS_BASIC:      db 1Ch                  ; DATA XREF: RAM:A20D↑o
RAM:A2AF 0A 44 4F 53+aDosBasicV11:   .ascii '\n'
RAM:A2AF 20 42 41 53+                .ascii 'DOS BASIC V1.1\n'
RAM:A2AF 49 43 20 56+                .ascii '\n'
RAM:A2AF 31 2E 31 0A+                .ascii '\r',0
RAM:A2C2 00          SECTOR_SKEW_TABLE:db    0               ; DATA XREF: RAM:A224↑o
RAM:A2C3 03                          db 3
RAM:A2C4 06                          db 6
RAM:A2C5 09                          db 9
RAM:A2C6 0C                          db 0Ch
RAM:A2C7 0F                          db 0Fh
RAM:A2C8 02                          db 2
RAM:A2C9 05                          db 5
RAM:A2CA 08                          db 8
RAM:A2CB 0B                          db 0Bh
RAM:A2CC 0E                          db 0Eh
RAM:A2CD 01                          db 1
RAM:A2CE 04                          db 4
RAM:A2CF 07                          db 7
RAM:A2D0 0A                          db 0Ah
RAM:A2D1 0D                          db 0Dh
RAM:A2D2 00                          db    0
RAM:A2D3 00                          db    0
RAM:A2D4 00                          db    0
RAM:A2D5 00                          db    0
RAM:A2D6 00                          db    0
RAM:A2D7 00                          db    0
RAM:A2D8 00                          db    0
RAM:A2D9 00                          db    0
RAM:A2DA 00                          db    0
RAM:A2DB 00                          db    0
RAM:A2DC 00                          db    0
RAM:A2DD 00                          db    0
RAM:A2DE 00                          db    0
RAM:A2DF 00                          db    0
RAM:A2E0 00                          db    0
RAM:A2E1 00                          db    0
RAM:A2E2 00                          db    0
RAM:A2E3 00                          db    0
RAM:A2E4 00                          db    0
RAM:A2E5 00                          db    0
RAM:A2E6 00                          db    0
RAM:A2E7 00                          db    0
RAM:A2E8 00                          db    0
RAM:A2E9 00                          db    0
RAM:A2EA 00                          db    0
RAM:A2EB 00                          db    0
RAM:A2EC 00                          db    0
RAM:A2ED 00                          db    0
RAM:A2EE 00                          db    0
RAM:A2EF 00                          db    0
RAM:A2F0 00                          db    0
RAM:A2F1 00                          db    0
RAM:A2F2 00                          db    0
RAM:A2F3 00                          db    0
RAM:A2F4 00                          db    0
RAM:A2F5 00                          db    0
RAM:A2F6 00                          db    0
RAM:A2F7 00                          db    0
RAM:A2F8 00                          db    0
RAM:A2F9 00                          db    0
RAM:A2FA 00                          db    0
RAM:A2FB 00                          db    0
RAM:A2FC 11                          db  11h
RAM:A2FD 21                          db  21h ; !
RAM:A2FE 05                          db    5
RAM:A2FF 86                          db  86h



;Following data is loaded to Bank#6 by the boot sector, and executes in SLOT#1

; $2200 bytes, from Track#0, Sector#0 => Track#2, Sector#1

;$5E00-$5EFF is a copy of the boot sector, written back to disk by the INIT command

; actual DOS entry point is $5F2D

RAM:5E00 3E          DOS_START:      db 3Eh                  ; DATA XREF: RAM:664E↓o
RAM:5E01 06                          db    6
RAM:5E02 D3                          db 0D3h
RAM:5E03 43                          db  43h ; C
RAM:5E04 21                          db  21h ; !
RAM:5E05 FF                          db 0FFh
RAM:5E06 FF                          db 0FFh
RAM:5E07 7E                          db  7Eh ; ~
RAM:5E08 2F                          db  2Fh ; /
RAM:5E09 77                          db  77h ; w
RAM:5E0A BE                          db 0BEh
RAM:5E0B 20                          db  20h
RAM:5E0C 70                          db  70h ; p
RAM:5E0D 21                          db  21h ; !
RAM:5E0E AE                          db 0AEh
RAM:5E0F A2                          db 0A2h
RAM:5E10 CD                          db 0CDh
RAM:5E11 87                          db  87h
RAM:5E12 A2                          db 0A2h
RAM:5E13 31                          db  31h ; 1
RAM:5E14 FF                          db 0FFh
RAM:5E15 9F                          db  9Fh
RAM:5E16 06                          db    6
RAM:5E17 22                          db  22h ; "
RAM:5E18 11                          db  11h
RAM:5E19 00                          db    0
RAM:5E1A 00                          db    0
RAM:5E1B 21                          db  21h ; !
RAM:5E1C 00                          db    0
RAM:5E1D DE                          db 0DEh
RAM:5E1E D5                          db 0D5h
RAM:5E1F C5                          db 0C5h
RAM:5E20 E5                          db 0E5h
RAM:5E21 22                          db  22h ; "
RAM:5E22 0B                          db  0Bh
RAM:5E23 86                          db  86h
RAM:5E24 21                          db  21h ; !
RAM:5E25 C2                          db 0C2h
RAM:5E26 A2                          db 0A2h
RAM:5E27 16                          db  16h
RAM:5E28 00                          db    0
RAM:5E29 19                          db  19h
RAM:5E2A 7E                          db  7Eh ; ~
RAM:5E2B 32                          db  32h ; 2
RAM:5E2C 09                          db    9
RAM:5E2D 86                          db  86h
RAM:5E2E CD                          db 0CDh
RAM:5E2F 33                          db  33h ; 3
RAM:5E30 00                          db    0
RAM:5E31 38                          db  38h ; 8
RAM:5E32 E0                          db 0E0h
RAM:5E33 E1                          db 0E1h
RAM:5E34 11                          db  11h
RAM:5E35 00                          db    0
RAM:5E36 01                          db    1
RAM:5E37 19                          db  19h
RAM:5E38 C1                          db 0C1h
RAM:5E39 05                          db    5
RAM:5E3A 28                          db  28h ; (
RAM:5E3B 10                          db  10h
RAM:5E3C D1                          db 0D1h
RAM:5E3D 1C                          db  1Ch
RAM:5E3E 7B                          db  7Bh ; {
RAM:5E3F FE                          db 0FEh
RAM:5E40 10                          db  10h
RAM:5E41 38                          db  38h ; 8
RAM:5E42 DB                          db 0DBh
RAM:5E43 1E                          db  1Eh
RAM:5E44 00                          db    0
RAM:5E45 14                          db  14h
RAM:5E46 7A                          db  7Ah ; z
RAM:5E47 32                          db  32h ; 2
RAM:5E48 08                          db    8
RAM:5E49 86                          db  86h
RAM:5E4A 18                          db  18h
RAM:5E4B D2                          db 0D2h
RAM:5E4C 3E                          db  3Eh ; >
RAM:5E4D 05                          db    5
RAM:5E4E 32                          db  32h ; 2
RAM:5E4F 68                          db  68h ; h
RAM:5E50 86                          db  86h
RAM:5E51 D3                          db 0D3h
RAM:5E52 43                          db  43h ; C
RAM:5E53 FD                          db 0FDh
RAM:5E54 21                          db  21h ; !
RAM:5E55 60                          db  60h ; `
RAM:5E56 FE                          db 0FEh
RAM:5E57 21                          db  21h ; !
RAM:5E58 FF                          db 0FFh
RAM:5E59 FA                          db 0FAh
RAM:5E5A 22                          db  22h ; "
RAM:5E5B 3D                          db  3Dh ; =
RAM:5E5C 80                          db  80h
RAM:5E5D F9                          db 0F9h
RAM:5E5E 22                          db  22h ; "
RAM:5E5F D8                          db 0D8h
RAM:5E60 83                          db  83h
RAM:5E61 11                          db  11h
RAM:5E62 00                          db    0
RAM:5E63 FE                          db 0FEh
RAM:5E64 19                          db  19h
RAM:5E65 22                          db  22h ; "
RAM:5E66 9D                          db  9Dh
RAM:5E67 83                          db  83h
RAM:5E68 11                          db  11h
RAM:5E69 41                          db  41h ; A
RAM:5E6A 80                          db  80h
RAM:5E6B E5                          db 0E5h
RAM:5E6C CD                          db 0CDh
RAM:5E6D C1                          db 0C1h
RAM:5E6E 5E                          db  5Eh ; ^
RAM:5E6F E1                          db 0E1h
RAM:5E70 22                          db  22h ; "
RAM:5E71 C2                          db 0C2h
RAM:5E72 83                          db  83h
RAM:5E73 3E                          db  3Eh ; >
RAM:5E74 06                          db    6
RAM:5E75 32                          db  32h ; 2
RAM:5E76 66                          db  66h ; f
RAM:5E77 86                          db  86h
RAM:5E78 D3                          db 0D3h
RAM:5E79 41                          db  41h ; A
RAM:5E7A C3                          db 0C3h
RAM:5E7B 2D                          db  2Dh ; -
RAM:5E7C 5F                          db  5Fh ; _
RAM:5E7D 3E                          db  3Eh ; >
RAM:5E7E 05                          db    5
RAM:5E7F 32                          db  32h ; 2
RAM:5E80 68                          db  68h ; h
RAM:5E81 86                          db  86h
RAM:5E82 D3                          db 0D3h
RAM:5E83 43                          db  43h ; C
RAM:5E84 21                          db  21h ; !
RAM:5E85 92                          db  92h
RAM:5E86 A2                          db 0A2h
RAM:5E87 7E                          db  7Eh ; ~
RAM:5E88 B7                          db 0B7h
RAM:5E89 C8                          db 0C8h
RAM:5E8A E5                          db 0E5h
RAM:5E8B CD                          db 0CDh
RAM:5E8C 0B                          db  0Bh
RAM:5E8D 00                          db    0
RAM:5E8E E1                          db 0E1h
RAM:5E8F 23                          db  23h ; #
RAM:5E90 18                          db  18h
RAM:5E91 F5                          db 0F5h
RAM:5E92 49                          db  49h ; I
RAM:5E93 4E                          db  4Eh ; N
RAM:5E94 53                          db  53h ; S
RAM:5E95 55                          db  55h ; U
RAM:5E96 46                          db  46h ; F
RAM:5E97 46                          db  46h ; F
RAM:5E98 49                          db  49h ; I
RAM:5E99 43                          db  43h ; C
RAM:5E9A 49                          db  49h ; I
RAM:5E9B 45                          db  45h ; E
RAM:5E9C 4E                          db  4Eh ; N
RAM:5E9D 54                          db  54h ; T
RAM:5E9E 20                          db  20h
RAM:5E9F 4D                          db  4Dh ; M
RAM:5EA0 45                          db  45h ; E
RAM:5EA1 4D                          db  4Dh ; M
RAM:5EA2 4F                          db  4Fh ; O
RAM:5EA3 52                          db  52h ; R
RAM:5EA4 59                          db  59h ; Y
RAM:5EA5 20                          db  20h
RAM:5EA6 46                          db  46h ; F
RAM:5EA7 4F                          db  4Fh ; O
RAM:5EA8 52                          db  52h ; R
RAM:5EA9 20                          db  20h
RAM:5EAA 44                          db  44h ; D
RAM:5EAB 4F                          db  4Fh ; O
RAM:5EAC 53                          db  53h ; S
RAM:5EAD 00                          db    0
RAM:5EAE 1C                          db  1Ch
RAM:5EAF 0A                          db  0Ah
RAM:5EB0 44                          db  44h ; D
RAM:5EB1 4F                          db  4Fh ; O
RAM:5EB2 53                          db  53h ; S
RAM:5EB3 20                          db  20h
RAM:5EB4 42                          db  42h ; B
RAM:5EB5 41                          db  41h ; A
RAM:5EB6 53                          db  53h ; S
RAM:5EB7 49                          db  49h ; I
RAM:5EB8 43                          db  43h ; C
RAM:5EB9 20                          db  20h
RAM:5EBA 56                          db  56h ; V
RAM:5EBB 31                          db  31h ; 1
RAM:5EBC 2E                          db  2Eh ; .
RAM:5EBD 31                          db  31h ; 1
RAM:5EBE 0A                          db  0Ah
RAM:5EBF 0A                          db  0Ah
RAM:5EC0 0D                          db  0Dh
RAM:5EC1
RAM:5EC1             ; =============== S U B R O U T I N E =======================================
RAM:5EC1
RAM:5EC1
RAM:5EC1             sub_5EC1:                               ; CODE XREF: RAM:A26C↓p
RAM:5EC1 00                          nop
RAM:5EC2 00                          nop
RAM:5EC3 03                          inc     bc
RAM:5EC4 06 09                       ld      b, 9
RAM:5EC6 0C                          inc     c
RAM:5EC7 0F                          rrca
RAM:5EC8 02                          ld      (bc), a
RAM:5EC9 05                          dec     b
RAM:5ECA 08                          ex      af, af'
RAM:5ECB 0B                          dec     bc
RAM:5ECC 0E 01                       ld      c, 1
RAM:5ECE 04                          inc     b
RAM:5ECF 07                          rlca
RAM:5ED0 0A                          ld      a, (bc)
RAM:5ED1 0D                          dec     c
RAM:5ED2 00                          nop
RAM:5ED3 00                          nop
RAM:5ED4 00                          nop
RAM:5ED5 00                          nop
RAM:5ED6 00                          nop
RAM:5ED7 00                          nop
RAM:5ED8 00                          nop
RAM:5ED9 00                          nop
RAM:5EDA 00                          nop
RAM:5EDB 00                          nop
RAM:5EDC 00                          nop
RAM:5EDD 00                          nop
RAM:5EDE 00                          nop
RAM:5EDF 00                          nop
RAM:5EE0 00                          nop
RAM:5EE1 00                          nop
RAM:5EE2 00                          nop
RAM:5EE3 00                          nop
RAM:5EE4 00                          nop
RAM:5EE5 00                          nop
RAM:5EE6 00                          nop
RAM:5EE7 00                          nop
RAM:5EE8 00                          nop
RAM:5EE9 00                          nop
RAM:5EEA 00                          nop
RAM:5EEB 00                          nop
RAM:5EEC 00                          nop
RAM:5EED 00                          nop
RAM:5EEE 00                          nop
RAM:5EEF 00                          nop
RAM:5EF0 00                          nop
RAM:5EF1 00                          nop
RAM:5EF2 00                          nop
RAM:5EF3 00                          nop
RAM:5EF4 00                          nop
RAM:5EF5 00                          nop
RAM:5EF6 00                          nop
RAM:5EF7 00                          nop
RAM:5EF8 00                          nop
RAM:5EF9 00                          nop
RAM:5EFA 00                          nop
RAM:5EFB 00                          nop
RAM:5EFB             ; ---------------------------------------------------------------------------
RAM:5EFC 11                          db 11h
RAM:5EFD 21                          db 21h                  ; Built 21/05/86
RAM:5EFE 05                          db 5
RAM:5EFF 86                          db 86h
RAM:5F00             ; ---------------------------------------------------------------------------
RAM:5F00 C3 91 7C                    jp      sub_7C91
RAM:5F00             ; End of function sub_5EC1
RAM:5F00
RAM:5F03             ; ---------------------------------------------------------------------------
RAM:5F03 C3 C8 7C                    jp      DRIVE_OFF
RAM:5F06             ; ---------------------------------------------------------------------------
RAM:5F06 C3 06 62                    jp      dos_error
RAM:5F09             ; ---------------------------------------------------------------------------
RAM:5F09 C3 E6 67                    jp      READ_T2_SF
RAM:5F0C             ; ---------------------------------------------------------------------------
RAM:5F0C C3 13 68                    jp      WRITE_ZERO_SECTOR ; zero sector then write to disk
RAM:5F0F             ; ---------------------------------------------------------------------------
RAM:5F0F C3 20 68                    jp      WRITE_T2_SF
RAM:5F12             ; ---------------------------------------------------------------------------
RAM:5F12 C3 1E 66                    jp      INIT
RAM:5F15             ; ---------------------------------------------------------------------------
RAM:5F15 C3 F8 77                    jp      sub_77F8
RAM:5F18             ; ---------------------------------------------------------------------------
RAM:5F18 C3 4A 78                    jp      FIND_SECTOR_HEADER
RAM:5F1B             ; ---------------------------------------------------------------------------
RAM:5F1B C3 61 7B                    jp      sub_7B61
RAM:5F1E             ; ---------------------------------------------------------------------------
RAM:5F1E C3 BF 7B                    jp      sub_7BBF
RAM:5F21             ; ---------------------------------------------------------------------------
RAM:5F21 C3 B7 79                    jp      READ_WRITE_SEC_DATA ; read/write sector data. B=1 for READ, B=0 for WRITE
RAM:5F24             ; ---------------------------------------------------------------------------
RAM:5F24 C3 34 79                    jp      DELAY_BC
RAM:5F27             ; ---------------------------------------------------------------------------
RAM:5F27 C3 4B 64                    jp      sub_644B
RAM:5F2A             ; ---------------------------------------------------------------------------
RAM:5F2A C3 E7 64                    jp      sub_64E7
RAM:5F2D             ; ---------------------------------------------------------------------------
RAM:5F2D
RAM:5F2D             DOS_ENTRY:                              ; CODE XREF: RAM:A27A↓j
RAM:5F2D 3A 12 86                    ld      a, (LATCH)      ; boot sector jumps here after loading. IY = $FE60
RAM:5F30 FD 77 43                    ld      (iy+43h), a
RAM:5F33 FD 36 14 11                 ld      (iy+14h), 11h
RAM:5F37 FD 36 0B 40                 ld      (iy+0Bh), 40h ; '@' ; Set default drive mask to $40 == Drive#1
RAM:5F3B CD C8 7C                    call    DRIVE_OFF
RAM:5F3E FD 36 7D 00                 ld      (iy+7Dh), 0
RAM:5F42 FD 36 7F 02                 ld      (iy+7Fh), 2
RAM:5F46 FD 36 17 00                 ld      (iy+17h), 0
RAM:5F4A FD 36 2C 00                 ld      (iy+2Ch), 0
RAM:5F4E FD 36 48 00                 ld      (iy+48h), 0
RAM:5F52 21 00 80                    ld      hl, RAM_START
RAM:5F55 36 C3                       ld      (hl), 0C3h      ; Set up RAM vectors to hook into DOS
RAM:5F57 23                          inc     hl
RAM:5F58 11 64 60                    ld      de, loc_6064
RAM:5F5B 73                          ld      (hl), e
RAM:5F5C 23                          inc     hl
RAM:5F5D 72                          ld      (hl), d
RAM:5F5E 23                          inc     hl
RAM:5F5F 36 C3                       ld      (hl), 0C3h
RAM:5F61 23                          inc     hl
RAM:5F62 11 3B 00                    ld      de, 3Bh ; ';'
RAM:5F65 73                          ld      (hl), e
RAM:5F66 23                          inc     hl
RAM:5F67 72                          ld      (hl), d
RAM:5F68 23                          inc     hl
RAM:5F69 36 C3                       ld      (hl), 0C3h
RAM:5F6B 23                          inc     hl
RAM:5F6C 11 3B FF                    ld      de, ROM_to_BANK1 ; switch ROM1 to BANK#1, and jump to (IX)
RAM:5F6F 73                          ld      (hl), e
RAM:5F70 23                          inc     hl
RAM:5F71 72                          ld      (hl), d
RAM:5F72 3E C3                       ld      a, 0C3h
RAM:5F74 32 C4 85                    ld      (byte_85C4), a
RAM:5F77 11 1C FF                    ld      de, loc_FF1C
RAM:5F7A 21 C5 85                    ld      hl, byte_85C5
RAM:5F7D 73                          ld      (hl), e
RAM:5F7E 23                          inc     hl
RAM:5F7F 72                          ld      (hl), d
RAM:5F80 21 A4 5F                    ld      hl, DOS_BASIC2  ; Copy bank switch routines to high memory
RAM:5F83 11 E0 FE                    ld      de, DOS_MSG_COPY
RAM:5F86 01 CD 00                    ld      bc, 0CDh
RAM:5F89 ED B0                       ldir
RAM:5F8B 21 E8 7C                    ld      hl, XLATE_TABLE_2
RAM:5F8E 11 00 FB                    ld      de, XLATE_T2_COPY
RAM:5F91 01 40 00                    ld      bc, 40h ; '@'
RAM:5F94 ED B0                       ldir
RAM:5F96 21 38 7D                    ld      hl, XLATE_TABLE
RAM:5F99 11 96 FB                    ld      de, XLATE_T1_COPY
RAM:5F9C 01 6A 00                    ld      bc, 6Ah ; 'j'
RAM:5F9F ED B0                       ldir
RAM:5FA1 C3 5A FF                    jp      ROM_to_BANK1b
RAM:5FA1             ; ---------------------------------------------------------------------------
RAM:5FA4 1C          DOS_BASIC2:     db 1Ch                  ; DATA XREF: RAM:5F80↑o
RAM:5FA4                                                     ; $5FA4:6071 gets copied to $FEE0:FFAD
RAM:5FA5 0A 44 4F 53+aDosBasicV10:   .ascii '\n'
RAM:5FA5 20 42 41 53+                .ascii 'DOS BASIC V1.0\n'
RAM:5FA5 49 43 20 56+                .ascii '\n'
RAM:5FA5 31 2E 30 0A+                .ascii '\r',0
RAM:5FB8             ; ---------------------------------------------------------------------------
RAM:5FB8 F5                          push    af
RAM:5FB9 3E 00                       ld      a, 0
RAM:5FBB 32 65 86                    ld      (BANK0_COPY), a
RAM:5FBE D3 40                       out     (40h), a
RAM:5FC0 3E 01                       ld      a, 1
RAM:5FC2 32 66 86                    ld      (BANK1_COPY), a
RAM:5FC5 D3 41                       out     (41h), a
RAM:5FC7 F1                          pop     af
RAM:5FC8 D9                          exx
RAM:5FC9 5F                          ld      e, a
RAM:5FCA FE 11                       cp      11h
RAM:5FCC 20 01                       jr      nz, loc_5FCF
RAM:5FCE AF                          xor     a
RAM:5FCF
RAM:5FCF             loc_5FCF:                               ; CODE XREF: RAM:5FCC↑j
RAM:5FCF DD E9                       jp      (ix)
RAM:5FD1             ; ---------------------------------------------------------------------------
RAM:5FD1
RAM:5FD1             HIMEM_FF5A:
RAM:5FD1 F5                          push    af
RAM:5FD2 3E 01                       ld      a, 1
RAM:5FD4 32 66 86                    ld      (BANK1_COPY), a
RAM:5FD7 D3 41                       out     (41h), a
RAM:5FD9 F1                          pop     af
RAM:5FDA E1                          pop     hl
RAM:5FDB D1                          pop     de
RAM:5FDC 47                          ld      b, a
RAM:5FDD 08                          ex      af, af'
RAM:5FDE 78                          ld      a, b
RAM:5FDF C9                          ret
RAM:5FE0             ; ---------------------------------------------------------------------------
RAM:5FE0 4D                          ld      c, l
RAM:5FE1 44                          ld      b, h
RAM:5FE2 08                          ex      af, af'
RAM:5FE3 21 2E FF                    ld      hl, ROM_to_BANK1_x0056 ; switch ROM1 to BANK#1, and return through $0056
RAM:5FE6 E5                          push    hl
RAM:5FE7 3E 06                       ld      a, 6
RAM:5FE9 32 66 86                    ld      (BANK1_COPY), a
RAM:5FEC D3 41                       out     (41h), a
RAM:5FEE 21 90 62                    ld      hl, INTERCEPT_BASIC ; intercept BASIC tokens to provide disk based functionality
RAM:5FF1 E9                          jp      (hl)
RAM:5FF2             ; ---------------------------------------------------------------------------
RAM:5FF2 3E 01                       ld      a, 1
RAM:5FF4 32 66 86                    ld      (BANK1_COPY), a
RAM:5FF7 D3 41                       out     (41h), a
RAM:5FF9 C1                          pop     bc
RAM:5FFA 01 56 00                    ld      bc, 56h ; 'V'
RAM:5FFD C5                          push    bc
RAM:5FFE C9                          ret
RAM:5FFF             ; ---------------------------------------------------------------------------
RAM:5FFF DD E5                       push    ix
RAM:6001 D9                          exx
RAM:6002 21 4E FF                    ld      hl, 0FF4Eh
RAM:6005 E5                          push    hl
RAM:6006 F5                          push    af
RAM:6007 3E 01                       ld      a, 1
RAM:6009 32 66 86                    ld      (BANK1_COPY), a
RAM:600C D3 41                       out     (41h), a
RAM:600E F1                          pop     af
RAM:600F D9                          exx
RAM:6010 DD E9                       jp      (ix)
RAM:6012             ; ---------------------------------------------------------------------------
RAM:6012 F5                          push    af
RAM:6013 3E 06                       ld      a, 6
RAM:6015 32 66 86                    ld      (BANK1_COPY), a
RAM:6018 D3 41                       out     (41h), a
RAM:601A F1                          pop     af
RAM:601B DD E1                       pop     ix
RAM:601D C9                          ret
RAM:601E             ; ---------------------------------------------------------------------------
RAM:601E 3E 01                       ld      a, 1
RAM:6020 32 66 86                    ld      (BANK1_COPY), a
RAM:6023 D3 41                       out     (41h), a
RAM:6025 ED 56                       im      1
RAM:6027 FB                          ei
RAM:6028 C3 59 00                    jp      byte_59
RAM:602B             ; ---------------------------------------------------------------------------
RAM:602B D3 41                       out     (41h), a
RAM:602D
RAM:602D             loc_602D:                               ; CODE XREF: RAM:6050↓j
RAM:602D 15                          dec     d
RAM:602E 20 17                       jr      nz, loc_6047
RAM:6030 53                          ld      d, e
RAM:6031 7E                          ld      a, (hl)
RAM:6032 EE 80                       xor     80h
RAM:6034 77                          ld      (hl), a
RAM:6035 01 80 00                    ld      bc, 80h
RAM:6038
RAM:6038             loc_6038:                               ; CODE XREF: RAM:6045↓j
RAM:6038 C5                          push    bc
RAM:6039 01 89 00                    ld      bc, 89h
RAM:603C
RAM:603C             loc_603C:                               ; CODE XREF: RAM:603F↓j
RAM:603C 0B                          dec     bc
RAM:603D 78                          ld      a, b
RAM:603E B1                          or      c
RAM:603F 20 FB                       jr      nz, loc_603C
RAM:6041 C1                          pop     bc
RAM:6042 0B                          dec     bc
RAM:6043 78                          ld      a, b
RAM:6044 B1                          or      c
RAM:6045 20 F1                       jr      nz, loc_6038
RAM:6047
RAM:6047             loc_6047:                               ; CODE XREF: RAM:602E↑j
RAM:6047 E5                          push    hl
RAM:6048 D5                          push    de
RAM:6049 CD 1B 00                    call    unk_1B
RAM:604C D1                          pop     de
RAM:604D E1                          pop     hl
RAM:604E FE FF                       cp      0FFh
RAM:6050 20 DB                       jr      nz, loc_602D
RAM:6052 E5                          push    hl
RAM:6053 D5                          push    de
RAM:6054 CD 13 00                    call    unk_13
RAM:6057 D1                          pop     de
RAM:6058 E1                          pop     hl
RAM:6059 F5                          push    af
RAM:605A 3E 06                       ld      a, 6
RAM:605C 32 66 86                    ld      (BANK1_COPY), a
RAM:605F D3 41                       out     (41h), a
RAM:6061 F1                          pop     af
RAM:6062 FB                          ei
RAM:6063 C9                          ret
RAM:6064             ; ---------------------------------------------------------------------------
RAM:6064
RAM:6064             loc_6064:                               ; DATA XREF: RAM:5F58↑o
RAM:6064 7E                          ld      a, (hl)
RAM:6065 E3                          ex      (sp), hl
RAM:6066 BE                          cp      (hl)
RAM:6067 23                          inc     hl
RAM:6068 E3                          ex      (sp), hl
RAM:6069 CA 3B 00                    jp      z, byte_3B
RAM:606C C3 67 62                    jp      loc_6267
RAM:606F
RAM:606F             ; =============== S U B R O U T I N E =======================================
RAM:606F
RAM:606F
RAM:606F             sub_606F:                               ; CODE XREF: RAM:6C1E↓p
RAM:606F                                                     ; RAM:6FF3↓p ...
RAM:606F DD 21 3B 00                 ld      ix, 3Bh ; ';'
RAM:6073 DF                          rst     18h
RAM:6074 C9                          ret
RAM:6074             ; End of function sub_606F
RAM:6074
RAM:6075
RAM:6075             ; =============== S U B R O U T I N E =======================================
RAM:6075
RAM:6075
RAM:6075             CHAR_OUT:                               ; CODE XREF: PRINT_STRING_HL+3↓p
RAM:6075                                                     ; RAM:6A42↓p ...
RAM:6075 DD 21 2B 00                 ld      ix, 2Bh ; '+'
RAM:6079 DF                          rst     18h
RAM:607A C9                          ret
RAM:607A             ; End of function CHAR_OUT
RAM:607A
RAM:607B
RAM:607B             ; =============== S U B R O U T I N E =======================================
RAM:607B
RAM:607B
RAM:607B             PRINT_STRING_HL:                        ; CODE XREF: PRINT_STRING_HL+7↓j
RAM:607B                                                     ; WRITE_ZERO_SECTOR-5D9↓p ...
RAM:607B 7E                          ld      a, (hl)
RAM:607C B7                          or      a
RAM:607D C8                          ret     z
RAM:607E CD 75 60                    call    CHAR_OUT
RAM:6081 23                          inc     hl
RAM:6082 18 F7                       jr      PRINT_STRING_HL
RAM:6082             ; End of function PRINT_STRING_HL
RAM:6082
RAM:6082             ; ---------------------------------------------------------------------------
RAM:6084 CC 60       Error2:         dw aFileAlreadyExi      ; "?FILE ALREADY EXISTS"
RAM:6086 E1 60       Error3:         dw aDirectoryFull       ; "?DIRECTORY FULL"
RAM:6088 F1 60       Error4:         dw aDiskWriteProte      ; "?DISK WRITE PROTECTED"
RAM:608A 07 61                       dw aFileNotOpen         ; "?FILE NOT OPEN"
RAM:608C 16 61       Error6:         dw aDiskIOError         ; "?DISK I/O ERROR"
RAM:608E 26 61                       dw aDiskFull            ; "?DISK FULL"
RAM:6090 31 61                       dw aFileAlreadyOpe      ; "?FILE ALREADY OPEN"
RAM:6092 16 61       Error9:         dw aDiskIOError         ; "?DISK I/O ERROR"
RAM:6094 16 61                       dw aDiskIOError         ; "?DISK I/O ERROR"
RAM:6096 44 61       Error11:        dw aUnsupportedDev      ; "?UNSUPPORTED DEVICE"
RAM:6098 58 61                       dw aFileTypeMismat      ; "?FILE TYPE MISMATCH"
RAM:609A 6C 61       Error13:        dw aFileNotFound        ; "?FILE NOT FOUND"
RAM:609C 7C 61                       dw aDiskBufferFull      ; "?DISK BUFFER FULL"
RAM:609E 8E 61                       dw aIllegalRead         ; "?ILLEGAL READ"
RAM:60A0 9C 61                       dw aIllegalWrite        ; "?ILLEGAL WRITE"
RAM:60A2 00 00                       dw 0
RAM:60A4 AB 61                       dw aRecordNotFound      ; "?RECORD NOT FOUND"
RAM:60A6 BD 61                       dw aByteTooLarge        ; "?BYTE # TOO LARGE"
RAM:60A8 CF 61                       dw aIllegalParamet      ; "?ILLEGAL PARAMETER"
RAM:60AA E2 61                       dw aWrongRecordSiz      ; "?WRONG RECORD SIZE"
RAM:60AC F5 61                       dw aUnreadableData      ; "?UNREADABLE DATA"
RAM:60AE 3F 49 4E 53+aInsufficientMe_0:.ascii '?INSUFFICIENT MEMORY FOR DOS\r',0
RAM:60CC 3F 46 49 4C+aFileAlreadyExi:.ascii '?FILE ALREADY EXISTS',0
RAM:60CC 45 20 41 4C+                                        ; DATA XREF: RAM:Error2↑o
RAM:60E1 3F 44 49 52+aDirectoryFull: .ascii '?DIRECTORY FULL',0
RAM:60E1 45 43 54 4F+                                        ; DATA XREF: RAM:Error3↑o
RAM:60F1 3F 44 49 53+aDiskWriteProte:.ascii '?DISK WRITE PROTECTED',0
RAM:60F1 4B 20 57 52+                                        ; DATA XREF: RAM:Error4↑o
RAM:6107 3F 46 49 4C+aFileNotOpen:   .ascii '?FILE NOT OPEN',0
RAM:6107 45 20 4E 4F+                                        ; DATA XREF: RAM:608A↑o
RAM:6116 3F 44 49 53+aDiskIOError:   .ascii '?DISK I/O ERROR',0
RAM:6116 4B 20 49 2F+                                        ; DATA XREF: RAM:Error6↑o
RAM:6116 4F 20 45 52+                                        ; RAM:Error9↑o ...
RAM:6126 3F 44 49 53+aDiskFull:      .ascii '?DISK FULL',0   ; DATA XREF: RAM:608E↑o
RAM:6131 3F 46 49 4C+aFileAlreadyOpe:.ascii '?FILE ALREADY OPEN',0
RAM:6131 45 20 41 4C+                                        ; DATA XREF: RAM:6090↑o
RAM:6144 3F 55 4E 53+aUnsupportedDev:.ascii '?UNSUPPORTED DEVICE',0
RAM:6144 55 50 50 4F+                                        ; DATA XREF: RAM:Error11↑o
RAM:6158 3F 46 49 4C+aFileTypeMismat:.ascii '?FILE TYPE MISMATCH',0
RAM:6158 45 20 54 59+                                        ; DATA XREF: RAM:6098↑o
RAM:616C 3F 46 49 4C+aFileNotFound:  .ascii '?FILE NOT FOUND',0
RAM:616C 45 20 4E 4F+                                        ; DATA XREF: RAM:Error13↑o
RAM:617C 3F 44 49 53+aDiskBufferFull:.ascii '?DISK BUFFER FULL',0
RAM:617C 4B 20 42 55+                                        ; DATA XREF: RAM:609C↑o
RAM:618E 3F 49 4C 4C+aIllegalRead:   .ascii '?ILLEGAL READ',0
RAM:618E 45 47 41 4C+                                        ; DATA XREF: RAM:609E↑o
RAM:619C 3F 49 4C 4C+aIllegalWrite:  .ascii '?ILLEGAL WRITE',0
RAM:619C 45 47 41 4C+                                        ; DATA XREF: RAM:60A0↑o
RAM:61AB 3F 52 45 43+aRecordNotFound:.ascii '?RECORD NOT FOUND',0
RAM:61AB 4F 52 44 20+                                        ; DATA XREF: RAM:60A4↑o
RAM:61BD 3F 42 59 54+aByteTooLarge:  .ascii '?BYTE # TOO LARGE',0
RAM:61BD 45 20 23 20+                                        ; DATA XREF: RAM:60A6↑o
RAM:61CF 3F 49 4C 4C+aIllegalParamet:.ascii '?ILLEGAL PARAMETER',0
RAM:61CF 45 47 41 4C+                                        ; DATA XREF: RAM:60A8↑o
RAM:61E2 3F 57 52 4F+aWrongRecordSiz:.ascii '?WRONG RECORD SIZE',0
RAM:61E2 4E 47 20 52+                                        ; DATA XREF: RAM:60AA↑o
RAM:61F5 3F 55 4E 52+aUnreadableData:.ascii '?UNREADABLE DATA',0
RAM:61F5 45 41 44 41+                                        ; DATA XREF: RAM:60AC↑o
RAM:6206             ; ---------------------------------------------------------------------------
RAM:6206             ; START OF FUNCTION CHUNK FOR WRITE_ZERO_SECTOR
RAM:6206
RAM:6206             dos_error:                              ; CODE XREF: RAM:5F06↑j
RAM:6206                                                     ; RAM:642A↓j ...
RAM:6206 F5                          push    af
RAM:6207 CD C8 7C                    call    DRIVE_OFF
RAM:620A FD 7E 48                    ld      a, (iy+48h)
RAM:620D CB 47                       bit     0, a
RAM:620F C4 4B 6D                    call    nz, sub_6D4B
RAM:6212 F1                          pop     af
RAM:6213 B7                          or      a
RAM:6214 28 3B                       jr      z, loc_6251
RAM:6216 FE 11                       cp      11h
RAM:6218 CA 5E 62                    jp      z, loc_625E
RAM:621B F5                          push    af
RAM:621C CD 7E 62                    call    sub_627E
RAM:621F F1                          pop     af
RAM:6220 FE 01                       cp      1
RAM:6222 28 43                       jr      z, loc_6267
RAM:6224 F5                          push    af
RAM:6225 DD 21 10 59                 ld      ix, 5910h
RAM:6229 DF                          rst     18h
RAM:622A F1                          pop     af
RAM:622B 21 80 60                    ld      hl, 6080h
RAM:622E CB 27                       sla     a
RAM:6230 85                          add     a, l
RAM:6231 6F                          ld      l, a
RAM:6232 3E 00                       ld      a, 0
RAM:6234 8C                          adc     a, h
RAM:6235 67                          ld      h, a
RAM:6236 5E                          ld      e, (hl)
RAM:6237 23                          inc     hl
RAM:6238 56                          ld      d, (hl)
RAM:6239 EB                          ex      de, hl
RAM:623A CD 7B 60                    call    PRINT_STRING_HL
RAM:623D 2A 3F 80                    ld      hl, (word_803F)
RAM:6240 22 DA 83                    ld      (word_83DA), hl
RAM:6243 22 DC 83                    ld      (word_83DC), hl
RAM:6246 23                          inc     hl
RAM:6247 7D                          ld      a, l
RAM:6248 B4                          or      h
RAM:6249 2B                          dec     hl
RAM:624A 28 05                       jr      z, loc_6251
RAM:624C DD 21 9F 44                 ld      ix, 449Fh
RAM:6250 DF                          rst     18h
RAM:6251
RAM:6251             loc_6251:                               ; CODE XREF: WRITE_ZERO_SECTOR-5FF↑j
RAM:6251                                                     ; WRITE_ZERO_SECTOR-5C9↑j
RAM:6251 01 59 00                    ld      bc, 59h ; 'Y'
RAM:6254 2A 3D 80                    ld      hl, (word_803D)
RAM:6257 DD 21 77 5F                 ld      ix, 5F77h
RAM:625B D9                          exx
RAM:625C 18 14                       jr      loc_6272
RAM:625E             ; ---------------------------------------------------------------------------
RAM:625E
RAM:625E             loc_625E:                               ; CODE XREF: WRITE_ZERO_SECTOR-5FB↑j
RAM:625E 3E 11                       ld      a, 11h
RAM:6260 FB                          ei
RAM:6261 DD 21 61 59                 ld      ix, 5961h
RAM:6265 18 0D                       jr      loc_6274
RAM:6267             ; ---------------------------------------------------------------------------
RAM:6267
RAM:6267             loc_6267:                               ; CODE XREF: RAM:606C↑j
RAM:6267                                                     ; WRITE_ZERO_SECTOR-5F1↑j ...
RAM:6267 DD 21 28 22                 ld      ix, 2228h
RAM:626B CD 7E 62                    call    sub_627E
RAM:626E 3E 02                       ld      a, 2
RAM:6270 18 02                       jr      loc_6274
RAM:6272             ; ---------------------------------------------------------------------------
RAM:6272
RAM:6272             loc_6272:                               ; CODE XREF: WRITE_ZERO_SECTOR-5B7↑j
RAM:6272                                                     ; RAM:6448↓j ...
RAM:6272 3E 01                       ld      a, 1
RAM:6272             ; END OF FUNCTION CHUNK FOR WRITE_ZERO_SECTOR
RAM:6274             ; START OF FUNCTION CHUNK FOR sub_627E
RAM:6274
RAM:6274             loc_6274:                               ; CODE XREF: WRITE_ZERO_SECTOR-5AE↑j
RAM:6274                                                     ; WRITE_ZERO_SECTOR-5A3↑j ...
RAM:6274 21 F4 FE                    ld      hl, ROM_to_BANK0_1 ; Put ROM into bank#0 and bank#1, jump to IX
RAM:6277 E9                          jp      (hl)
RAM:6278             ; ---------------------------------------------------------------------------
RAM:6278
RAM:6278             loc_6278:                               ; CODE XREF: sub_627E+F↓j
RAM:6278                                                     ; RAM:6C16↓j ...
RAM:6278 DD 21 5F 00                 ld      ix, 5Fh ; '_'
RAM:627C 18 F6                       jr      loc_6274
RAM:627C             ; END OF FUNCTION CHUNK FOR sub_627E
RAM:627E
RAM:627E             ; =============== S U B R O U T I N E =======================================
RAM:627E
RAM:627E
RAM:627E             sub_627E:                               ; CODE XREF: WRITE_ZERO_SECTOR-5F7↑p
RAM:627E                                                     ; WRITE_ZERO_SECTOR-5A8↑p
RAM:627E
RAM:627E             ; FUNCTION CHUNK AT RAM:6274 SIZE 0000000A BYTES
RAM:627E
RAM:627E ED 5B 3F 80                 ld      de, (word_803F)
RAM:6282 13                          inc     de
RAM:6283 7A                          ld      a, d
RAM:6284 B3                          or      e
RAM:6285 C8                          ret     z
RAM:6286 ED 5B E0 83                 ld      de, (word_83E0)
RAM:628A 7A                          ld      a, d
RAM:628B B3                          or      e
RAM:628C C8                          ret     z
RAM:628D C3 78 62                    jp      loc_6278
RAM:628D             ; End of function sub_627E
RAM:628D
RAM:6290             ; ---------------------------------------------------------------------------
RAM:6290
RAM:6290             INTERCEPT_BASIC:                        ; DATA XREF: RAM:5FEE↑o
RAM:6290                                                     ; RAM:FF2A↓o
RAM:6290 69                          ld      l, c            ; intercept BASIC tokens to provide disk based functionality
RAM:6291 60                          ld      h, b
RAM:6292 E5                          push    hl
RAM:6293 7E                          ld      a, (hl)
RAM:6294 B7                          or      a
RAM:6295 20 03                       jr      nz, loc_629A
RAM:6297
RAM:6297             loc_6297:                               ; CODE XREF: RAM:62C9↓j
RAM:6297                                                     ; RAM:6318↓j
RAM:6297 C3 24 63                    jp      loc_6324
RAM:629A             ; ---------------------------------------------------------------------------
RAM:629A
RAM:629A             loc_629A:                               ; CODE XREF: RAM:6295↑j
RAM:629A F2 28 63                    jp      p, loc_6328
RAM:629D FE B7                       cp      0B7h
RAM:629F 20 02                       jr      nz, loc_62A3
RAM:62A1 18 28                       jr      loc_62CB
RAM:62A3             ; ---------------------------------------------------------------------------
RAM:62A3
RAM:62A3             loc_62A3:                               ; CODE XREF: RAM:629F↑j
RAM:62A3 FE 8A                       cp      8Ah
RAM:62A5 20 02                       jr      nz, loc_62A9
RAM:62A7 18 22                       jr      loc_62CB
RAM:62A9             ; ---------------------------------------------------------------------------
RAM:62A9
RAM:62A9             loc_62A9:                               ; CODE XREF: RAM:62A5↑j
RAM:62A9 FE CB                       cp      0CBh
RAM:62AB 20 02                       jr      nz, loc_62AF
RAM:62AD 18 1C                       jr      loc_62CB
RAM:62AF             ; ---------------------------------------------------------------------------
RAM:62AF
RAM:62AF             loc_62AF:                               ; CODE XREF: RAM:62AB↑j
RAM:62AF FE C4                       cp      0C4h
RAM:62B1 20 02                       jr      nz, loc_62B5
RAM:62B3 18 16                       jr      loc_62CB
RAM:62B5             ; ---------------------------------------------------------------------------
RAM:62B5
RAM:62B5             loc_62B5:                               ; CODE XREF: RAM:62B1↑j
RAM:62B5 FE C1                       cp      0C1h
RAM:62B7 20 02                       jr      nz, loc_62BB
RAM:62B9 18 10                       jr      loc_62CB
RAM:62BB             ; ---------------------------------------------------------------------------
RAM:62BB
RAM:62BB             loc_62BB:                               ; CODE XREF: RAM:62B7↑j
RAM:62BB FE C2                       cp      0C2h
RAM:62BD 20 02                       jr      nz, loc_62C1
RAM:62BF 18 0A                       jr      loc_62CB
RAM:62C1             ; ---------------------------------------------------------------------------
RAM:62C1
RAM:62C1             loc_62C1:                               ; CODE XREF: RAM:62BD↑j
RAM:62C1 FE BF                       cp      0BFh
RAM:62C3 20 02                       jr      nz, loc_62C7
RAM:62C5 18 04                       jr      loc_62CB
RAM:62C7             ; ---------------------------------------------------------------------------
RAM:62C7
RAM:62C7             loc_62C7:                               ; CODE XREF: RAM:62C3↑j
RAM:62C7 FE C3                       cp      0C3h
RAM:62C9 20 CC                       jr      nz, loc_6297
RAM:62CB
RAM:62CB             loc_62CB:                               ; CODE XREF: RAM:62A1↑j
RAM:62CB                                                     ; RAM:62A7↑j ...
RAM:62CB F5                          push    af
RAM:62CC
RAM:62CC             loc_62CC:                               ; CODE XREF: RAM:62D3↓j
RAM:62CC 23                          inc     hl
RAM:62CD 7E                          ld      a, (hl)
RAM:62CE B7                          or      a
RAM:62CF 28 51                       jr      z, loc_6322
RAM:62D1 FE 20                       cp      20h ; ' '
RAM:62D3 28 F7                       jr      z, loc_62CC
RAM:62D5 F1                          pop     af
RAM:62D6 D1                          pop     de
RAM:62D7 FE B7                       cp      0B7h
RAM:62D9 20 05                       jr      nz, loc_62E0
RAM:62DB 01 AE 75                    ld      bc, WRITE
RAM:62DE 18 3E                       jr      HANDLE_TOKEN
RAM:62E0             ; ---------------------------------------------------------------------------
RAM:62E0
RAM:62E0             loc_62E0:                               ; CODE XREF: RAM:62D9↑j
RAM:62E0 FE 8A                       cp      8Ah
RAM:62E2 20 05                       jr      nz, loc_62E9
RAM:62E4 01 C1 67                    ld      bc, RUN         ; Run a BASIC program
RAM:62E7 18 35                       jr      HANDLE_TOKEN
RAM:62E9             ; ---------------------------------------------------------------------------
RAM:62E9
RAM:62E9             loc_62E9:                               ; CODE XREF: RAM:62E2↑j
RAM:62E9 FE CB                       cp      0CBh
RAM:62EB 20 05                       jr      nz, loc_62F2
RAM:62ED 01 D0 64                    ld      bc, SAVE
RAM:62F0 18 2C                       jr      HANDLE_TOKEN
RAM:62F2             ; ---------------------------------------------------------------------------
RAM:62F2
RAM:62F2             loc_62F2:                               ; CODE XREF: RAM:62EB↑j
RAM:62F2 FE C4                       cp      0C4h
RAM:62F4 20 05                       jr      nz, loc_62FB
RAM:62F6 01 25 64                    ld      bc, LOAD
RAM:62F9 18 23                       jr      HANDLE_TOKEN
RAM:62FB             ; ---------------------------------------------------------------------------
RAM:62FB
RAM:62FB             loc_62FB:                               ; CODE XREF: RAM:62F4↑j
RAM:62FB FE C1                       cp      0C1h
RAM:62FD 20 05                       jr      nz, loc_6304
RAM:62FF 01 28 76                    ld      bc, GET
RAM:6302 18 1A                       jr      HANDLE_TOKEN
RAM:6304             ; ---------------------------------------------------------------------------
RAM:6304
RAM:6304             loc_6304:                               ; CODE XREF: RAM:62FD↑j
RAM:6304 FE C2                       cp      0C2h
RAM:6306 20 05                       jr      nz, loc_630D
RAM:6308 01 98 76                    ld      bc, PUT
RAM:630B 18 11                       jr      HANDLE_TOKEN
RAM:630D             ; ---------------------------------------------------------------------------
RAM:630D
RAM:630D             loc_630D:                               ; CODE XREF: RAM:6306↑j
RAM:630D FE BF                       cp      0BFh
RAM:630F 20 05                       jr      nz, loc_6316
RAM:6311 01 ED 71                    ld      bc, OPEN
RAM:6314 18 08                       jr      HANDLE_TOKEN
RAM:6316             ; ---------------------------------------------------------------------------
RAM:6316
RAM:6316             loc_6316:                               ; CODE XREF: RAM:630F↑j
RAM:6316 FE C3                       cp      0C3h
RAM:6318 C2 97 62                    jp      nz, loc_6297
RAM:631B 01 A5 71                    ld      bc, CLOSE
RAM:631E
RAM:631E             HANDLE_TOKEN:                           ; CODE XREF: RAM:62DE↑j
RAM:631E                                                     ; RAM:62E7↑j ...
RAM:631E 2B                          dec     hl              ; we found a "level 2" BASIC token. Exit via the PTR in BC
RAM:631F EB                          ex      de, hl
RAM:6320 18 3C                       jr      exit_via_BC
RAM:6322             ; ---------------------------------------------------------------------------
RAM:6322
RAM:6322             loc_6322:                               ; CODE XREF: RAM:62CF↑j
RAM:6322 F1                          pop     af
RAM:6323 B7                          or      a
RAM:6324
RAM:6324             loc_6324:                               ; CODE XREF: RAM:loc_6297↑j
RAM:6324                                                     ; RAM:6338↓j
RAM:6324 21 0D FF                    ld      hl, ROM_to_BANK1a
RAM:6327 E9                          jp      (hl)
RAM:6328             ; ---------------------------------------------------------------------------
RAM:6328
RAM:6328             loc_6328:                               ; CODE XREF: RAM:loc_629A↑j
RAM:6328 11 61 63                    ld      de, 6361h
RAM:632B 06 FF                       ld      b, 0FFh
RAM:632D
RAM:632D             loc_632D:                               ; CODE XREF: RAM:634C↓j
RAM:632D 4E                          ld      c, (hl)
RAM:632E EB                          ex      de, hl
RAM:632F
RAM:632F             loc_632F:                               ; CODE XREF: RAM:6331↓j
RAM:632F                                                     ; RAM:633B↓j
RAM:632F 23                          inc     hl
RAM:6330 B6                          or      (hl)
RAM:6331 F2 2F 63                    jp      p, loc_632F
RAM:6334 04                          inc     b
RAM:6335 7E                          ld      a, (hl)
RAM:6336 E6 7F                       and     7Fh
RAM:6338 28 EA                       jr      z, loc_6324
RAM:633A B9                          cp      c
RAM:633B 20 F2                       jr      nz, loc_632F
RAM:633D EB                          ex      de, hl
RAM:633E E5                          push    hl
RAM:633F
RAM:633F             loc_633F:                               ; CODE XREF: RAM:6349↓j
RAM:633F 13                          inc     de
RAM:6340 1A                          ld      a, (de)
RAM:6341 B7                          or      a
RAM:6342 FA 4E 63                    jp      m, loc_634E
RAM:6345 4F                          ld      c, a
RAM:6346 23                          inc     hl
RAM:6347 7E                          ld      a, (hl)
RAM:6348 B9                          cp      c
RAM:6349 28 F4                       jr      z, loc_633F
RAM:634B E1                          pop     hl
RAM:634C 18 DF                       jr      loc_632D
RAM:634E             ; ---------------------------------------------------------------------------
RAM:634E
RAM:634E             loc_634E:                               ; CODE XREF: RAM:6342↑j
RAM:634E 78                          ld      a, b
RAM:634F C1                          pop     bc
RAM:6350 C1                          pop     bc
RAM:6351 CB 27                       sla     a
RAM:6353 4F                          ld      c, a
RAM:6354 06 00                       ld      b, 0
RAM:6356 EB                          ex      de, hl
RAM:6357 21 B6 63                    ld      hl, COMMAND_VECTORS
RAM:635A 09                          add     hl, bc
RAM:635B 4E                          ld      c, (hl)
RAM:635C 23                          inc     hl
RAM:635D 46                          ld      b, (hl)
RAM:635E
RAM:635E             exit_via_BC:                            ; CODE XREF: RAM:6320↑j
RAM:635E EB                          ex      de, hl
RAM:635F 23                          inc     hl
RAM:6360 C5                          push    bc              ; return through disk function
RAM:6361 C9                          ret
RAM:6361             ; ---------------------------------------------------------------------------
RAM:6362 CC                          db 0CCh
RAM:6363 4F 41 44    aOad:           .ascii 'OAD'
RAM:6366 D3                          db 0D3h
RAM:6367 41 56 45    aAve:           .ascii 'AVE'
RAM:636A CF                          db 0CFh
RAM:636B 50 45 4E    aPen:           .ascii 'PEN'
RAM:636E C3                          db 0C3h
RAM:636F 4C 4F 53 45 aLose:          .ascii 'LOSE'
RAM:6373 C2                          db 0C2h
RAM:6374 53 41 56 45 aSave:          .ascii 'SAVE'
RAM:6378 C2                          db 0C2h
RAM:6379 4C 4F 41 44 aLoad:          .ascii 'LOAD'
RAM:637D C2                          db 0C2h
RAM:637E 52 55 4E    aRun:           .ascii 'RUN'
RAM:6381 C4                          db 0C4h
RAM:6382 49 52       aIr:            .ascii 'IR'
RAM:6384 C5                          db 0C5h
RAM:6385 52 41       aRa:            .ascii 'RA'
RAM:6387 D2                          db 0D2h
RAM:6388 45 4E       aEn:            .ascii 'EN'
RAM:638A C9                          db 0C9h
RAM:638B 4E 49 54    aNit:           .ascii 'NIT'
RAM:638E C4                          db 0C4h
RAM:638F 52 49 56 45 aRive:          .ascii 'RIVE'
RAM:6393 C9                          db 0C9h
RAM:6394 4E 23       aN:             .ascii 'N#'
RAM:6396 D0                          db 0D0h
RAM:6397 52 23       aR:             .ascii 'R#'
RAM:6399 C4                          db 0C4h
RAM:639A 43 4F 50 59 aCopy:          .ascii 'COPY'
RAM:639E D3                          db 0D3h
RAM:639F 54 41 54 55+aTatus:         .ascii 'TATUS'
RAM:63A4 D7                          db 0D7h
RAM:63A5 52 49 54 45 aRite:          .ascii 'RITE'
RAM:63A9 C1                          db 0C1h
RAM:63AA 43 43 45 50+aCcept:         .ascii 'CCEPT'
RAM:63AF D0                          db 0D0h
RAM:63B0 55 54       aUt:            .ascii 'UT'
RAM:63B2 C7                          db 0C7h
RAM:63B3 45 54       aEt:            .ascii 'ET'
RAM:63B5 80                          db  80h
RAM:63B6 25 64       COMMAND_VECTORS:dw LOAD                 ; DATA XREF: RAM:6357↑o
RAM:63B8 D0 64                       dw SAVE
RAM:63BA ED 71                       dw OPEN
RAM:63BC A5 71                       dw CLOSE
RAM:63BE 42 68                       dw BSAVE
RAM:63C0 B4 68                       dw BLOAD
RAM:63C2 DF 68                       dw BRUN
RAM:63C4 0E 6A                       dw DIR
RAM:63C6 8A 6A                       dw ERASE
RAM:63C8 F6 68                       dw RENAME
RAM:63CA 1E 66                       dw INIT
RAM:63CC 8F 6E                       dw DRIVE
RAM:63CE ED 6E                       dw IN_HASH
RAM:63D0 D6 6F                       dw PR_HASH
RAM:63D2 07 6C                       dw DCOPY
RAM:63D4 49 6B                       dw STATUS
RAM:63D6 AE 75                       dw WRITE
RAM:63D8 B7 75                       dw ACCEPT
RAM:63DA 98 76                       dw PUT
RAM:63DC 28 76                       dw GET
RAM:63DE             ; ---------------------------------------------------------------------------
RAM:63DE FD E5                       push    iy
RAM:63E0 06 08                       ld      b, 8
RAM:63E2
RAM:63E2             loc_63E2:                               ; CODE XREF: RAM:63E8↓j
RAM:63E2 FD 36 01 20                 ld      (iy+1), 20h ; ' '
RAM:63E6 FD 23                       inc     iy
RAM:63E8 10 F8                       djnz    loc_63E2
RAM:63EA CD BA 6E                    call    sub_6EBA
RAM:63ED FD E1                       pop     iy
RAM:63EF 3A 8E 83                    ld      a, (byte_838E)
RAM:63F2 FE 03                       cp      3
RAM:63F4 3E 14                       ld      a, 14h
RAM:63F6 C0                          ret     nz
RAM:63F7 ED 5B 2B 85                 ld      de, (word_852B)
RAM:63FB 1A                          ld      a, (de)
RAM:63FC B7                          or      a
RAM:63FD 3E 14                       ld      a, 14h
RAM:63FF C8                          ret     z
RAM:6400 1A                          ld      a, (de)
RAM:6401 FE 09                       cp      9
RAM:6403 47                          ld      b, a
RAM:6404 38 02                       jr      c, loc_6408
RAM:6406 06 08                       ld      b, 8
RAM:6408
RAM:6408             loc_6408:                               ; CODE XREF: RAM:6404↑j
RAM:6408 13                          inc     de
RAM:6409 E5                          push    hl
RAM:640A 1A                          ld      a, (de)
RAM:640B 6F                          ld      l, a
RAM:640C 13                          inc     de
RAM:640D 1A                          ld      a, (de)
RAM:640E 67                          ld      h, a
RAM:640F FD E5                       push    iy
RAM:6411
RAM:6411             loc_6411:                               ; CODE XREF: RAM:6418↓j
RAM:6411 7E                          ld      a, (hl)
RAM:6412 FD 77 01                    ld      (iy+1), a
RAM:6415 FD 23                       inc     iy
RAM:6417 23                          inc     hl
RAM:6418 10 F7                       djnz    loc_6411
RAM:641A FD E1                       pop     iy
RAM:641C E1                          pop     hl
RAM:641D AF                          xor     a
RAM:641E C9                          ret
RAM:641F             ; ---------------------------------------------------------------------------
RAM:641F CD 09 78                    call    sub_7809
RAM:6422 C3 FB 77                    jp      loc_77FB
RAM:6425             ; ---------------------------------------------------------------------------
RAM:6425
RAM:6425             LOAD:                                   ; DATA XREF: RAM:62F6↑o
RAM:6425                                                     ; RAM:COMMAND_VECTORS↑o
RAM:6425 CD F8 77                    call    sub_77F8
RAM:6428 E5                          push    hl
RAM:6429 B7                          or      a
RAM:642A C2 06 62                    jp      nz, dos_error
RAM:642D FD 36 09 54                 ld      (iy+9), 54h ; 'T'
RAM:6431 CD 4B 64                    call    sub_644B
RAM:6434 B7                          or      a
RAM:6435 C2 06 62                    jp      nz, dos_error
RAM:6438 21 A8 21                    ld      hl, 21A8h
RAM:643B DD 21 D3 62                 ld      ix, 62D3h
RAM:643F DF                          rst     18h
RAM:6440 2A 41 80                    ld      hl, (word_8041)
RAM:6443 E5                          push    hl
RAM:6444 DD 21 CE 23                 ld      ix, 23CEh
RAM:6448 C3 72 62                    jp      loc_6272
RAM:644B
RAM:644B             ; =============== S U B R O U T I N E =======================================
RAM:644B
RAM:644B
RAM:644B             sub_644B:                               ; CODE XREF: RAM:5F27↑j
RAM:644B                                                     ; RAM:6431↑p ...
RAM:644B CD BF 7B                    call    sub_7BBF
RAM:644E FE 02                       cp      2
RAM:6450 CA 56 64                    jp      z, loc_6456
RAM:6453 3E 0D                       ld      a, 0Dh
RAM:6455 C9                          ret
RAM:6456             ; ---------------------------------------------------------------------------
RAM:6456
RAM:6456             loc_6456:                               ; CODE XREF: sub_644B+5↑j
RAM:6456 FD 7E 09                    ld      a, (iy+9)
RAM:6459 FD BE 0A                    cp      (iy+0Ah)
RAM:645C 3E 0C                       ld      a, 0Ch
RAM:645E C0                          ret     nz
RAM:645F
RAM:645F             loc_645F:                               ; CODE XREF: RAM:6C4E↓p
RAM:645F 1A                          ld      a, (de)
RAM:6460 13                          inc     de
RAM:6461 FD 77 12                    ld      (iy+12h), a
RAM:6464 1A                          ld      a, (de)
RAM:6465 13                          inc     de
RAM:6466 FD 77 11                    ld      (iy+11h), a
RAM:6469 EB                          ex      de, hl
RAM:646A 5E                          ld      e, (hl)
RAM:646B 23                          inc     hl
RAM:646C 56                          ld      d, (hl)
RAM:646D 23                          inc     hl
RAM:646E ED 53 41 80                 ld      (word_8041), de
RAM:6472 FD 73 0E                    ld      (iy+0Eh), e
RAM:6475 FD 72 0F                    ld      (iy+0Fh), d
RAM:6478 5E                          ld      e, (hl)
RAM:6479 23                          inc     hl
RAM:647A 56                          ld      d, (hl)
RAM:647B ED 53 E9 83                 ld      (word_83E9), de
RAM:647F
RAM:647F             loc_647F:                               ; CODE XREF: sub_644B+68↓j
RAM:647F 06 01                       ld      b, 1
RAM:6481 CD B7 79                    call    READ_WRITE_SEC_DATA ; read/write sector data. B=1 for READ, B=0 for WRITE
RAM:6484 B7                          or      a
RAM:6485 C2 C3 64                    jp      nz, loc_64C3
RAM:6488 21 56 FC                    ld      hl, UNENCODED_BUFFER
RAM:648B E5                          push    hl
RAM:648C 11 FE 00                    ld      de, 0FEh
RAM:648F 19                          add     hl, de
RAM:6490 7E                          ld      a, (hl)
RAM:6491 23                          inc     hl
RAM:6492 FD 77 12                    ld      (iy+12h), a
RAM:6495 7E                          ld      a, (hl)
RAM:6496 FD 77 11                    ld      (iy+11h), a
RAM:6499 E1                          pop     hl
RAM:649A FD 5E 0E                    ld      e, (iy+0Eh)
RAM:649D FD 56 0F                    ld      d, (iy+0Fh)
RAM:64A0 01 FE 00                    ld      bc, 0FEh
RAM:64A3 FD 7E 12                    ld      a, (iy+12h)
RAM:64A6 FD B6 11                    or      (iy+11h)
RAM:64A9 28 0A                       jr      z, loc_64B5
RAM:64AB ED B0                       ldir
RAM:64AD FD 73 0E                    ld      (iy+0Eh), e
RAM:64B0 FD 72 0F                    ld      (iy+0Fh), d
RAM:64B3 18 CA                       jr      loc_647F
RAM:64B5             ; ---------------------------------------------------------------------------
RAM:64B5
RAM:64B5             loc_64B5:                               ; CODE XREF: sub_644B+5E↑j
RAM:64B5 E5                          push    hl
RAM:64B6 2A E9 83                    ld      hl, (word_83E9)
RAM:64B9 B7                          or      a
RAM:64BA ED 52                       sbc     hl, de
RAM:64BC 4D                          ld      c, l
RAM:64BD 44                          ld      b, h
RAM:64BE E1                          pop     hl
RAM:64BF ED B0                       ldir
RAM:64C1 AF                          xor     a
RAM:64C2 C9                          ret
RAM:64C3             ; ---------------------------------------------------------------------------
RAM:64C3
RAM:64C3             loc_64C3:                               ; CODE XREF: sub_644B+3A↑j
RAM:64C3 2A 41 80                    ld      hl, (word_8041)
RAM:64C6 36 00                       ld      (hl), 0
RAM:64C8 23                          inc     hl
RAM:64C9 36 00                       ld      (hl), 0
RAM:64CB 23                          inc     hl
RAM:64CC 22 E9 83                    ld      (word_83E9), hl
RAM:64CF C9                          ret
RAM:64CF             ; End of function sub_644B
RAM:64CF
RAM:64D0             ; ---------------------------------------------------------------------------
RAM:64D0
RAM:64D0             SAVE:                                   ; DATA XREF: RAM:62ED↑o
RAM:64D0                                                     ; RAM:63B8↑o
RAM:64D0 CD F8 77                    call    sub_77F8
RAM:64D3 E5                          push    hl
RAM:64D4 B7                          or      a
RAM:64D5 C2 06 62                    jp      nz, dos_error
RAM:64D8 CD D3 7C                    call    SELECT_DRIVE
RAM:64DB FD 36 09 54                 ld      (iy+9), 54h ; 'T'
RAM:64DF E5                          push    hl
RAM:64E0 DD 21 4D 00                 ld      ix, 4Dh ; 'M'
RAM:64E4 DF                          rst     18h
RAM:64E5 E1                          pop     hl
RAM:64E6 E1                          pop     hl
RAM:64E7
RAM:64E7             ; =============== S U B R O U T I N E =======================================
RAM:64E7
RAM:64E7
RAM:64E7             sub_64E7:                               ; CODE XREF: RAM:5F2A↑j
RAM:64E7                                                     ; RAM:6C58↓p
RAM:64E7
RAM:64E7             ; FUNCTION CHUNK AT RAM:65A5 SIZE 0000006C BYTES
RAM:64E7
RAM:64E7 ED 5B E9 83                 ld      de, (word_83E9)
RAM:64EB D5                          push    de
RAM:64EC ED 5B 41 80                 ld      de, (word_8041)
RAM:64F0 D5                          push    de
RAM:64F1 E5                          push    hl
RAM:64F2
RAM:64F2             loc_64F2:                               ; CODE XREF: RAM:6898↓j
RAM:64F2 ED 5B 41 80                 ld      de, (word_8041)
RAM:64F6 FD 73 0E                    ld      (iy+0Eh), e
RAM:64F9 FD 72 0F                    ld      (iy+0Fh), d
RAM:64FC CD E6 67                    call    READ_T2_SF
RAM:64FF CD 61 7B                    call    sub_7B61
RAM:6502 B7                          or      a
RAM:6503 C2 F2 65                    jp      nz, loc_65F2
RAM:6506 CD BF 7B                    call    sub_7BBF
RAM:6509 FE 02                       cp      2
RAM:650B CA F2 65                    jp      z, loc_65F2
RAM:650E FE 03                       cp      3
RAM:6510 CA F2 65                    jp      z, loc_65F2
RAM:6513
RAM:6513             loc_6513:                               ; CODE XREF: sub_64E7+89↓j
RAM:6513 FD 7E 16                    ld      a, (iy+16h)
RAM:6516 FD B6 15                    or      (iy+15h)
RAM:6519 CA BC 65                    jp      z, loc_65BC
RAM:651C FD 56 16                    ld      d, (iy+16h)
RAM:651F FD 5E 15                    ld      e, (iy+15h)
RAM:6522 FD 72 12                    ld      (iy+12h), d
RAM:6525 FD 73 11                    ld      (iy+11h), e
RAM:6528 CD 61 7B                    call    sub_7B61
RAM:652B B7                          or      a
RAM:652C C2 F2 65                    jp      nz, loc_65F2
RAM:652F CD 05 68                    call    ZERO_UNENC_BUFFER ; clear unencoded buffer
RAM:6532 FD 6E 0E                    ld      l, (iy+0Eh)
RAM:6535 FD 66 0F                    ld      h, (iy+0Fh)
RAM:6538 E5                          push    hl
RAM:6539 ED 5B E9 83                 ld      de, (word_83E9)
RAM:653D B7                          or      a
RAM:653E ED 52                       sbc     hl, de
RAM:6540 D2 73 65                    jp      nc, loc_6573
RAM:6543 11 FE 00                    ld      de, 0FEh
RAM:6546 19                          add     hl, de
RAM:6547 DA B6 65                    jp      c, loc_65B6
RAM:654A ED 5B E9 83                 ld      de, (word_83E9)
RAM:654E 19                          add     hl, de
RAM:654F FD 75 0E                    ld      (iy+0Eh), l
RAM:6552 FD 74 0F                    ld      (iy+0Fh), h
RAM:6555 E1                          pop     hl
RAM:6556 11 56 FC                    ld      de, UNENCODED_BUFFER
RAM:6559 01 FE 00                    ld      bc, 0FEh
RAM:655C ED B0                       ldir
RAM:655E FD 7E 16                    ld      a, (iy+16h)
RAM:6561 12                          ld      (de), a
RAM:6562 13                          inc     de
RAM:6563 FD 7E 15                    ld      a, (iy+15h)
RAM:6566 12                          ld      (de), a
RAM:6567
RAM:6567             loc_6567:                               ; CODE XREF: sub_64E7+CD↓j
RAM:6567 06 00                       ld      b, 0
RAM:6569 CD B7 79                    call    READ_WRITE_SEC_DATA ; read/write sector data. B=1 for READ, B=0 for WRITE
RAM:656C B7                          or      a
RAM:656D C2 F2 65                    jp      nz, loc_65F2
RAM:6570 C3 13 65                    jp      loc_6513
RAM:6573             ; ---------------------------------------------------------------------------
RAM:6573
RAM:6573             loc_6573:                               ; CODE XREF: sub_64E7+59↑j
RAM:6573                                                     ; sub_64E7+D3↓j
RAM:6573 E5                          push    hl
RAM:6574 CD 79 65                    call    sub_6579
RAM:6577 18 2C                       jr      loc_65A5
RAM:6577             ; End of function sub_64E7
RAM:6577
RAM:6579
RAM:6579             ; =============== S U B R O U T I N E =======================================
RAM:6579
RAM:6579
RAM:6579             sub_6579:                               ; CODE XREF: sub_64E7+8D↑p
RAM:6579                                                     ; RAM:6AFA↓p
RAM:6579 21 FF F9                    ld      hl, byte_F9FF
RAM:657C FD 7E 16                    ld      a, (iy+16h)
RAM:657F 06 03                       ld      b, 3
RAM:6581 90                          sub     b
RAM:6582 CB 27                       sla     a
RAM:6584 5F                          ld      e, a
RAM:6585 16 00                       ld      d, 0
RAM:6587 FD 7E 15                    ld      a, (iy+15h)
RAM:658A FE 08                       cp      8
RAM:658C 3F                          ccf
RAM:658D ED 5A                       adc     hl, de
RAM:658F E6 07                       and     7
RAM:6591 3C                          inc     a
RAM:6592 47                          ld      b, a
RAM:6593 4E                          ld      c, (hl)
RAM:6594 CB 01                       rlc     c
RAM:6596
RAM:6596             loc_6596:                               ; CODE XREF: sub_6579+1F↓j
RAM:6596 CB 09                       rrc     c
RAM:6598 10 FC                       djnz    loc_6596
RAM:659A CB 81                       res     0, c
RAM:659C 47                          ld      b, a
RAM:659D CB 09                       rrc     c
RAM:659F
RAM:659F             loc_659F:                               ; CODE XREF: sub_6579+28↓j
RAM:659F CB 01                       rlc     c
RAM:65A1 10 FC                       djnz    loc_659F
RAM:65A3 71                          ld      (hl), c
RAM:65A4 C9                          ret
RAM:65A4             ; End of function sub_6579
RAM:65A4
RAM:65A5             ; ---------------------------------------------------------------------------
RAM:65A5             ; START OF FUNCTION CHUNK FOR sub_64E7
RAM:65A5
RAM:65A5             loc_65A5:                               ; CODE XREF: sub_64E7+90↑j
RAM:65A5 C1                          pop     bc
RAM:65A6 E1                          pop     hl
RAM:65A7 11 56 FC                    ld      de, UNENCODED_BUFFER
RAM:65AA ED B0                       ldir
RAM:65AC FD 36 16 00                 ld      (iy+16h), 0
RAM:65B0 FD 36 15 00                 ld      (iy+15h), 0
RAM:65B4 18 B1                       jr      loc_6567
RAM:65B6             ; ---------------------------------------------------------------------------
RAM:65B6
RAM:65B6             loc_65B6:                               ; CODE XREF: sub_64E7+60↑j
RAM:65B6 EB                          ex      de, hl
RAM:65B7 B7                          or      a
RAM:65B8 ED 52                       sbc     hl, de
RAM:65BA 18 B7                       jr      loc_6573
RAM:65BC             ; ---------------------------------------------------------------------------
RAM:65BC
RAM:65BC             loc_65BC:                               ; CODE XREF: sub_64E7+32↑j
RAM:65BC CD 05 68                    call    ZERO_UNENC_BUFFER ; clear unencoded buffer
RAM:65BF 21 FF F9                    ld      hl, byte_F9FF
RAM:65C2 11 56 FC                    ld      de, UNENCODED_BUFFER
RAM:65C5 01 9A 00                    ld      bc, 154
RAM:65C8 ED B0                       ldir
RAM:65CA FD 36 12 02                 ld      (iy+12h), 2     ; Track#2, Sector#F
RAM:65CE FD 36 11 0F                 ld      (iy+11h), 0Fh
RAM:65D2 06 00                       ld      b, 0
RAM:65D4 CD B7 79                    call    READ_WRITE_SEC_DATA ; read/write sector data. B=1 for READ, B=0 for WRITE
RAM:65D7 B7                          or      a
RAM:65D8 20 08                       jr      nz, loc_65E2
RAM:65DA CD 33 6B                    call    sub_6B33
RAM:65DD 06 00                       ld      b, 0
RAM:65DF CD B7 79                    call    READ_WRITE_SEC_DATA ; read/write sector data. B=1 for READ, B=0 for WRITE
RAM:65E2
RAM:65E2             loc_65E2:                               ; CODE XREF: sub_64E7+F1↑j
RAM:65E2 E1                          pop     hl
RAM:65E3 D1                          pop     de
RAM:65E4 ED 53 41 80                 ld      (word_8041), de
RAM:65E8 D1                          pop     de
RAM:65E9 ED 53 E9 83                 ld      (word_83E9), de
RAM:65ED B7                          or      a
RAM:65EE C2 06 62                    jp      nz, dos_error
RAM:65F1 C9                          ret
RAM:65F2             ; ---------------------------------------------------------------------------
RAM:65F2
RAM:65F2             loc_65F2:                               ; CODE XREF: sub_64E7+1C↑j
RAM:65F2                                                     ; sub_64E7+24↑j ...
RAM:65F2 FE 11                       cp      11h
RAM:65F4 20 1A                       jr      nz, loc_6610
RAM:65F6 CD BF 7B                    call    sub_7BBF
RAM:65F9 FE 02                       cp      2
RAM:65FB 3E 11                       ld      a, 11h
RAM:65FD 20 11                       jr      nz, loc_6610
RAM:65FF EB                          ex      de, hl
RAM:6600 11 F6 FF                    ld      de, 0FFF6h
RAM:6603 19                          add     hl, de
RAM:6604 36 01                       ld      (hl), 1
RAM:6606 06 00                       ld      b, 0
RAM:6608 CD B7 79                    call    READ_WRITE_SEC_DATA ; read/write sector data. B=1 for READ, B=0 for WRITE
RAM:660B B7                          or      a
RAM:660C 20 02                       jr      nz, loc_6610
RAM:660E 3E 11                       ld      a, 11h
RAM:6610
RAM:6610             loc_6610:                               ; CODE XREF: sub_64E7+10D↑j
RAM:6610                                                     ; sub_64E7+116↑j ...
RAM:6610 E1                          pop     hl
RAM:6610             ; END OF FUNCTION CHUNK FOR sub_64E7
RAM:6611             ; START OF FUNCTION CHUNK FOR sub_689B
RAM:6611
RAM:6611             loc_6611:                               ; CODE XREF: RAM:6872↓j
RAM:6611                                                     ; sub_689B+16↓j
RAM:6611 D1                          pop     de
RAM:6612 ED 53 41 80                 ld      (word_8041), de
RAM:6616 D1                          pop     de
RAM:6617 ED 53 E9 83                 ld      (word_83E9), de
RAM:661B C3 06 62                    jp      dos_error
RAM:661B             ; END OF FUNCTION CHUNK FOR sub_689B
RAM:661E             ; ---------------------------------------------------------------------------
RAM:661E
RAM:661E             INIT:                                   ; CODE XREF: RAM:5F12↑j
RAM:661E                                                     ; DATA XREF: RAM:63CA↑o
RAM:661E CD ED 69                    call    GET_DRIVESPEC
RAM:6621 CD F4 69                    call    CHECK_DOUBLE_SIDED
RAM:6624 E5                          push    hl
RAM:6625 FD CB 43 BE                 res     7, (iy+43h)     ; Select Side #0
RAM:6629 CD 8F 66                    call    FORMAT_DISK     ; format side #0
RAM:662C B7                          or      a
RAM:662D C2 06 62                    jp      nz, dos_error
RAM:6630 3A 40 FB                    ld      a, (DOUBLE_SIDED)
RAM:6633 B7                          or      a
RAM:6634 28 0B                       jr      z, loc_6641
RAM:6636 FD CB 43 FE                 set     7, (iy+43h)     ; select side #1
RAM:663A CD 8F 66                    call    FORMAT_DISK     ; format side #1
RAM:663D B7                          or      a
RAM:663E C2 06 62                    jp      nz, dos_error
RAM:6641
RAM:6641             loc_6641:                               ; CODE XREF: RAM:6634↑j
RAM:6641 FD 36 12 00                 ld      (iy+12h), 0     ; start at Track #0
RAM:6645 FD 36 11 00                 ld      (iy+11h), 0     ; Sector #0
RAM:6649 3E 22                       ld      a, 34           ; 34 sectors to write
RAM:664B 32 58 FE                    ld      (SECTORS_LEFT), a
RAM:664E 21 00 5E                    ld      hl, DOS_START   ; start of DOS Image , including Boot Sector
RAM:6651
RAM:6651             loc_6651:                               ; CODE XREF: RAM:6675↓j
RAM:6651                                                     ; RAM:667E↓j
RAM:6651 11 56 FC                    ld      de, UNENCODED_BUFFER
RAM:6654 01 00 01                    ld      bc, 256
RAM:6657 ED B0                       ldir                    ; Work on sector size chunks
RAM:6659 E5                          push    hl
RAM:665A 06 00                       ld      b, 0            ; B=0 : Write mode
RAM:665C CD B7 79                    call    READ_WRITE_SEC_DATA ; read/write sector data. B=1 for READ, B=0 for WRITE
RAM:665F E1                          pop     hl
RAM:6660 B7                          or      a
RAM:6661 C2 06 62                    jp      nz, dos_error
RAM:6664 3A 58 FE                    ld      a, (SECTORS_LEFT)
RAM:6667 3D                          dec     a
RAM:6668 32 58 FE                    ld      (SECTORS_LEFT), a
RAM:666B 28 13                       jr      z, write_finished
RAM:666D FD 34 11                    inc     (iy+11h)
RAM:6670 FD 7E 11                    ld      a, (iy+11h)
RAM:6673 FE 10                       cp      16              ; keep going till sectors == 16, then..
RAM:6675 38 DA                       jr      c, loc_6651
RAM:6677 FD 36 11 00                 ld      (iy+11h), 0     ; reset to sector #0
RAM:667B FD 34 12                    inc     (iy+12h)        ; increment track number
RAM:667E 18 D1                       jr      loc_6651
RAM:6680             ; ---------------------------------------------------------------------------
RAM:6680
RAM:6680             write_finished:                         ; CODE XREF: RAM:666B↑j
RAM:6680                                                     ; RAM:668B↓j
RAM:6680 FD 34 11                    inc     (iy+11h)        ; We are now at Track #2, Sector #3
RAM:6683 CD 13 68                    call    WRITE_ZERO_SECTOR ; zero sector then write to disk
RAM:6686 FD 7E 11                    ld      a, (iy+11h)
RAM:6689 FE 0F                       cp      0Fh             ; clear the rest of the sectors on Track #2
RAM:668B 20 F3                       jr      nz, write_finished
RAM:668D E1                          pop     hl
RAM:668E C9                          ret
RAM:668F
RAM:668F             ; =============== S U B R O U T I N E =======================================
RAM:668F
RAM:668F
RAM:668F             FORMAT_DISK:                            ; CODE XREF: RAM:6629↑p
RAM:668F                                                     ; RAM:663A↑p
RAM:668F CD D3 7C                    call    SELECT_DRIVE
RAM:6692 3E 11                       ld      a, 11h
RAM:6694 FD 77 14                    ld      (iy+14h), a
RAM:6697 AF                          xor     a
RAM:6698 FD 77 11                    ld      (iy+11h), a
RAM:669B FD 77 7F                    ld      (iy+7Fh), a
RAM:669E FD 77 7E                    ld      (iy+7Eh), a
RAM:66A1 3A 40 FB                    ld      a, (DOUBLE_SIDED)
RAM:66A4 FD 77 7C                    ld      (iy+7Ch), a
RAM:66A7 06 28                       ld      b, 40
RAM:66A9 CD 77 79                    call    STEP_HEAD_OUT   ; ensure we are at track#0 to begin
RAM:66AC 3E 0E                       ld      a, 14           ; Set initial gap between sectors at 14 bytes of $FF self-sync
RAM:66AE 32 5B FE                    ld      (SECTOR_GAP), a
RAM:66B1
RAM:66B1             format_track:                           ; CODE XREF: FORMAT_DISK+118↓j
RAM:66B1                                                     ; FORMAT_DISK+129↓j
RAM:66B1 06 7F                       ld      b, 127
RAM:66B3 0E 10                       ld      c, 16           ; 16 sectors per track
RAM:66B5 16 FF                       ld      d, 0FFh
RAM:66B7 FD 7E 43                    ld      a, (iy+43h)
RAM:66BA E6 BF                       and     0BFh            ; 10111111  - turn on *WRREQ bit 6
RAM:66BC FD 77 43                    ld      (iy+43h), a
RAM:66BF D3 10                       out     (10h), a        ; turn on *WRREQ - self-sync on by default.
RAM:66C1 7A                          ld      a, d            ; D = $FF here
RAM:66C2 D3 13                       out     (13h), a
RAM:66C4
RAM:66C4             loc_66C4:                               ; CODE XREF: FORMAT_DISK+38↓j
RAM:66C4                                                     ; FORMAT_DISK+D7↓j
RAM:66C4 CD 11 79                    call    WRITE_DISK_BYTE_D
RAM:66C7 10 FB                       djnz    loc_66C4        ; Write $FF 127 times on first loop, sector_gap on rest
RAM:66C9 16 D5                       ld      d, 0D5h
RAM:66CB CD 11 79                    call    WRITE_DISK_BYTE_D
RAM:66CE D3 11                       out     (11h), a        ; self-sync *off*
RAM:66D0 16 AA                       ld      d, 0AAh
RAM:66D2 CD 11 79                    call    WRITE_DISK_BYTE_D
RAM:66D5 16 96                       ld      d, 96h
RAM:66D7 CD 11 79                    call    WRITE_DISK_BYTE_D
RAM:66DA FD 56 7C                    ld      d, (iy+7Ch)
RAM:66DD 42                          ld      b, d
RAM:66DE CD 1A 79                    call    WRITE_4X4_D
RAM:66E1 FD 7E 7F                    ld      a, (iy+7Fh)
RAM:66E4 57                          ld      d, a
RAM:66E5 A8                          xor     b
RAM:66E6 47                          ld      b, a
RAM:66E7 CD 1A 79                    call    WRITE_4X4_D
RAM:66EA FD 7E 7E                    ld      a, (iy+7Eh)
RAM:66ED 57                          ld      d, a
RAM:66EE A8                          xor     b
RAM:66EF 47                          ld      b, a
RAM:66F0 CD 1A 79                    call    WRITE_4X4_D
RAM:66F3 50                          ld      d, b
RAM:66F4 CD 1A 79                    call    WRITE_4X4_D
RAM:66F7 16 DE                       ld      d, 0DEh
RAM:66F9 CD 11 79                    call    WRITE_DISK_BYTE_D
RAM:66FC 16 AA                       ld      d, 0AAh
RAM:66FE CD 11 79                    call    WRITE_DISK_BYTE_D
RAM:6701 16 EB                       ld      d, 0EBh
RAM:6703 CD 11 79                    call    WRITE_DISK_BYTE_D
RAM:6706 06 04                       ld      b, 4            ; 5 bytes of $FF self-sync
RAM:6708 16 FF                       ld      d, 0FFh
RAM:670A CD 11 79                    call    WRITE_DISK_BYTE_D
RAM:670D D3 11                       out     (11h), a        ; self-sync *on*
RAM:670F
RAM:670F             loc_670F:                               ; CODE XREF: FORMAT_DISK+83↓j
RAM:670F CD 11 79                    call    WRITE_DISK_BYTE_D
RAM:6712 10 FB                       djnz    loc_670F
RAM:6714 16 D5                       ld      d, 0D5h
RAM:6716 CD 11 79                    call    WRITE_DISK_BYTE_D
RAM:6719 D3 11                       out     (11h), a        ; self-sync *off*
RAM:671B 16 AA                       ld      d, 0AAh
RAM:671D CD 11 79                    call    WRITE_DISK_BYTE_D
RAM:6720 16 AD                       ld      d, 0ADh
RAM:6722 CD 11 79                    call    WRITE_DISK_BYTE_D
RAM:6725 06 54                       ld      b, 54h ; 'T'
RAM:6727 16 E6                       ld      d, 0E6h
RAM:6729 CD 11 79                    call    WRITE_DISK_BYTE_D
RAM:672C 16 96                       ld      d, 96h
RAM:672E
RAM:672E             loc_672E:                               ; CODE XREF: FORMAT_DISK+A2↓j
RAM:672E CD 11 79                    call    WRITE_DISK_BYTE_D
RAM:6731 10 FB                       djnz    loc_672E
RAM:6733 16 B7                       ld      d, 0B7h
RAM:6735 CD 11 79                    call    WRITE_DISK_BYTE_D
RAM:6738 06 00                       ld      b, 0
RAM:673A 16 96                       ld      d, 96h
RAM:673C
RAM:673C             loc_673C:                               ; CODE XREF: FORMAT_DISK+B0↓j
RAM:673C CD 11 79                    call    WRITE_DISK_BYTE_D
RAM:673F 10 FB                       djnz    loc_673C
RAM:6741 16 F9                       ld      d, 0F9h
RAM:6743 CD 11 79                    call    WRITE_DISK_BYTE_D
RAM:6746 16 DE                       ld      d, 0DEh
RAM:6748 CD 11 79                    call    WRITE_DISK_BYTE_D
RAM:674B 16 AA                       ld      d, 0AAh
RAM:674D CD 11 79                    call    WRITE_DISK_BYTE_D
RAM:6750 16 EB                       ld      d, 0EBh
RAM:6752 CD 11 79                    call    WRITE_DISK_BYTE_D
RAM:6755 0D                          dec     c
RAM:6756 28 11                       jr      z, loc_6769
RAM:6758 FD 34 7E                    inc     (iy+7Eh)
RAM:675B 3A 5B FE                    ld      a, (SECTOR_GAP)
RAM:675E 47                          ld      b, a
RAM:675F 16 FF                       ld      d, 0FFh
RAM:6761 CD 11 79                    call    WRITE_DISK_BYTE_D
RAM:6764 D3 11                       out     (11h), a        ; self-sync *on*
RAM:6766 C3 C4 66                    jp      loc_66C4
RAM:6769             ; ---------------------------------------------------------------------------
RAM:6769
RAM:6769             loc_6769:                               ; CODE XREF: FORMAT_DISK+C7↑j
RAM:6769 FD 7E 43                    ld      a, (iy+43h)
RAM:676C F6 40                       or      40h ; '@'
RAM:676E FD 77 43                    ld      (iy+43h), a
RAM:6771 D3 10                       out     (10h), a
RAM:6773 FD 7E 7C                    ld      a, (iy+7Ch)
RAM:6776 FD 77 7D                    ld      (iy+7Dh), a
RAM:6779 FD 7E 7F                    ld      a, (iy+7Fh)
RAM:677C 32 42 FB                    ld      (REQUIRED_TRACK), a
RAM:677F AF                          xor     a
RAM:6780 FD 77 7E                    ld      (iy+7Eh), a
RAM:6783 0E 10                       ld      c, 16
RAM:6785
RAM:6785             loc_6785:                               ; CODE XREF: FORMAT_DISK+105↓j
RAM:6785 C5                          push    bc
RAM:6786 FD 36 13 03                 ld      (iy+13h), 3
RAM:678A CD 4A 78                    call    FIND_SECTOR_HEADER
RAM:678D C1                          pop     bc
RAM:678E 38 1F                       jr      c, read_error
RAM:6790 FD 34 7E                    inc     (iy+7Eh)
RAM:6793 0D                          dec     c
RAM:6794 20 EF                       jr      nz, loc_6785
RAM:6796 AF                          xor     a
RAM:6797 FD 77 7E                    ld      (iy+7Eh), a
RAM:679A FD 7E 7F                    ld      a, (iy+7Fh)
RAM:679D 3C                          inc     a
RAM:679E FE 28                       cp      40
RAM:67A0 28 08                       jr      z, format_done
RAM:67A2 06 01                       ld      b, 1
RAM:67A4 CD 44 79                    call    STEP_HEAD_IN
RAM:67A7 C3 B1 66                    jp      format_track
RAM:67AA             ; ---------------------------------------------------------------------------
RAM:67AA
RAM:67AA             format_done:                            ; CODE XREF: FORMAT_DISK+111↑j
RAM:67AA CD C8 7C                    call    DRIVE_OFF
RAM:67AD AF                          xor     a
RAM:67AE C9                          ret
RAM:67AF             ; ---------------------------------------------------------------------------
RAM:67AF
RAM:67AF             read_error:                             ; CODE XREF: FORMAT_DISK+FF↑j
RAM:67AF 3A 5B FE                    ld      a, (SECTOR_GAP)
RAM:67B2 3D                          dec     a
RAM:67B3 32 5B FE                    ld      (SECTOR_GAP), a
RAM:67B6 FE 05                       cp      5               ; reduce # of sector gap bytes and try again. Minimum 5
RAM:67B8 C2 B1 66                    jp      nz, format_track
RAM:67BB CD C8 7C                    call    DRIVE_OFF
RAM:67BE 3E 09                       ld      a, 9
RAM:67C0 C9                          ret
RAM:67C0             ; End of function FORMAT_DISK
RAM:67C0
RAM:67C1             ; ---------------------------------------------------------------------------
RAM:67C1
RAM:67C1             RUN:                                    ; DATA XREF: RAM:62E4↑o
RAM:67C1 CD F8 77                    call    sub_77F8        ; Run a BASIC program
RAM:67C4 E5                          push    hl
RAM:67C5 B7                          or      a
RAM:67C6 C2 06 62                    jp      nz, dos_error
RAM:67C9 FD 36 09 54                 ld      (iy+9), 54h ; 'T'
RAM:67CD CD 4B 64                    call    sub_644B
RAM:67D0 B7                          or      a
RAM:67D1 C2 06 62                    jp      nz, dos_error
RAM:67D4 ED 5B 41 80                 ld      de, (word_8041)
RAM:67D8 E5                          push    hl
RAM:67D9 21 FA 85                    ld      hl, byte_85FA
RAM:67DC CB F6                       set     6, (hl)
RAM:67DE E1                          pop     hl
RAM:67DF DD 21 71 17                 ld      ix, 1771h
RAM:67E3 C3 72 62                    jp      loc_6272
RAM:67E6
RAM:67E6             ; =============== S U B R O U T I N E =======================================
RAM:67E6
RAM:67E6
RAM:67E6             READ_T2_SF:                             ; CODE XREF: RAM:5F09↑j
RAM:67E6                                                     ; sub_64E7+15↑p ...
RAM:67E6 E5                          push    hl
RAM:67E7 FD 36 12 02                 ld      (iy+12h), 2     ; Track#2, Sector#F
RAM:67EB FD 36 11 0F                 ld      (iy+11h), 0Fh
RAM:67EF 06 01                       ld      b, 1
RAM:67F1 CD B7 79                    call    READ_WRITE_SEC_DATA ; read/write sector data. B=1 for READ, B=0 for WRITE
RAM:67F4 B7                          or      a
RAM:67F5 C2 06 62                    jp      nz, dos_error
RAM:67F8 21 56 FC                    ld      hl, UNENCODED_BUFFER
RAM:67FB 11 FF F9                    ld      de, byte_F9FF
RAM:67FE 01 9A 00                    ld      bc, 154
RAM:6801 ED B0                       ldir
RAM:6803 E1                          pop     hl
RAM:6804 C9                          ret
RAM:6804             ; End of function READ_T2_SF
RAM:6804
RAM:6805
RAM:6805             ; =============== S U B R O U T I N E =======================================
RAM:6805
RAM:6805             ; clear unencoded buffer
RAM:6805
RAM:6805             ZERO_UNENC_BUFFER:                      ; CODE XREF: sub_64E7+48↑p
RAM:6805                                                     ; sub_64E7:loc_65BC↑p ...
RAM:6805 21 56 FC                    ld      hl, UNENCODED_BUFFER
RAM:6808 36 00                       ld      (hl), 0
RAM:680A 5D                          ld      e, l
RAM:680B 54                          ld      d, h
RAM:680C 13                          inc     de
RAM:680D 01 00 01                    ld      bc, 256
RAM:6810 ED B0                       ldir
RAM:6812 C9                          ret
RAM:6812             ; End of function ZERO_UNENC_BUFFER
RAM:6812
RAM:6813
RAM:6813             ; =============== S U B R O U T I N E =======================================
RAM:6813
RAM:6813             ; zero sector then write to disk
RAM:6813
RAM:6813             WRITE_ZERO_SECTOR:                      ; CODE XREF: RAM:5F0C↑j
RAM:6813                                                     ; RAM:6683↑p ...
RAM:6813
RAM:6813             ; FUNCTION CHUNK AT RAM:6206 SIZE 0000006E BYTES
RAM:6813
RAM:6813 CD 05 68                    call    ZERO_UNENC_BUFFER ; clear unencoded buffer
RAM:6816 06 00                       ld      b, 0
RAM:6818 CD B7 79                    call    READ_WRITE_SEC_DATA ; read/write sector data. B=1 for READ, B=0 for WRITE
RAM:681B B7                          or      a
RAM:681C C2 06 62                    jp      nz, dos_error
RAM:681F C9                          ret
RAM:681F             ; End of function WRITE_ZERO_SECTOR
RAM:681F
RAM:6820
RAM:6820             ; =============== S U B R O U T I N E =======================================
RAM:6820
RAM:6820
RAM:6820             WRITE_T2_SF:                            ; CODE XREF: RAM:5F0F↑j
RAM:6820                                                     ; sub_704F+85↓p ...
RAM:6820 E5                          push    hl
RAM:6821 CD 05 68                    call    ZERO_UNENC_BUFFER ; clear unencoded buffer
RAM:6824 FD 36 12 02                 ld      (iy+12h), 2     ; Track#2, Sector#F
RAM:6828 FD 36 11 0F                 ld      (iy+11h), 0Fh
RAM:682C 21 FF F9                    ld      hl, byte_F9FF
RAM:682F 11 56 FC                    ld      de, UNENCODED_BUFFER
RAM:6832 01 9A 00                    ld      bc, 154         ; only 154 bytes of the sector is valid?
RAM:6835 ED B0                       ldir
RAM:6837 06 00                       ld      b, 0
RAM:6839 CD B7 79                    call    READ_WRITE_SEC_DATA ; read/write sector data. B=1 for READ, B=0 for WRITE
RAM:683C E1                          pop     hl
RAM:683D B7                          or      a
RAM:683E C2 06 62                    jp      nz, dos_error
RAM:6841 C9                          ret
RAM:6841             ; End of function WRITE_T2_SF
RAM:6841
RAM:6842             ; ---------------------------------------------------------------------------
RAM:6842
RAM:6842             BSAVE:                                  ; DATA XREF: RAM:63BE↑o
RAM:6842 CD 09 78                    call    sub_7809
RAM:6845 E5                          push    hl
RAM:6846 B7                          or      a
RAM:6847 C2 06 62                    jp      nz, dos_error
RAM:684A CF                          rst     8
RAM:684B 2C                          inc     l
RAM:684C E1                          pop     hl
RAM:684D ED 5B E9 83                 ld      de, (word_83E9)
RAM:6851 D5                          push    de
RAM:6852 ED 5B 41 80                 ld      de, (word_8041)
RAM:6856 D5                          push    de
RAM:6857 CD 9B 68                    call    sub_689B
RAM:685A ED 53 41 80                 ld      (word_8041), de
RAM:685E E5                          push    hl
RAM:685F CF                          rst     8
RAM:6860 2C                          inc     l
RAM:6861 E1                          pop     hl
RAM:6862 CD 9B 68                    call    sub_689B
RAM:6865 13                          inc     de
RAM:6866 ED 53 E9 83                 ld      (word_83E9), de
RAM:686A 7E                          ld      a, (hl)
RAM:686B B7                          or      a
RAM:686C 28 07                       jr      z, loc_6875
RAM:686E FE 3A                       cp      3Ah ; ':'
RAM:6870 3E 01                       ld      a, 1
RAM:6872 C2 11 66                    jp      nz, loc_6611
RAM:6875
RAM:6875             loc_6875:                               ; CODE XREF: RAM:686C↑j
RAM:6875 FD 36 09 42                 ld      (iy+9), 42h ; 'B'
RAM:6879 E5                          push    hl
RAM:687A 2A 41 80                    ld      hl, (word_8041)
RAM:687D B7                          or      a
RAM:687E ED 52                       sbc     hl, de
RAM:6880 3E 01                       ld      a, 1
RAM:6882 D2 F2 65                    jp      nc, loc_65F2
RAM:6885 CD 91 7C                    call    sub_7C91
RAM:6888 C5                          push    bc
RAM:6889 01 02 00                    ld      bc, 2
RAM:688C CD 34 79                    call    DELAY_BC
RAM:688F C1                          pop     bc
RAM:6890 DB 12                       in      a, (12h)
RAM:6892 0F                          rrca
RAM:6893 3E 04                       ld      a, 4
RAM:6895 DA F2 65                    jp      c, loc_65F2
RAM:6898 C3 F2 64                    jp      loc_64F2
RAM:689B
RAM:689B             ; =============== S U B R O U T I N E =======================================
RAM:689B
RAM:689B
RAM:689B             sub_689B:                               ; CODE XREF: RAM:6857↑p
RAM:689B                                                     ; RAM:6862↑p
RAM:689B
RAM:689B             ; FUNCTION CHUNK AT RAM:6611 SIZE 0000000D BYTES
RAM:689B
RAM:689B 23                          inc     hl
RAM:689C 7E                          ld      a, (hl)
RAM:689D B7                          or      a
RAM:689E 28 0E                       jr      z, loc_68AE
RAM:68A0 FE 20                       cp      20h ; ' '
RAM:68A2 28 0A                       jr      z, loc_68AE
RAM:68A4 FE 0C                       cp      0Ch
RAM:68A6 20 06                       jr      nz, loc_68AE
RAM:68A8 23                          inc     hl
RAM:68A9 5E                          ld      e, (hl)
RAM:68AA 23                          inc     hl
RAM:68AB 56                          ld      d, (hl)
RAM:68AC 23                          inc     hl
RAM:68AD C9                          ret
RAM:68AE             ; ---------------------------------------------------------------------------
RAM:68AE
RAM:68AE             loc_68AE:                               ; CODE XREF: sub_689B+3↑j
RAM:68AE                                                     ; sub_689B+7↑j ...
RAM:68AE 3E 01                       ld      a, 1
RAM:68B0 D1                          pop     de
RAM:68B1 C3 11 66                    jp      loc_6611
RAM:68B1             ; End of function sub_689B
RAM:68B1
RAM:68B4             ; ---------------------------------------------------------------------------
RAM:68B4
RAM:68B4             BLOAD:                                  ; DATA XREF: RAM:63C0↑o
RAM:68B4 CD F8 77                    call    sub_77F8
RAM:68B7 E5                          push    hl
RAM:68B8 B7                          or      a
RAM:68B9 C2 06 62                    jp      nz, dos_error
RAM:68BC FD 36 09 42                 ld      (iy+9), 42h ; 'B'
RAM:68C0 E1                          pop     hl
RAM:68C1 ED 5B E9 83                 ld      de, (word_83E9)
RAM:68C5 D5                          push    de
RAM:68C6 ED 5B 41 80                 ld      de, (word_8041)
RAM:68CA D5                          push    de
RAM:68CB E5                          push    hl
RAM:68CC CD 4B 64                    call    sub_644B
RAM:68CF E1                          pop     hl
RAM:68D0 D1                          pop     de
RAM:68D1 ED 53 41 80                 ld      (word_8041), de
RAM:68D5 D1                          pop     de
RAM:68D6 ED 53 E9 83                 ld      (word_83E9), de
RAM:68DA B7                          or      a
RAM:68DB C2 06 62                    jp      nz, dos_error
RAM:68DE C9                          ret
RAM:68DF             ; ---------------------------------------------------------------------------
RAM:68DF
RAM:68DF             BRUN:                                   ; DATA XREF: RAM:63C2↑o
RAM:68DF CD F8 77                    call    sub_77F8
RAM:68E2 E5                          push    hl
RAM:68E3 B7                          or      a
RAM:68E4 C2 06 62                    jp      nz, dos_error
RAM:68E7 FD 36 09 42                 ld      (iy+9), 42h ; 'B'
RAM:68EB CD 4B 64                    call    sub_644B
RAM:68EE B7                          or      a
RAM:68EF C2 06 62                    jp      nz, dos_error
RAM:68F2 2A 41 80                    ld      hl, (word_8041)
RAM:68F5 E9                          jp      (hl)
RAM:68F6             ; ---------------------------------------------------------------------------
RAM:68F6
RAM:68F6             RENAME:                                 ; DATA XREF: RAM:63C8↑o
RAM:68F6 FD 75 54                    ld      (iy+54h), l
RAM:68F9 FD 74 55                    ld      (iy+55h), h
RAM:68FC CD 09 78                    call    sub_7809
RAM:68FF B7                          or      a
RAM:6900 C2 06 62                    jp      nz, dos_error
RAM:6903 CF                          rst     8
RAM:6904 2C                          inc     l
RAM:6905 FD 75 52                    ld      (iy+52h), l
RAM:6908 FD 74 53                    ld      (iy+53h), h
RAM:690B CD F8 77                    call    sub_77F8
RAM:690E B7                          or      a
RAM:690F C2 06 62                    jp      nz, dos_error
RAM:6912 FD 36 12 02                 ld      (iy+12h), 2     ; Directory starts Track#2, Sec#3 after DOS
RAM:6916 FD 36 11 03                 ld      (iy+11h), 3
RAM:691A FD 36 51 00                 ld      (iy+51h), 0
RAM:691E
RAM:691E             loc_691E:                               ; CODE XREF: RAM:694C↓j
RAM:691E 06 01                       ld      b, 1
RAM:6920 CD B7 79                    call    READ_WRITE_SEC_DATA ; read/write sector data. B=1 for READ, B=0 for WRITE
RAM:6923 B7                          or      a
RAM:6924 C2 06 62                    jp      nz, dos_error
RAM:6927 FD 7E 51                    ld      a, (iy+51h)
RAM:692A B7                          or      a
RAM:692B 20 09                       jr      nz, loc_6936
RAM:692D FD 6E 54                    ld      l, (iy+54h)
RAM:6930 FD 66 55                    ld      h, (iy+55h)
RAM:6933 CD A0 69                    call    sub_69A0
RAM:6936
RAM:6936             loc_6936:                               ; CODE XREF: RAM:692B↑j
RAM:6936 FD 6E 52                    ld      l, (iy+52h)
RAM:6939 FD 66 53                    ld      h, (iy+53h)
RAM:693C CD A0 69                    call    sub_69A0
RAM:693F FE 02                       cp      2
RAM:6941 CA 06 62                    jp      z, dos_error
RAM:6944 FD 34 11                    inc     (iy+11h)
RAM:6947 FD 7E 11                    ld      a, (iy+11h)
RAM:694A FE 0B                       cp      0Bh
RAM:694C 20 D0                       jr      nz, loc_691E
RAM:694E FD 7E 51                    ld      a, (iy+51h)
RAM:6951 B7                          or      a
RAM:6952 20 05                       jr      nz, loc_6959
RAM:6954 3E 0D                       ld      a, 13           ; File not Found
RAM:6956 C3 06 62                    jp      dos_error
RAM:6959             ; ---------------------------------------------------------------------------
RAM:6959
RAM:6959             loc_6959:                               ; CODE XREF: RAM:6952↑j
RAM:6959 CD 33 6B                    call    sub_6B33
RAM:695C FD 6E 54                    ld      l, (iy+54h)
RAM:695F FD 66 55                    ld      h, (iy+55h)
RAM:6962 CD A0 69                    call    sub_69A0
RAM:6965 FE 02                       cp      2
RAM:6967 28 05                       jr      z, loc_696E
RAM:6969 3E 0D                       ld      a, 13           ; File not Found
RAM:696B C3 06 62                    jp      dos_error
RAM:696E             ; ---------------------------------------------------------------------------
RAM:696E
RAM:696E             loc_696E:                               ; CODE XREF: RAM:6967↑j
RAM:696E D5                          push    de
RAM:696F FD 6E 52                    ld      l, (iy+52h)
RAM:6972 FD 66 53                    ld      h, (iy+53h)
RAM:6975 CD 09 78                    call    sub_7809
RAM:6978 E1                          pop     hl
RAM:6979 11 F8 FF                    ld      de, 0FFF8h
RAM:697C 19                          add     hl, de
RAM:697D EB                          ex      de, hl
RAM:697E FD E5                       push    iy
RAM:6980 E1                          pop     hl
RAM:6981 23                          inc     hl
RAM:6982 01 08 00                    ld      bc, 8
RAM:6985 ED B0                       ldir
RAM:6987 FD 7E 46                    ld      a, (iy+46h)
RAM:698A FD 77 11                    ld      (iy+11h), a
RAM:698D 06 00                       ld      b, 0
RAM:698F CD B7 79                    call    READ_WRITE_SEC_DATA ; read/write sector data. B=1 for READ, B=0 for WRITE
RAM:6992 B7                          or      a
RAM:6993 C2 06 62                    jp      nz, dos_error
RAM:6996 FD 6E 52                    ld      l, (iy+52h)
RAM:6999 FD 66 53                    ld      h, (iy+53h)
RAM:699C CD 09 78                    call    sub_7809
RAM:699F C9                          ret
RAM:69A0
RAM:69A0             ; =============== S U B R O U T I N E =======================================
RAM:69A0
RAM:69A0
RAM:69A0             sub_69A0:                               ; CODE XREF: RAM:6933↑p
RAM:69A0                                                     ; RAM:693C↑p ...
RAM:69A0 CD 09 78                    call    sub_7809
RAM:69A3 06 10                       ld      b, 16
RAM:69A5 21 56 FC                    ld      hl, UNENCODED_BUFFER
RAM:69A8 FD E5                       push    iy
RAM:69AA D1                          pop     de
RAM:69AB 13                          inc     de
RAM:69AC
RAM:69AC             loc_69AC:                               ; CODE XREF: sub_69A0+3D↓j
RAM:69AC 7E                          ld      a, (hl)
RAM:69AD B7                          or      a
RAM:69AE C8                          ret     z
RAM:69AF D5                          push    de
RAM:69B0 E5                          push    hl
RAM:69B1 FE 01                       cp      1
RAM:69B3 28 22                       jr      z, loc_69D7
RAM:69B5 23                          inc     hl
RAM:69B6 23                          inc     hl
RAM:69B7 0E 08                       ld      c, 8
RAM:69B9 EB                          ex      de, hl
RAM:69BA
RAM:69BA             loc_69BA:                               ; CODE XREF: sub_69A0+21↓j
RAM:69BA 1A                          ld      a, (de)
RAM:69BB BE                          cp      (hl)
RAM:69BC 20 19                       jr      nz, loc_69D7
RAM:69BE 23                          inc     hl
RAM:69BF 13                          inc     de
RAM:69C0 0D                          dec     c
RAM:69C1 20 F7                       jr      nz, loc_69BA
RAM:69C3 F1                          pop     af
RAM:69C4 F1                          pop     af
RAM:69C5 D5                          push    de
RAM:69C6 CD 6B 7C                    call    sub_7C6B
RAM:69C9 D1                          pop     de
RAM:69CA FD 36 51 01                 ld      (iy+51h), 1
RAM:69CE FD 7E 11                    ld      a, (iy+11h)
RAM:69D1 FD 77 46                    ld      (iy+46h), a
RAM:69D4 3E 02                       ld      a, 2
RAM:69D6 C9                          ret
RAM:69D7             ; ---------------------------------------------------------------------------
RAM:69D7
RAM:69D7             loc_69D7:                               ; CODE XREF: sub_69A0+13↑j
RAM:69D7                                                     ; sub_69A0+1C↑j
RAM:69D7 E1                          pop     hl
RAM:69D8 11 10 00                    ld      de, 10h
RAM:69DB 19                          add     hl, de
RAM:69DC D1                          pop     de
RAM:69DD 10 CD                       djnz    loc_69AC
RAM:69DF AF                          xor     a
RAM:69E0 C9                          ret
RAM:69E0             ; End of function sub_69A0
RAM:69E0
RAM:69E1
RAM:69E1             ; =============== S U B R O U T I N E =======================================
RAM:69E1
RAM:69E1
RAM:69E1             sub_69E1:                               ; CODE XREF: GET_DRIVESPEC↓p
RAM:69E1 2B                          dec     hl
RAM:69E1             ; End of function sub_69E1
RAM:69E1
RAM:69E2
RAM:69E2             ; =============== S U B R O U T I N E =======================================
RAM:69E2
RAM:69E2
RAM:69E2             sub_69E2:                               ; CODE XREF: sub_69E2+6↓j
RAM:69E2                                                     ; CHECK_DOUBLE_SIDED+1↓p ...
RAM:69E2 23                          inc     hl
RAM:69E3 7E                          ld      a, (hl)
RAM:69E4 B7                          or      a
RAM:69E5 C8                          ret     z
RAM:69E6 FE 20                       cp      20h ; ' '
RAM:69E8 28 F8                       jr      z, sub_69E2
RAM:69EA FE 3A                       cp      3Ah ; ':'
RAM:69EC C9                          ret
RAM:69EC             ; End of function sub_69E2
RAM:69EC
RAM:69ED
RAM:69ED             ; =============== S U B R O U T I N E =======================================
RAM:69ED
RAM:69ED
RAM:69ED             GET_DRIVESPEC:                          ; CODE XREF: RAM:INIT↑p
RAM:69ED                                                     ; RAM:DIR↓p ...
RAM:69ED CD E1 69                    call    sub_69E1
RAM:69F0 C8                          ret     z
RAM:69F1 C3 67 62                    jp      loc_6267
RAM:69F1             ; End of function GET_DRIVESPEC
RAM:69F1
RAM:69F4
RAM:69F4             ; =============== S U B R O U T I N E =======================================
RAM:69F4
RAM:69F4
RAM:69F4             CHECK_DOUBLE_SIDED:                     ; CODE XREF: RAM:6621↑p
RAM:69F4                                                     ; RAM:DISK_COPY↓p
RAM:69F4 E5                          push    hl
RAM:69F5 CD E2 69                    call    sub_69E2
RAM:69F8 FE 44                       cp      44h ; 'D'       ; 'D' on command line to specify double sided
RAM:69FA 20 0C                       jr      nz, single_sided
RAM:69FC CD E2 69                    call    sub_69E2
RAM:69FF 20 07                       jr      nz, single_sided
RAM:6A01 3E AA                       ld      a, 0AAh
RAM:6A03 32 40 FB                    ld      (DOUBLE_SIDED), a
RAM:6A06 F1                          pop     af
RAM:6A07 C9                          ret
RAM:6A08             ; ---------------------------------------------------------------------------
RAM:6A08
RAM:6A08             single_sided:                           ; CODE XREF: CHECK_DOUBLE_SIDED+6↑j
RAM:6A08                                                     ; CHECK_DOUBLE_SIDED+B↑j
RAM:6A08 E1                          pop     hl
RAM:6A09 AF                          xor     a               ; $00 = single sided disk, NON-ZERO = double sided disk
RAM:6A0A 32 40 FB                    ld      (DOUBLE_SIDED), a
RAM:6A0D C9                          ret
RAM:6A0D             ; End of function CHECK_DOUBLE_SIDED
RAM:6A0D
RAM:6A0E             ; ---------------------------------------------------------------------------
RAM:6A0E
RAM:6A0E             DIR:                                    ; DATA XREF: RAM:63C4↑o
RAM:6A0E CD ED 69                    call    GET_DRIVESPEC
RAM:6A11 E5                          push    hl
RAM:6A12 FD 36 12 02                 ld      (iy+12h), 2     ; track#2, Sector#3
RAM:6A16 FD 36 11 03                 ld      (iy+11h), 3
RAM:6A1A AF                          xor     a
RAM:6A1B 32 58 FE                    ld      (SECTORS_LEFT), a
RAM:6A1E
RAM:6A1E             loc_6A1E:                               ; CODE XREF: RAM:6A74↓j
RAM:6A1E 06 01                       ld      b, 1
RAM:6A20 CD B7 79                    call    READ_WRITE_SEC_DATA ; read/write sector data. B=1 for READ, B=0 for WRITE
RAM:6A23 B7                          or      a
RAM:6A24 C2 06 62                    jp      nz, dos_error
RAM:6A27 21 56 FC                    ld      hl, UNENCODED_BUFFER
RAM:6A2A 11 06 00                    ld      de, 6
RAM:6A2D 0E 10                       ld      c, 16
RAM:6A2F
RAM:6A2F             loc_6A2F:                               ; CODE XREF: RAM:6A6A↓j
RAM:6A2F 7E                          ld      a, (hl)
RAM:6A30 B7                          or      a
RAM:6A31 28 44                       jr      z, loc_6A77
RAM:6A33 FE 01                       cp      1
RAM:6A35 20 08                       jr      nz, print_filename
RAM:6A37 C5                          push    bc
RAM:6A38 01 0A 00                    ld      bc, 10
RAM:6A3B 09                          add     hl, bc
RAM:6A3C C1                          pop     bc
RAM:6A3D 18 29                       jr      loc_6A68
RAM:6A3F             ; ---------------------------------------------------------------------------
RAM:6A3F
RAM:6A3F             print_filename:                         ; CODE XREF: RAM:6A35↑j
RAM:6A3F 06 0A                       ld      b, 10           ; filename 10 chars long
RAM:6A41
RAM:6A41             loc_6A41:                               ; CODE XREF: RAM:6A46↓j
RAM:6A41 7E                          ld      a, (hl)
RAM:6A42 CD 75 60                    call    CHAR_OUT
RAM:6A45 23                          inc     hl
RAM:6A46 10 F9                       djnz    loc_6A41
RAM:6A48 3E 0A                       ld      a, 0Ah          ; CR/LF
RAM:6A4A CD 75 60                    call    CHAR_OUT
RAM:6A4D 3E 0D                       ld      a, 0Dh
RAM:6A4F CD 75 60                    call    CHAR_OUT
RAM:6A52 3A 58 FE                    ld      a, (SECTORS_LEFT)
RAM:6A55 3C                          inc     a
RAM:6A56 32 58 FE                    ld      (SECTORS_LEFT), a
RAM:6A59 FE 17                       cp      23
RAM:6A5B 20 0B                       jr      nz, loc_6A68
RAM:6A5D AF                          xor     a
RAM:6A5E 32 58 FE                    ld      (SECTORS_LEFT), a
RAM:6A61
RAM:6A61             loc_6A61:                               ; CODE XREF: RAM:6A66↓j
RAM:6A61 CD 79 6A                    call    sub_6A79
RAM:6A64 FE 20                       cp      20h ; ' '
RAM:6A66 20 F9                       jr      nz, loc_6A61
RAM:6A68
RAM:6A68             loc_6A68:                               ; CODE XREF: RAM:6A3D↑j
RAM:6A68                                                     ; RAM:6A5B↑j
RAM:6A68 19                          add     hl, de
RAM:6A69 0D                          dec     c
RAM:6A6A 20 C3                       jr      nz, loc_6A2F
RAM:6A6C FD 34 11                    inc     (iy+11h)
RAM:6A6F FD 7E 11                    ld      a, (iy+11h)
RAM:6A72 FE 0B                       cp      0Bh             ; Disk directory is TK2, Sectors $2 - $B ?
RAM:6A74 C2 1E 6A                    jp      nz, loc_6A1E
RAM:6A77
RAM:6A77             loc_6A77:                               ; CODE XREF: RAM:6A31↑j
RAM:6A77 E1                          pop     hl
RAM:6A78 C9                          ret
RAM:6A79
RAM:6A79             ; =============== S U B R O U T I N E =======================================
RAM:6A79
RAM:6A79
RAM:6A79             sub_6A79:                               ; CODE XREF: RAM:loc_6A61↑p
RAM:6A79 E5                          push    hl
RAM:6A7A D5                          push    de
RAM:6A7B C5                          push    bc
RAM:6A7C
RAM:6A7C             loc_6A7C:                               ; CODE XREF: sub_6A79+8↓j
RAM:6A7C CD 1B 00                    call    unk_1B
RAM:6A7F FE FF                       cp      0FFh
RAM:6A81 20 F9                       jr      nz, loc_6A7C
RAM:6A83 CD 13 00                    call    unk_13
RAM:6A86 C1                          pop     bc
RAM:6A87 D1                          pop     de
RAM:6A88 E1                          pop     hl
RAM:6A89 C9                          ret
RAM:6A89             ; End of function sub_6A79
RAM:6A89
RAM:6A8A             ; ---------------------------------------------------------------------------
RAM:6A8A
RAM:6A8A             ERASE:                                  ; DATA XREF: RAM:63C6↑o
RAM:6A8A CD F8 77                    call    sub_77F8
RAM:6A8D E5                          push    hl
RAM:6A8E B7                          or      a
RAM:6A8F C2 06 62                    jp      nz, dos_error
RAM:6A92 CD D3 7C                    call    SELECT_DRIVE
RAM:6A95 CD E6 67                    call    READ_T2_SF
RAM:6A98 FD 36 51 01                 ld      (iy+51h), 1
RAM:6A9C CD C3 7B                    call    loc_7BC3
RAM:6A9F FE 02                       cp      2
RAM:6AA1 28 09                       jr      z, loc_6AAC
RAM:6AA3 B7                          or      a
RAM:6AA4 C2 06 62                    jp      nz, dos_error
RAM:6AA7 3E 0D                       ld      a, 13           ; File not found
RAM:6AA9 C3 06 62                    jp      dos_error
RAM:6AAC             ; ---------------------------------------------------------------------------
RAM:6AAC
RAM:6AAC             loc_6AAC:                               ; CODE XREF: RAM:6AA1↑j
RAM:6AAC 1A                          ld      a, (de)
RAM:6AAD 13                          inc     de
RAM:6AAE FD 77 16                    ld      (iy+16h), a
RAM:6AB1 1A                          ld      a, (de)
RAM:6AB2 FD 77 15                    ld      (iy+15h), a
RAM:6AB5 EB                          ex      de, hl
RAM:6AB6 11 F5 FF                    ld      de, 0FFF5h
RAM:6AB9 19                          add     hl, de
RAM:6ABA 36 01                       ld      (hl), 1
RAM:6ABC FD 7E 11                    ld      a, (iy+11h)
RAM:6ABF FD 77 46                    ld      (iy+46h), a
RAM:6AC2 CD 6B 7C                    call    sub_7C6B
RAM:6AC5
RAM:6AC5             loc_6AC5:                               ; CODE XREF: RAM:6B04↓j
RAM:6AC5 FD 7E 16                    ld      a, (iy+16h)
RAM:6AC8 FD B6 15                    or      (iy+15h)
RAM:6ACB CA 06 6B                    jp      z, loc_6B06
RAM:6ACE FD 7E 15                    ld      a, (iy+15h)
RAM:6AD1 FD 77 11                    ld      (iy+11h), a
RAM:6AD4 FD 7E 16                    ld      a, (iy+16h)
RAM:6AD7 FD 77 12                    ld      (iy+12h), a
RAM:6ADA 06 01                       ld      b, 1
RAM:6ADC CD B7 79                    call    READ_WRITE_SEC_DATA ; read/write sector data. B=1 for READ, B=0 for WRITE
RAM:6ADF B7                          or      a
RAM:6AE0 C2 06 62                    jp      nz, dos_error
RAM:6AE3 21 56 FC                    ld      hl, UNENCODED_BUFFER
RAM:6AE6 11 FE 00                    ld      de, 0FEh
RAM:6AE9 19                          add     hl, de
RAM:6AEA 56                          ld      d, (hl)
RAM:6AEB 23                          inc     hl
RAM:6AEC 5E                          ld      e, (hl)
RAM:6AED D5                          push    de
RAM:6AEE FD 7E 12                    ld      a, (iy+12h)
RAM:6AF1 FD 77 16                    ld      (iy+16h), a
RAM:6AF4 FD 7E 11                    ld      a, (iy+11h)
RAM:6AF7 FD 77 15                    ld      (iy+15h), a
RAM:6AFA CD 79 65                    call    sub_6579
RAM:6AFD D1                          pop     de
RAM:6AFE FD 72 16                    ld      (iy+16h), d
RAM:6B01 FD 73 15                    ld      (iy+15h), e
RAM:6B04 18 BF                       jr      loc_6AC5
RAM:6B06             ; ---------------------------------------------------------------------------
RAM:6B06
RAM:6B06             loc_6B06:                               ; CODE XREF: RAM:6ACB↑j
RAM:6B06 CD 05 68                    call    ZERO_UNENC_BUFFER ; clear unencoded buffer
RAM:6B09 21 FF F9                    ld      hl, byte_F9FF
RAM:6B0C 11 56 FC                    ld      de, UNENCODED_BUFFER
RAM:6B0F 01 9A 00                    ld      bc, 154
RAM:6B12 ED B0                       ldir
RAM:6B14 FD 36 12 02                 ld      (iy+12h), 2     ; TK#2, SEC#F
RAM:6B18 FD 36 11 0F                 ld      (iy+11h), 0Fh
RAM:6B1C 06 00                       ld      b, 0
RAM:6B1E CD B7 79                    call    READ_WRITE_SEC_DATA ; read/write sector data. B=1 for READ, B=0 for WRITE
RAM:6B21 B7                          or      a
RAM:6B22 C2 06 62                    jp      nz, dos_error
RAM:6B25 CD 33 6B                    call    sub_6B33
RAM:6B28 06 00                       ld      b, 0
RAM:6B2A CD B7 79                    call    READ_WRITE_SEC_DATA ; read/write sector data. B=1 for READ, B=0 for WRITE
RAM:6B2D B7                          or      a
RAM:6B2E C2 06 62                    jp      nz, dos_error
RAM:6B31 E1                          pop     hl
RAM:6B32 C9                          ret
RAM:6B33
RAM:6B33             ; =============== S U B R O U T I N E =======================================
RAM:6B33
RAM:6B33
RAM:6B33             sub_6B33:                               ; CODE XREF: sub_64E7+F3↑p
RAM:6B33                                                     ; RAM:loc_6959↑p ...
RAM:6B33 21 57 FD                    ld      hl, byte_FD57
RAM:6B36 11 56 FC                    ld      de, UNENCODED_BUFFER
RAM:6B39 01 00 01                    ld      bc, 256
RAM:6B3C ED B0                       ldir
RAM:6B3E FD 36 12 02                 ld      (iy+12h), 2
RAM:6B42 FD 7E 46                    ld      a, (iy+46h)
RAM:6B45 FD 77 11                    ld      (iy+11h), a
RAM:6B48 C9                          ret
RAM:6B48             ; End of function sub_6B33
RAM:6B48
RAM:6B49             ; ---------------------------------------------------------------------------
RAM:6B49
RAM:6B49             STATUS:                                 ; DATA XREF: RAM:63D4↑o
RAM:6B49 CD ED 69                    call    GET_DRIVESPEC
RAM:6B4C E5                          push    hl
RAM:6B4D CD E6 67                    call    READ_T2_SF      ; get volume bitmap
RAM:6B50 21 FF F9                    ld      hl, byte_F9FF
RAM:6B53 11 00 00                    ld      de, 0
RAM:6B56 0E 9A                       ld      c, 154          ; double sided : 154 x 8 = 1232 Records on blank disk
RAM:6B58 3A 40 FB                    ld      a, (DOUBLE_SIDED)
RAM:6B5B FE AA                       cp      0AAh
RAM:6B5D 28 02                       jr      z, d_sided
RAM:6B5F 0E 4A                       ld      c, 74           ; Single sided : 74 x 8 = 592 Records on blank disk
RAM:6B61
RAM:6B61             d_sided:                                ; CODE XREF: RAM:6B5D↑j
RAM:6B61                                                     ; RAM:6B6C↓j
RAM:6B61 06 08                       ld      b, 8            ; 1 bit per record, 8 record per byte
RAM:6B63 7E                          ld      a, (hl)
RAM:6B64
RAM:6B64             loc_6B64:                               ; CODE XREF: RAM:record_used↓j
RAM:6B64 0F                          rrca
RAM:6B65 38 01                       jr      c, record_used
RAM:6B67 13                          inc     de              ; increase records free count
RAM:6B68
RAM:6B68             record_used:                            ; CODE XREF: RAM:6B65↑j
RAM:6B68 10 FA                       djnz    loc_6B64
RAM:6B6A 23                          inc     hl
RAM:6B6B 0D                          dec     c               ; tested all possible records?
RAM:6B6C 20 F3                       jr      nz, d_sided
RAM:6B6E 6B                          ld      l, e
RAM:6B6F 62                          ld      h, d
RAM:6B70 E5                          push    hl              ; Save records free value
RAM:6B71 CD C5 6B                    call    convert_decimal_print
RAM:6B74 21 A6 6B                    ld      hl, aRecordsFree ; " RECORDS FREE\n\r"
RAM:6B77 CD 7B 60                    call    PRINT_STRING_HL
RAM:6B7A E1                          pop     hl
RAM:6B7B E5                          push    hl
RAM:6B7C CB 3C                       srl     h               ; divide by 4 to get KB free.   (records * 256 / 1024)
RAM:6B7E CB 1D                       rr      l
RAM:6B80 CB 3C                       srl     h
RAM:6B82 CB 1D                       rr      l
RAM:6B84 CD C5 6B                    call    convert_decimal_print
RAM:6B87 3E 2E                       ld      a, 2Eh ; '.'
RAM:6B89 CD 75 60                    call    CHAR_OUT
RAM:6B8C E1                          pop     hl
RAM:6B8D 3E 07                       ld      a, 7
RAM:6B8F A5                          and     l
RAM:6B90 3C                          inc     a
RAM:6B91 47                          ld      b, a
RAM:6B92 21 83 FF                    ld      hl, 0FF83h
RAM:6B95 11 7D 00                    ld      de, 7Dh ; '}'
RAM:6B98
RAM:6B98             loc_6B98:                               ; CODE XREF: RAM:6B99↓j
RAM:6B98 19                          add     hl, de
RAM:6B99 10 FD                       djnz    loc_6B98
RAM:6B9B CD C5 6B                    call    convert_decimal_print
RAM:6B9E 21 B6 6B                    ld      hl, aKBytesFree ; "K BYTES FREE\n\r"
RAM:6BA1 CD 7B 60                    call    PRINT_STRING_HL
RAM:6BA4 E1                          pop     hl
RAM:6BA5 C9                          ret
RAM:6BA5             ; ---------------------------------------------------------------------------
RAM:6BA6 20 52 45 43+aRecordsFree:   .ascii ' RECORDS FREE\n'
RAM:6BA6 4F 52 44 53+                                        ; DATA XREF: RAM:6B74↑o
RAM:6BA6 20 46 52 45+                .ascii '\r',0
RAM:6BB6 4B 20 42 59+aKBytesFree:    .ascii 'K BYTES FREE\n' ; DATA XREF: RAM:6B9E↑o
RAM:6BB6 54 45 53 20+                .ascii '\r',0
RAM:6BC5
RAM:6BC5             ; =============== S U B R O U T I N E =======================================
RAM:6BC5
RAM:6BC5
RAM:6BC5             convert_decimal_print:                  ; CODE XREF: RAM:6B71↑p
RAM:6BC5                                                     ; RAM:6B84↑p ...
RAM:6BC5 06 00                       ld      b, 0
RAM:6BC7 FD E5                       push    iy
RAM:6BC9 FD 21 FF 6B                 ld      iy, Powers_10
RAM:6BCD
RAM:6BCD             loc_6BCD:                               ; CODE XREF: convert_decimal_print+35↓j
RAM:6BCD AF                          xor     a
RAM:6BCE FD 5E 00                    ld      e, (iy+0)
RAM:6BD1 FD 56 01                    ld      d, (iy+1)
RAM:6BD4
RAM:6BD4             loc_6BD4:                               ; CODE XREF: convert_decimal_print+16↓j
RAM:6BD4 B7                          or      a
RAM:6BD5 ED 52                       sbc     hl, de
RAM:6BD7 DA DD 6B                    jp      c, loc_6BDD
RAM:6BDA 3C                          inc     a
RAM:6BDB 18 F7                       jr      loc_6BD4
RAM:6BDD             ; ---------------------------------------------------------------------------
RAM:6BDD
RAM:6BDD             loc_6BDD:                               ; CODE XREF: convert_decimal_print+12↑j
RAM:6BDD 19                          add     hl, de
RAM:6BDE B7                          or      a
RAM:6BDF 28 02                       jr      z, loc_6BE3
RAM:6BE1 06 01                       ld      b, 1
RAM:6BE3
RAM:6BE3             loc_6BE3:                               ; CODE XREF: convert_decimal_print+1A↑j
RAM:6BE3 CB 40                       bit     0, b
RAM:6BE5 28 05                       jr      z, loc_6BEC
RAM:6BE7 C6 30                       add     a, 30h ; '0'
RAM:6BE9 CD 75 60                    call    CHAR_OUT
RAM:6BEC
RAM:6BEC             loc_6BEC:                               ; CODE XREF: convert_decimal_print+20↑j
RAM:6BEC FD 23                       inc     iy
RAM:6BEE FD 23                       inc     iy
RAM:6BF0 3E 0A                       ld      a, 0Ah
RAM:6BF2 BB                          cp      e
RAM:6BF3 20 02                       jr      nz, loc_6BF7
RAM:6BF5 06 01                       ld      b, 1
RAM:6BF7
RAM:6BF7             loc_6BF7:                               ; CODE XREF: convert_decimal_print+2E↑j
RAM:6BF7 3E 01                       ld      a, 1
RAM:6BF9 BB                          cp      e
RAM:6BFA 20 D1                       jr      nz, loc_6BCD
RAM:6BFC FD E1                       pop     iy
RAM:6BFE C9                          ret
RAM:6BFE             ; End of function convert_decimal_print
RAM:6BFE
RAM:6BFE             ; ---------------------------------------------------------------------------
RAM:6BFF E8 03       Powers_10:      dw 1000                 ; DATA XREF: convert_decimal_print+4↑o
RAM:6C01 64 00                       dw 100
RAM:6C03 0A 00                       dw 10
RAM:6C05 01 00                       dw 1
RAM:6C07             ; ---------------------------------------------------------------------------
RAM:6C07
RAM:6C07             DCOPY:                                  ; DATA XREF: RAM:63D2↑o
RAM:6C07 FD 7E 0B                    ld      a, (iy+0Bh)
RAM:6C0A 32 5C FE                    ld      (byte_FE5C), a
RAM:6C0D ED 5B 3F 80                 ld      de, (word_803F)
RAM:6C11 13                          inc     de
RAM:6C12 7A                          ld      a, d
RAM:6C13 B3                          or      e
RAM:6C14 3E 0C                       ld      a, 0Ch
RAM:6C16 C2 78 62                    jp      nz, loc_6278
RAM:6C19 FD 36 48 01                 ld      (iy+48h), 1
RAM:6C1D 2B                          dec     hl
RAM:6C1E CD 6F 60                    call    sub_606F
RAM:6C21 28 3F                       jr      z, DISK_COPY
RAM:6C23
RAM:6C23             FILE_COPY:
RAM:6C23 CD F8 77                    call    sub_77F8
RAM:6C26 B7                          or      a
RAM:6C27 C2 06 62                    jp      nz, dos_error
RAM:6C2A E5                          push    hl
RAM:6C2B CD 6D 6D                    call    GET_SOURCE_and_DEST ; get source and destination drives, insert into PARAM table
RAM:6C2E CD FD 6D                    call    sub_6DFD
RAM:6C31 CD BF 7B                    call    sub_7BBF
RAM:6C34 FE 02                       cp      2
RAM:6C36 28 09                       jr      z, loc_6C41
RAM:6C38 B7                          or      a
RAM:6C39 C2 06 62                    jp      nz, dos_error
RAM:6C3C 3E 0D                       ld      a, 13           ; File not Found
RAM:6C3E C3 06 62                    jp      dos_error
RAM:6C41             ; ---------------------------------------------------------------------------
RAM:6C41
RAM:6C41             loc_6C41:                               ; CODE XREF: RAM:6C36↑j
RAM:6C41 FD 7E 0A                    ld      a, (iy+0Ah)
RAM:6C44 FD 77 09                    ld      (iy+9), a
RAM:6C47 FE 44                       cp      44h ; 'D'
RAM:6C49 3E 0C                       ld      a, 12           ; File type mismatch
RAM:6C4B CA 06 62                    jp      z, dos_error
RAM:6C4E CD 5F 64                    call    loc_645F
RAM:6C51 B7                          or      a
RAM:6C52 C2 67 6D                    jp      nz, dcopy_error
RAM:6C55 CD 23 6E                    call    sub_6E23
RAM:6C58 CD E7 64                    call    sub_64E7
RAM:6C5B B7                          or      a
RAM:6C5C C2 67 6D                    jp      nz, dcopy_error
RAM:6C5F C3 3A 6D                    jp      loc_6D3A
RAM:6C62             ; ---------------------------------------------------------------------------
RAM:6C62
RAM:6C62             DISK_COPY:                              ; CODE XREF: RAM:6C21↑j
RAM:6C62 CD F4 69                    call    CHECK_DOUBLE_SIDED
RAM:6C65 E5                          push    hl
RAM:6C66 21 41 FB                    ld      hl, byte_FB41
RAM:6C69 36 28                       ld      (hl), 40        ; 40 Tracks for Single Sided copy
RAM:6C6B 3A 40 FB                    ld      a, (DOUBLE_SIDED)
RAM:6C6E B7                          or      a
RAM:6C6F 28 02                       jr      z, loc_6C73
RAM:6C71 36 50                       ld      (hl), 80        ; 80 Tracks for Double Sided copy?
RAM:6C73
RAM:6C73             loc_6C73:                               ; CODE XREF: RAM:6C6F↑j
RAM:6C73 21 D4 FE                    ld      hl, byte_FED4
RAM:6C76 39                          add     hl, sp
RAM:6C77 11 95 89                    ld      de, byte_8995
RAM:6C7A B7                          or      a
RAM:6C7B ED 52                       sbc     hl, de
RAM:6C7D CB 3C                       srl     h
RAM:6C7F CB 3C                       srl     h
RAM:6C81 CB 3C                       srl     h
RAM:6C83 CB 3C                       srl     h
RAM:6C85 7C                          ld      a, h
RAM:6C86 32 5A FE                    ld      (byte_FE5A), a
RAM:6C89 FD 36 47 00                 ld      (iy+47h), 0
RAM:6C8D FD 36 12 00                 ld      (iy+12h), 0     ; Track #0, Sector#0
RAM:6C91 FD 36 11 00                 ld      (iy+11h), 0
RAM:6C95 CD F9 70                    call    sub_70F9
RAM:6C98 CD 6D 6D                    call    GET_SOURCE_and_DEST ; get source and destination drives, insert into PARAM table
RAM:6C9B
RAM:6C9B             loc_6C9B:                               ; CODE XREF: RAM:6D37↓j
RAM:6C9B CD FD 6D                    call    sub_6DFD
RAM:6C9E 11 95 89                    ld      de, byte_8995
RAM:6CA1 ED 53 41 80                 ld      (word_8041), de
RAM:6CA5
RAM:6CA5             loc_6CA5:                               ; CODE XREF: RAM:6CC6↓j
RAM:6CA5                                                     ; RAM:6CE0↓j
RAM:6CA5 06 01                       ld      b, 1
RAM:6CA7 CD B7 79                    call    READ_WRITE_SEC_DATA ; read/write sector data. B=1 for READ, B=0 for WRITE
RAM:6CAA B7                          or      a
RAM:6CAB C2 67 6D                    jp      nz, dcopy_error
RAM:6CAE 21 56 FC                    ld      hl, UNENCODED_BUFFER
RAM:6CB1 ED 5B 41 80                 ld      de, (word_8041)
RAM:6CB5 01 00 01                    ld      bc, 256
RAM:6CB8 ED B0                       ldir
RAM:6CBA ED 53 41 80                 ld      (word_8041), de
RAM:6CBE FD 34 11                    inc     (iy+11h)
RAM:6CC1 FD 7E 11                    ld      a, (iy+11h)
RAM:6CC4 FE 10                       cp      10h
RAM:6CC6 20 DD                       jr      nz, loc_6CA5
RAM:6CC8 FD 36 11 00                 ld      (iy+11h), 0
RAM:6CCC FD 34 12                    inc     (iy+12h)
RAM:6CCF FD 7E 12                    ld      a, (iy+12h)
RAM:6CD2 21 41 FB                    ld      hl, byte_FB41
RAM:6CD5 BE                          cp      (hl)
RAM:6CD6 28 0A                       jr      z, loc_6CE2
RAM:6CD8 21 5A FE                    ld      hl, byte_FE5A
RAM:6CDB 46                          ld      b, (hl)
RAM:6CDC 90                          sub     b
RAM:6CDD FD 96 47                    sub     (iy+47h)
RAM:6CE0 20 C3                       jr      nz, loc_6CA5
RAM:6CE2
RAM:6CE2             loc_6CE2:                               ; CODE XREF: RAM:6CD6↑j
RAM:6CE2 FD 7E 47                    ld      a, (iy+47h)
RAM:6CE5 FD 77 12                    ld      (iy+12h), a
RAM:6CE8 CD 23 6E                    call    sub_6E23
RAM:6CEB CD 91 7C                    call    sub_7C91
RAM:6CEE 21 95 89                    ld      hl, byte_8995
RAM:6CF1 22 41 80                    ld      (word_8041), hl
RAM:6CF4
RAM:6CF4             loc_6CF4:                               ; CODE XREF: RAM:6D12↓j
RAM:6CF4                                                     ; RAM:6D2C↓j
RAM:6CF4 2A 41 80                    ld      hl, (word_8041)
RAM:6CF7 11 56 FC                    ld      de, UNENCODED_BUFFER
RAM:6CFA 01 00 01                    ld      bc, 256
RAM:6CFD ED B0                       ldir
RAM:6CFF 22 41 80                    ld      (word_8041), hl
RAM:6D02 06 00                       ld      b, 0
RAM:6D04 CD B7 79                    call    READ_WRITE_SEC_DATA ; read/write sector data. B=1 for READ, B=0 for WRITE
RAM:6D07 B7                          or      a
RAM:6D08 20 5D                       jr      nz, dcopy_error
RAM:6D0A FD 34 11                    inc     (iy+11h)
RAM:6D0D FD 7E 11                    ld      a, (iy+11h)
RAM:6D10 FE 10                       cp      10h
RAM:6D12 20 E0                       jr      nz, loc_6CF4
RAM:6D14 FD 36 11 00                 ld      (iy+11h), 0
RAM:6D18 FD 34 12                    inc     (iy+12h)
RAM:6D1B FD 7E 12                    ld      a, (iy+12h)
RAM:6D1E 21 41 FB                    ld      hl, byte_FB41
RAM:6D21 BE                          cp      (hl)
RAM:6D22 28 16                       jr      z, loc_6D3A
RAM:6D24 21 5A FE                    ld      hl, byte_FE5A
RAM:6D27 46                          ld      b, (hl)
RAM:6D28 90                          sub     b
RAM:6D29 FD 96 47                    sub     (iy+47h)
RAM:6D2C 20 C6                       jr      nz, loc_6CF4
RAM:6D2E 3A 5A FE                    ld      a, (byte_FE5A)
RAM:6D31 FD 86 47                    add     a, (iy+47h)
RAM:6D34 FD 77 47                    ld      (iy+47h), a
RAM:6D37 C3 9B 6C                    jp      loc_6C9B
RAM:6D3A             ; ---------------------------------------------------------------------------
RAM:6D3A
RAM:6D3A             loc_6D3A:                               ; CODE XREF: RAM:6C5F↑j
RAM:6D3A                                                     ; RAM:6D22↑j
RAM:6D3A CD C8 7C                    call    DRIVE_OFF
RAM:6D3D CD 4B 6D                    call    sub_6D4B
RAM:6D40 01 59 00                    ld      bc, 59h ; 'Y'
RAM:6D43 C5                          push    bc
RAM:6D44 DD 21 FA 5E                 ld      ix, 5EFAh
RAM:6D48 C3 72 62                    jp      loc_6272
RAM:6D4B
RAM:6D4B             ; =============== S U B R O U T I N E =======================================
RAM:6D4B
RAM:6D4B
RAM:6D4B             sub_6D4B:                               ; CODE XREF: WRITE_ZERO_SECTOR-604↑p
RAM:6D4B                                                     ; RAM:6D3D↑p ...
RAM:6D4B 21 95 89                    ld      hl, byte_8995
RAM:6D4E 22 41 80                    ld      (word_8041), hl
RAM:6D51 36 00                       ld      (hl), 0
RAM:6D53 23                          inc     hl
RAM:6D54 36 00                       ld      (hl), 0
RAM:6D56 23                          inc     hl
RAM:6D57 22 E9 83                    ld      (word_83E9), hl
RAM:6D5A F5                          push    af
RAM:6D5B 3A 5C FE                    ld      a, (byte_FE5C)
RAM:6D5E FD 77 0B                    ld      (iy+0Bh), a
RAM:6D61 F1                          pop     af
RAM:6D62 FD 36 48 00                 ld      (iy+48h), 0
RAM:6D66 C9                          ret
RAM:6D66             ; End of function sub_6D4B
RAM:6D66
RAM:6D67             ; ---------------------------------------------------------------------------
RAM:6D67
RAM:6D67             dcopy_error:                            ; CODE XREF: RAM:6C52↑j
RAM:6D67                                                     ; RAM:6C5C↑j ...
RAM:6D67 CD 4B 6D                    call    sub_6D4B
RAM:6D6A C3 06 62                    jp      dos_error
RAM:6D6D
RAM:6D6D             ; =============== S U B R O U T I N E =======================================
RAM:6D6D
RAM:6D6D             ; get source and destination drives, insert into PARAM table
RAM:6D6D
RAM:6D6D             GET_SOURCE_and_DEST:                    ; CODE XREF: RAM:6C2B↑p
RAM:6D6D                                                     ; RAM:6C98↑p
RAM:6D6D 21 CC 6D                    ld      hl, aSourceDrive12 ; "\n\rSOURCE DRIVE(1/2)? "
RAM:6D70 CD 7B 60                    call    PRINT_STRING_HL
RAM:6D73 11 FF FF                    ld      de, 0FFFFh
RAM:6D76
RAM:6D76             loc_6D76:                               ; CODE XREF: GET_SOURCE_and_DEST+16↓j
RAM:6D76 CD C0 6D                    call    SCREEN_to_BANK1 ; switch screen in, and read keyboard
RAM:6D79 FE 03                       cp      3
RAM:6D7B 28 20                       jr      z, loc_6D9D
RAM:6D7D FE 31                       cp      31h ; '1'
RAM:6D7F 28 04                       jr      z, loc_6D85
RAM:6D81 FE 32                       cp      32h ; '2'
RAM:6D83 20 F1                       jr      nz, loc_6D76
RAM:6D85
RAM:6D85             loc_6D85:                               ; CODE XREF: GET_SOURCE_and_DEST+12↑j
RAM:6D85 CD 75 60                    call    CHAR_OUT
RAM:6D88 E6 03                       and     3
RAM:6D8A FD 77 0D                    ld      (iy+13), a      ; Source Drive #
RAM:6D8D 21 E2 6D                    ld      hl, aDestinationDri ; "\n\rDESTINATION DRIVE(1/2)? "
RAM:6D90 CD 7B 60                    call    PRINT_STRING_HL
RAM:6D93 11 FF FF                    ld      de, 0FFFFh
RAM:6D96
RAM:6D96             loc_6D96:                               ; CODE XREF: GET_SOURCE_and_DEST+3E↓j
RAM:6D96 CD C0 6D                    call    SCREEN_to_BANK1 ; switch screen in, and read keyboard
RAM:6D99 FE 03                       cp      3
RAM:6D9B 20 08                       jr      nz, loc_6DA5
RAM:6D9D
RAM:6D9D             loc_6D9D:                               ; CODE XREF: GET_SOURCE_and_DEST+E↑j
RAM:6D9D                                                     ; sub_6E0A+11↓j
RAM:6D9D CD 4B 6D                    call    sub_6D4B
RAM:6DA0 3E 11                       ld      a, 17
RAM:6DA2 C3 06 62                    jp      dos_error
RAM:6DA5             ; ---------------------------------------------------------------------------
RAM:6DA5
RAM:6DA5             loc_6DA5:                               ; CODE XREF: GET_SOURCE_and_DEST+2E↑j
RAM:6DA5 FE 31                       cp      31h ; '1'
RAM:6DA7 28 04                       jr      z, loc_6DAD
RAM:6DA9 FE 32                       cp      32h ; '2'
RAM:6DAB 20 E9                       jr      nz, loc_6D96
RAM:6DAD
RAM:6DAD             loc_6DAD:                               ; CODE XREF: GET_SOURCE_and_DEST+3A↑j
RAM:6DAD CD 75 60                    call    CHAR_OUT
RAM:6DB0 E6 03                       and     3
RAM:6DB2 FD 77 10                    ld      (iy+16), a      ; Destination Drive #
RAM:6DB5 3E 0A                       ld      a, 0Ah
RAM:6DB7 CD 75 60                    call    CHAR_OUT
RAM:6DBA 3E 0D                       ld      a, 0Dh
RAM:6DBC CD 75 60                    call    CHAR_OUT
RAM:6DBF C9                          ret
RAM:6DBF             ; End of function GET_SOURCE_and_DEST
RAM:6DBF
RAM:6DC0
RAM:6DC0             ; =============== S U B R O U T I N E =======================================
RAM:6DC0
RAM:6DC0             ; switch screen in, and read keyboard
RAM:6DC0
RAM:6DC0             SCREEN_to_BANK1:                        ; CODE XREF: GET_SOURCE_and_DEST:loc_6D76↑p
RAM:6DC0                                                     ; GET_SOURCE_and_DEST:loc_6D96↑p ...
RAM:6DC0 2A E2 85                    ld      hl, (word_85E2)
RAM:6DC3 3A 64 86                    ld      a, (VIDEO_BANK) ; 3 for LASER350, 7 for LASER500/700
RAM:6DC6 32 66 86                    ld      (BANK1_COPY), a
RAM:6DC9 C3 67 FF                    jp      SCREEN_to_BK1   ; Jump to High mem routine to switch screen in, read keyboard, then return
RAM:6DC9             ; End of function SCREEN_to_BANK1
RAM:6DC9
RAM:6DC9             ; ---------------------------------------------------------------------------
RAM:6DCC 0A 0D 53 4F+aSourceDrive12: .ascii '\n'             ; DATA XREF: GET_SOURCE_and_DEST↑o
RAM:6DCC 55 52 43 45+                .ascii '\rSOURCE DRIVE(1/2)? ',0
RAM:6DE2 0A 0D 44 45+aDestinationDri:.ascii '\n'             ; DATA XREF: GET_SOURCE_and_DEST+20↑o
RAM:6DE2 53 54 49 4E+                .ascii '\rDESTINATION DRIVE(1/2)? ',0
RAM:6DFD
RAM:6DFD             ; =============== S U B R O U T I N E =======================================
RAM:6DFD
RAM:6DFD
RAM:6DFD             sub_6DFD:                               ; CODE XREF: RAM:6C2E↑p
RAM:6DFD                                                     ; RAM:loc_6C9B↑p
RAM:6DFD FD 7E 0D                    ld      a, (iy+13)
RAM:6E00 CD A6 6E                    call    SET_DRIVE_SEL_MASK
RAM:6E03 FD BE 10                    cp      (iy+16)         ; Compare to destination drive
RAM:6E06 C0                          ret     nz              ; return if different, otherwise prompt for source
RAM:6E07 21 3F 6E                    ld      hl, aInsertSourceDr ; "\n\rINSERT SOURCE DRIVE\n\r"
RAM:6E07             ; End of function sub_6DFD
RAM:6E07
RAM:6E0A
RAM:6E0A             ; =============== S U B R O U T I N E =======================================
RAM:6E0A
RAM:6E0A
RAM:6E0A             sub_6E0A:                               ; CODE XREF: sub_6E23+D↓p
RAM:6E0A CD 7B 60                    call    PRINT_STRING_HL
RAM:6E0D 21 57 6E                    ld      hl, aPressSpaceWhen ; "(PRESS SPACE WHEN READY)\n\r"
RAM:6E10 CD 7B 60                    call    PRINT_STRING_HL
RAM:6E13 11 FF FF                    ld      de, 0FFFFh
RAM:6E16
RAM:6E16             wait_space_bar:                         ; CODE XREF: sub_6E0A+16↓j
RAM:6E16 CD C0 6D                    call    SCREEN_to_BANK1 ; switch screen in, and read keyboard
RAM:6E19 FE 03                       cp      3               ; break
RAM:6E1B CA 9D 6D                    jp      z, loc_6D9D
RAM:6E1E FE 20                       cp      20h ; ' '       ; Was space bar pressed?
RAM:6E20 20 F4                       jr      nz, wait_space_bar
RAM:6E22 C9                          ret
RAM:6E22             ; End of function sub_6E0A
RAM:6E22
RAM:6E23
RAM:6E23             ; =============== S U B R O U T I N E =======================================
RAM:6E23
RAM:6E23
RAM:6E23             sub_6E23:                               ; CODE XREF: RAM:6C55↑p
RAM:6E23                                                     ; RAM:6CE8↑p
RAM:6E23 FD 7E 10                    ld      a, (iy+16)
RAM:6E26 CD A6 6E                    call    SET_DRIVE_SEL_MASK
RAM:6E29 FD BE 0D                    cp      (iy+13)
RAM:6E2C C0                          ret     nz              ; return if source and dest drive are different. No need to prompt
RAM:6E2D 21 72 6E                    ld      hl, aInsertDestinat ; "\n\rINSERT DESTINATION DRIVE\n\r"
RAM:6E30 CD 0A 6E                    call    sub_6E0A
RAM:6E33 CD 91 7C                    call    sub_7C91
RAM:6E36 C5                          push    bc
RAM:6E37 01 BC 02                    ld      bc, 700
RAM:6E3A CD 34 79                    call    DELAY_BC
RAM:6E3D C1                          pop     bc
RAM:6E3E C9                          ret
RAM:6E3E             ; End of function sub_6E23
RAM:6E3E
RAM:6E3E             ; ---------------------------------------------------------------------------
RAM:6E3F 0A 0D 49 4E+aInsertSourceDr:.ascii '\n'             ; DATA XREF: sub_6DFD+A↑o
RAM:6E3F 53 45 52 54+                .ascii '\rINSERT SOURCE DRIVE\n'
RAM:6E3F 20 53 4F 55+                .ascii '\r',0
RAM:6E57 28 50 52 45+aPressSpaceWhen:.ascii '(PRESS SPACE WHEN READY)\n'
RAM:6E57 53 53 20 53+                                        ; DATA XREF: sub_6E0A+3↑o
RAM:6E57 50 41 43 45+                .ascii '\r',0
RAM:6E72 0A 0D 49 4E+aInsertDestinat:.ascii '\n'             ; DATA XREF: sub_6E23+A↑o
RAM:6E72 53 45 52 54+                .ascii '\rINSERT DESTINATION DRIVE\n'
RAM:6E72 20 44 45 53+                .ascii '\r',0
RAM:6E8F             ; ---------------------------------------------------------------------------
RAM:6E8F
RAM:6E8F             DRIVE:                                  ; DATA XREF: RAM:63CC↑o
RAM:6E8F CD F9 70                    call    sub_70F9
RAM:6E92 DD 21 0A 35                 ld      ix, 350Ah
RAM:6E96 DF                          rst     18h
RAM:6E97 B7                          or      a
RAM:6E98 20 05                       jr      nz, loc_6E9F
RAM:6E9A
RAM:6E9A             loc_6E9A:                               ; CODE XREF: RAM:6EA4↓j
RAM:6E9A 3E 05                       ld      a, 5
RAM:6E9C C3 78 62                    jp      loc_6278
RAM:6E9F             ; ---------------------------------------------------------------------------
RAM:6E9F
RAM:6E9F             loc_6E9F:                               ; CODE XREF: RAM:6E98↑j
RAM:6E9F FE 03                       cp      3
RAM:6EA1 DA A6 6E                    jp      c, SET_DRIVE_SEL_MASK
RAM:6EA4 18 F4                       jr      loc_6E9A
RAM:6EA6
RAM:6EA6             ; =============== S U B R O U T I N E =======================================
RAM:6EA6
RAM:6EA6
RAM:6EA6             SET_DRIVE_SEL_MASK:                     ; CODE XREF: sub_6DFD+3↑p
RAM:6EA6                                                     ; sub_6E23+3↑p ...
RAM:6EA6 FE 01                       cp      1
RAM:6EA8 20 05                       jr      nz, loc_6EAF
RAM:6EAA FD 36 0B 40                 ld      (iy+0Bh), 40h ; '@' ; mask for drive#1 in status byte
RAM:6EAE C9                          ret
RAM:6EAF             ; ---------------------------------------------------------------------------
RAM:6EAF
RAM:6EAF             loc_6EAF:                               ; CODE XREF: SET_DRIVE_SEL_MASK+2↑j
RAM:6EAF FD 36 0B 60                 ld      (iy+0Bh), 60h ; '`' ; mask for drive#2 in status byte
RAM:6EB3 C9                          ret
RAM:6EB3             ; End of function SET_DRIVE_SEL_MASK
RAM:6EB3
RAM:6EB4
RAM:6EB4             ; =============== S U B R O U T I N E =======================================
RAM:6EB4
RAM:6EB4
RAM:6EB4             sub_6EB4:                               ; CODE XREF: RAM:IN_HASH↓p
RAM:6EB4                                                     ; RAM:PR_HASH↓p ...
RAM:6EB4 DD 21 5D 34                 ld      ix, 345Dh
RAM:6EB8 DF                          rst     18h
RAM:6EB9 C9                          ret
RAM:6EB9             ; End of function sub_6EB4
RAM:6EB9
RAM:6EBA
RAM:6EBA             ; =============== S U B R O U T I N E =======================================
RAM:6EBA
RAM:6EBA
RAM:6EBA             sub_6EBA:                               ; CODE XREF: RAM:63EA↑p
RAM:6EBA                                                     ; RAM:7009↓p ...
RAM:6EBA DD 21 D3 2E                 ld      ix, 2ED3h
RAM:6EBE DF                          rst     18h
RAM:6EBF C9                          ret
RAM:6EBF             ; End of function sub_6EBA
RAM:6EBF
RAM:6EC0
RAM:6EC0             ; =============== S U B R O U T I N E =======================================
RAM:6EC0
RAM:6EC0
RAM:6EC0             sub_6EC0:                               ; CODE XREF: RAM:7377↓p
RAM:6EC0                                                     ; sub_73E0+3E↓p ...
RAM:6EC0 DD 21 61 3D                 ld      ix, 3D61h
RAM:6EC4 DF                          rst     18h
RAM:6EC5 C9                          ret
RAM:6EC5             ; End of function sub_6EC0
RAM:6EC5
RAM:6EC6
RAM:6EC6             ; =============== S U B R O U T I N E =======================================
RAM:6EC6
RAM:6EC6
RAM:6EC6             sub_6EC6:                               ; CODE XREF: sub_6EC6+4↓j
RAM:6EC6                                                     ; RAM:6EFB↓p ...
RAM:6EC6 2B                          dec     hl
RAM:6EC7 7E                          ld      a, (hl)
RAM:6EC8 FE 2C                       cp      2Ch ; ','
RAM:6ECA 20 FA                       jr      nz, sub_6EC6
RAM:6ECC FD 36 10 00                 ld      (iy+10h), 0
RAM:6ED0 2B                          dec     hl
RAM:6ED1
RAM:6ED1             loc_6ED1:                               ; CODE XREF: sub_6EC6+11↓j
RAM:6ED1 23                          inc     hl
RAM:6ED2
RAM:6ED2             loc_6ED2:                               ; CODE XREF: sub_6EC6+25↓j
RAM:6ED2 7E                          ld      a, (hl)
RAM:6ED3 B7                          or      a
RAM:6ED4 C8                          ret     z
RAM:6ED5 FE 2C                       cp      2Ch ; ','
RAM:6ED7 20 F8                       jr      nz, loc_6ED1
RAM:6ED9 23                          inc     hl
RAM:6EDA FD 7E 10                    ld      a, (iy+10h)
RAM:6EDD B7                          or      a
RAM:6EDE 28 08                       jr      z, loc_6EE8
RAM:6EE0 7E                          ld      a, (hl)
RAM:6EE1 FE 00                       cp      0
RAM:6EE3 3E 01                       ld      a, 1
RAM:6EE5 CA 06 62                    jp      z, dos_error
RAM:6EE8
RAM:6EE8             loc_6EE8:                               ; CODE XREF: sub_6EC6+18↑j
RAM:6EE8 FD 34 10                    inc     (iy+10h)
RAM:6EEB 18 E5                       jr      loc_6ED2
RAM:6EEB             ; End of function sub_6EC6
RAM:6EEB
RAM:6EED             ; ---------------------------------------------------------------------------
RAM:6EED
RAM:6EED             IN_HASH:                                ; DATA XREF: RAM:63CE↑o
RAM:6EED CD B4 6E                    call    sub_6EB4
RAM:6EF0 CD 09 78                    call    sub_7809
RAM:6EF3 B7                          or      a
RAM:6EF4 C2 06 62                    jp      nz, dos_error
RAM:6EF7 CF                          rst     8
RAM:6EF8 2C                          inc     l
RAM:6EF9 E5                          push    hl
RAM:6EFA E5                          push    hl
RAM:6EFB CD C6 6E                    call    sub_6EC6
RAM:6EFE E1                          pop     hl
RAM:6EFF CD 40 71                    call    sub_7140
RAM:6F02 FE 08                       cp      8
RAM:6F04 3E 05                       ld      a, 5
RAM:6F06 C2 06 62                    jp      nz, dos_error
RAM:6F09 13                          inc     de
RAM:6F0A 1A                          ld      a, (de)
RAM:6F0B B7                          or      a
RAM:6F0C 3E 0F                       ld      a, 0Fh
RAM:6F0E C2 06 62                    jp      nz, dos_error
RAM:6F11 CD C8 6F                    call    sub_6FC8
RAM:6F14 1B                          dec     de
RAM:6F15 1A                          ld      a, (de)
RAM:6F16 FE 02                       cp      2
RAM:6F18 28 1D                       jr      z, loc_6F37
RAM:6F1A CD F9 70                    call    sub_70F9
RAM:6F1D 3E 02                       ld      a, 2
RAM:6F1F 12                          ld      (de), a
RAM:6F20 EB                          ex      de, hl
RAM:6F21 11 0A 00                    ld      de, 0Ah
RAM:6F24 19                          add     hl, de
RAM:6F25 7E                          ld      a, (hl)
RAM:6F26 23                          inc     hl
RAM:6F27 FD 77 12                    ld      (iy+12h), a
RAM:6F2A 7E                          ld      a, (hl)
RAM:6F2B FD 77 11                    ld      (iy+11h), a
RAM:6F2E 06 01                       ld      b, 1
RAM:6F30 CD B7 79                    call    READ_WRITE_SEC_DATA ; read/write sector data. B=1 for READ, B=0 for WRITE
RAM:6F33 B7                          or      a
RAM:6F34 C2 06 62                    jp      nz, dos_error
RAM:6F37
RAM:6F37             loc_6F37:                               ; CODE XREF: RAM:6F18↑j
RAM:6F37 06 FD                       ld      b, 0FDh
RAM:6F39 21 89 82                    ld      hl, byte_8289
RAM:6F3C
RAM:6F3C             loc_6F3C:                               ; CODE XREF: RAM:6F5A↓j
RAM:6F3C                                                     ; RAM:7691↓j
RAM:6F3C CD 70 6F                    call    sub_6F70
RAM:6F3F 77                          ld      (hl), a
RAM:6F40 5F                          ld      e, a
RAM:6F41 23                          inc     hl
RAM:6F42 FE 2C                       cp      2Ch ; ','
RAM:6F44 20 0F                       jr      nz, loc_6F55
RAM:6F46 FD 35 10                    dec     (iy+10h)
RAM:6F49 FD 7E 10                    ld      a, (iy+10h)
RAM:6F4C B7                          or      a
RAM:6F4D 20 06                       jr      nz, loc_6F55
RAM:6F4F 2B                          dec     hl
RAM:6F50 36 0D                       ld      (hl), 0Dh
RAM:6F52 23                          inc     hl
RAM:6F53 18 0C                       jr      loc_6F61
RAM:6F55             ; ---------------------------------------------------------------------------
RAM:6F55
RAM:6F55             loc_6F55:                               ; CODE XREF: RAM:6F44↑j
RAM:6F55                                                     ; RAM:6F4D↑j
RAM:6F55 7B                          ld      a, e
RAM:6F56 FE 0D                       cp      0Dh
RAM:6F58 28 07                       jr      z, loc_6F61
RAM:6F5A 10 E0                       djnz    loc_6F3C
RAM:6F5C 3E 17                       ld      a, 17h
RAM:6F5E C3 78 62                    jp      loc_6278
RAM:6F61             ; ---------------------------------------------------------------------------
RAM:6F61
RAM:6F61             loc_6F61:                               ; CODE XREF: RAM:6F53↑j
RAM:6F61                                                     ; RAM:6F58↑j
RAM:6F61 2B                          dec     hl
RAM:6F62 36 00                       ld      (hl), 0
RAM:6F64 21 88 82                    ld      hl, 8288h
RAM:6F67 D9                          exx
RAM:6F68 FB                          ei
RAM:6F69 DD 21 16 2E                 ld      ix, 2E16h
RAM:6F6D C3 72 62                    jp      loc_6272
RAM:6F70
RAM:6F70             ; =============== S U B R O U T I N E =======================================
RAM:6F70
RAM:6F70
RAM:6F70             sub_6F70:                               ; CODE XREF: RAM:loc_6F3C↑p
RAM:6F70 E5                          push    hl
RAM:6F71 D5                          push    de
RAM:6F72 C5                          push    bc
RAM:6F73 CD 40 71                    call    sub_7140
RAM:6F76 21 0C 00                    ld      hl, 0Ch
RAM:6F79 EB                          ex      de, hl
RAM:6F7A 19                          add     hl, de
RAM:6F7B 7E                          ld      a, (hl)
RAM:6F7C EB                          ex      de, hl
RAM:6F7D 21 56 FC                    ld      hl, UNENCODED_BUFFER
RAM:6F80 85                          add     a, l
RAM:6F81 6F                          ld      l, a
RAM:6F82 3E 00                       ld      a, 0
RAM:6F84 8C                          adc     a, h
RAM:6F85 67                          ld      h, a
RAM:6F86 7E                          ld      a, (hl)
RAM:6F87 B7                          or      a
RAM:6F88 20 04                       jr      nz, loc_6F8E
RAM:6F8A 0E 0D                       ld      c, 0Dh
RAM:6F8C 18 30                       jr      loc_6FBE
RAM:6F8E             ; ---------------------------------------------------------------------------
RAM:6F8E
RAM:6F8E             loc_6F8E:                               ; CODE XREF: sub_6F70+18↑j
RAM:6F8E 4F                          ld      c, a
RAM:6F8F 1A                          ld      a, (de)
RAM:6F90 3C                          inc     a
RAM:6F91 12                          ld      (de), a
RAM:6F92 FE FE                       cp      0FEh
RAM:6F94 20 28                       jr      nz, loc_6FBE
RAM:6F96 AF                          xor     a
RAM:6F97 12                          ld      (de), a
RAM:6F98 21 54 FD                    ld      hl, byte_FD54
RAM:6F9B 7E                          ld      a, (hl)
RAM:6F9C B7                          or      a
RAM:6F9D 20 07                       jr      nz, loc_6FA6
RAM:6F9F 23                          inc     hl
RAM:6FA0 7E                          ld      a, (hl)
RAM:6FA1 B7                          or      a
RAM:6FA2 28 1F                       jr      z, loc_6FC3
RAM:6FA4 2B                          dec     hl
RAM:6FA5 7E                          ld      a, (hl)
RAM:6FA6
RAM:6FA6             loc_6FA6:                               ; CODE XREF: sub_6F70+2D↑j
RAM:6FA6 FD 77 12                    ld      (iy+12h), a
RAM:6FA9 1B                          dec     de
RAM:6FAA 1B                          dec     de
RAM:6FAB 12                          ld      (de), a
RAM:6FAC 23                          inc     hl
RAM:6FAD 7E                          ld      a, (hl)
RAM:6FAE FD 77 11                    ld      (iy+11h), a
RAM:6FB1 13                          inc     de
RAM:6FB2 12                          ld      (de), a
RAM:6FB3 C5                          push    bc
RAM:6FB4 06 01                       ld      b, 1
RAM:6FB6 CD B7 79                    call    READ_WRITE_SEC_DATA ; read/write sector data. B=1 for READ, B=0 for WRITE
RAM:6FB9 C1                          pop     bc
RAM:6FBA B7                          or      a
RAM:6FBB C2 06 62                    jp      nz, dos_error
RAM:6FBE
RAM:6FBE             loc_6FBE:                               ; CODE XREF: sub_6F70+1C↑j
RAM:6FBE                                                     ; sub_6F70+24↑j ...
RAM:6FBE 79                          ld      a, c
RAM:6FBF C1                          pop     bc
RAM:6FC0 D1                          pop     de
RAM:6FC1 E1                          pop     hl
RAM:6FC2 C9                          ret
RAM:6FC3             ; ---------------------------------------------------------------------------
RAM:6FC3
RAM:6FC3             loc_6FC3:                               ; CODE XREF: sub_6F70+32↑j
RAM:6FC3 3E FF                       ld      a, 0FFh
RAM:6FC5 12                          ld      (de), a
RAM:6FC6 18 F6                       jr      loc_6FBE
RAM:6FC6             ; End of function sub_6F70
RAM:6FC6
RAM:6FC8
RAM:6FC8             ; =============== S U B R O U T I N E =======================================
RAM:6FC8
RAM:6FC8
RAM:6FC8             sub_6FC8:                               ; CODE XREF: RAM:6F11↑p
RAM:6FC8                                                     ; RAM:6FEC↓p
RAM:6FC8 D5                          push    de
RAM:6FC9 DD E1                       pop     ix
RAM:6FCB DD 7E 13                    ld      a, (ix+13h)
RAM:6FCE FE 52                       cp      52h ; 'R'
RAM:6FD0 3E 0C                       ld      a, 0Ch
RAM:6FD2 CA 06 62                    jp      z, dos_error
RAM:6FD5 C9                          ret
RAM:6FD5             ; End of function sub_6FC8
RAM:6FD5
RAM:6FD6             ; ---------------------------------------------------------------------------
RAM:6FD6
RAM:6FD6             PR_HASH:                                ; DATA XREF: RAM:63D0↑o
RAM:6FD6 CD B4 6E                    call    sub_6EB4
RAM:6FD9 CD 09 78                    call    sub_7809
RAM:6FDC B7                          or      a
RAM:6FDD C2 06 62                    jp      nz, dos_error
RAM:6FE0 E5                          push    hl
RAM:6FE1 CD 40 71                    call    sub_7140
RAM:6FE4 FE 08                       cp      8
RAM:6FE6 3E 05                       ld      a, 5
RAM:6FE8 C2 06 62                    jp      nz, dos_error
RAM:6FEB 13                          inc     de
RAM:6FEC CD C8 6F                    call    sub_6FC8
RAM:6FEF E1                          pop     hl
RAM:6FF0 CF                          rst     8
RAM:6FF1 2C                          inc     l
RAM:6FF2
RAM:6FF2             loc_6FF2:                               ; CODE XREF: RAM:702B↓j
RAM:6FF2 2B                          dec     hl
RAM:6FF3 CD 6F 60                    call    sub_606F
RAM:6FF6 CC 2D 70                    call    z, sub_702D
RAM:6FF9
RAM:6FF9             loc_6FF9:                               ; CODE XREF: RAM:7039↓j
RAM:6FF9 20 03                       jr      nz, loc_6FFE
RAM:6FFB E5                          push    hl
RAM:6FFC E1                          pop     hl
RAM:6FFD
RAM:6FFD             locret_6FFD:                            ; DATA XREF: RAM:loc_7C77↓r
RAM:6FFD                                                     ; RAM:7C86↓r
RAM:6FFD C9                          ret
RAM:6FFE             ; ---------------------------------------------------------------------------
RAM:6FFE
RAM:6FFE             loc_6FFE:                               ; CODE XREF: RAM:loc_6FF9↑j
RAM:6FFE E5                          push    hl
RAM:6FFF FE 2C                       cp      2Ch ; ','
RAM:7001 CA 34 70                    jp      z, loc_7034
RAM:7004 FE 3B                       cp      3Bh ; ';'
RAM:7006 28 2F                       jr      z, loc_7037
RAM:7008 C1                          pop     bc
RAM:7009 CD BA 6E                    call    sub_6EBA
RAM:700C E5                          push    hl
RAM:700D DD 21 0F 32                 ld      ix, 320Fh
RAM:7011 DF                          rst     18h
RAM:7012 28 13                       jr      z, loc_7027
RAM:7014 DD 21 B5 44                 ld      ix, 44B5h
RAM:7018 DF                          rst     18h
RAM:7019 DD 21 7D 62                 ld      ix, 627Dh
RAM:701D DF                          rst     18h
RAM:701E CD 3B 70                    call    sub_703B
RAM:7021 3E 20                       ld      a, 20h ; ' '
RAM:7023 CD 4F 70                    call    sub_704F
RAM:7026 B7                          or      a
RAM:7027
RAM:7027             loc_7027:                               ; CODE XREF: RAM:7012↑j
RAM:7027 CC 3B 70                    call    z, sub_703B
RAM:702A E1                          pop     hl
RAM:702B 18 C5                       jr      loc_6FF2
RAM:702D
RAM:702D             ; =============== S U B R O U T I N E =======================================
RAM:702D
RAM:702D
RAM:702D             sub_702D:                               ; CODE XREF: RAM:6FF6↑p
RAM:702D 3E 0D                       ld      a, 0Dh
RAM:702F CD 4F 70                    call    sub_704F
RAM:7032 AF                          xor     a
RAM:7033 C9                          ret
RAM:7033             ; End of function sub_702D
RAM:7033
RAM:7034             ; ---------------------------------------------------------------------------
RAM:7034
RAM:7034             loc_7034:                               ; CODE XREF: RAM:7001↑j
RAM:7034 CD 4F 70                    call    sub_704F
RAM:7037
RAM:7037             loc_7037:                               ; CODE XREF: RAM:7006↑j
RAM:7037 E1                          pop     hl
RAM:7038 D7                          rst     10h
RAM:7039 18 BE                       jr      loc_6FF9
RAM:703B
RAM:703B             ; =============== S U B R O U T I N E =======================================
RAM:703B
RAM:703B
RAM:703B             sub_703B:                               ; CODE XREF: RAM:701E↑p
RAM:703B                                                     ; RAM:loc_7027↑p
RAM:703B DD 21 4B 64                 ld      ix, sub_644B
RAM:703F DF                          rst     18h
RAM:7040 DD 21 A8 3C                 ld      ix, 3CA8h
RAM:7044 DF                          rst     18h
RAM:7045 14                          inc     d
RAM:7046
RAM:7046             loc_7046:                               ; CODE XREF: sub_703B+12↓j
RAM:7046 15                          dec     d
RAM:7047 C8                          ret     z
RAM:7048 0A                          ld      a, (bc)
RAM:7049 CD 4F 70                    call    sub_704F
RAM:704C 03                          inc     bc
RAM:704D 18 F7                       jr      loc_7046
RAM:704D             ; End of function sub_703B
RAM:704D
RAM:704F
RAM:704F             ; =============== S U B R O U T I N E =======================================
RAM:704F
RAM:704F
RAM:704F             sub_704F:                               ; CODE XREF: RAM:7023↑p
RAM:704F                                                     ; sub_702D+2↑p ...
RAM:704F E5                          push    hl
RAM:7050 D5                          push    de
RAM:7051 C5                          push    bc
RAM:7052 F5                          push    af
RAM:7053 CD 40 71                    call    sub_7140
RAM:7056 EB                          ex      de, hl
RAM:7057 23                          inc     hl
RAM:7058 7E                          ld      a, (hl)
RAM:7059 B7                          or      a
RAM:705A 3E 10                       ld      a, 10h
RAM:705C CA 06 62                    jp      z, dos_error
RAM:705F 2B                          dec     hl
RAM:7060 7E                          ld      a, (hl)
RAM:7061 FE 02                       cp      2
RAM:7063 28 22                       jr      z, loc_7087
RAM:7065 CD F9 70                    call    sub_70F9
RAM:7068 11 0A 00                    ld      de, 0Ah
RAM:706B 19                          add     hl, de
RAM:706C 7E                          ld      a, (hl)
RAM:706D 23                          inc     hl
RAM:706E FD 77 12                    ld      (iy+12h), a
RAM:7071 7E                          ld      a, (hl)
RAM:7072 23                          inc     hl
RAM:7073 FD 77 11                    ld      (iy+11h), a
RAM:7076 E5                          push    hl
RAM:7077 06 01                       ld      b, 1
RAM:7079 CD B7 79                    call    READ_WRITE_SEC_DATA ; read/write sector data. B=1 for READ, B=0 for WRITE
RAM:707C B7                          or      a
RAM:707D C2 06 62                    jp      nz, dos_error
RAM:7080 E1                          pop     hl
RAM:7081 11 F4 FF                    ld      de, 0FFF4h
RAM:7084 19                          add     hl, de
RAM:7085 36 02                       ld      (hl), 2
RAM:7087
RAM:7087             loc_7087:                               ; CODE XREF: sub_704F+14↑j
RAM:7087 11 0C 00                    ld      de, 0Ch
RAM:708A 19                          add     hl, de
RAM:708B 5E                          ld      e, (hl)
RAM:708C 34                          inc     (hl)
RAM:708D 16 00                       ld      d, 0
RAM:708F 21 56 FC                    ld      hl, 0FC56h
RAM:7092 19                          add     hl, de
RAM:7093 F1                          pop     af
RAM:7094 F5                          push    af
RAM:7095 77                          ld      (hl), a
RAM:7096 7B                          ld      a, e
RAM:7097 FE 00                       cp      0
RAM:7099 28 08                       jr      z, loc_70A3
RAM:709B 2B                          dec     hl
RAM:709C 7E                          ld      a, (hl)
RAM:709D FE 0D                       cp      0Dh
RAM:709F 20 02                       jr      nz, loc_70A3
RAM:70A1 36 2C                       ld      (hl), 2Ch ; ','
RAM:70A3
RAM:70A3             loc_70A3:                               ; CODE XREF: sub_704F+4A↑j
RAM:70A3                                                     ; sub_704F+50↑j
RAM:70A3 7B                          ld      a, e
RAM:70A4 3C                          inc     a
RAM:70A5 FE FE                       cp      0FEh
RAM:70A7 20 4B                       jr      nz, loc_70F4
RAM:70A9
RAM:70A9             loc_70A9:                               ; CODE XREF: sub_7139+4↓j
RAM:70A9 CD 61 7B                    call    sub_7B61
RAM:70AC B7                          or      a
RAM:70AD C2 06 62                    jp      nz, dos_error
RAM:70B0 21 53 FD                    ld      hl, byte_FD53
RAM:70B3 DD 7E 05                    ld      a, (ix+5)
RAM:70B6 FE 52                       cp      52h ; 'R'
RAM:70B8 28 07                       jr      z, loc_70C1
RAM:70BA 7E                          ld      a, (hl)
RAM:70BB FE 0D                       cp      0Dh
RAM:70BD 20 02                       jr      nz, loc_70C1
RAM:70BF 36 2C                       ld      (hl), 2Ch ; ','
RAM:70C1
RAM:70C1             loc_70C1:                               ; CODE XREF: sub_704F+69↑j
RAM:70C1                                                     ; sub_704F+6E↑j
RAM:70C1 23                          inc     hl
RAM:70C2 FD 7E 16                    ld      a, (iy+16h)
RAM:70C5 77                          ld      (hl), a
RAM:70C6 23                          inc     hl
RAM:70C7 FD 7E 15                    ld      a, (iy+15h)
RAM:70CA 77                          ld      (hl), a
RAM:70CB 06 00                       ld      b, 0
RAM:70CD CD B7 79                    call    READ_WRITE_SEC_DATA ; read/write sector data. B=1 for READ, B=0 for WRITE
RAM:70D0 B7                          or      a
RAM:70D1 C2 06 62                    jp      nz, dos_error
RAM:70D4 CD 20 68                    call    WRITE_T2_SF
RAM:70D7 CD 40 71                    call    sub_7140
RAM:70DA EB                          ex      de, hl
RAM:70DB 11 0A 00                    ld      de, 0Ah
RAM:70DE 19                          add     hl, de
RAM:70DF FD 7E 16                    ld      a, (iy+16h)
RAM:70E2 FD 77 12                    ld      (iy+12h), a
RAM:70E5 77                          ld      (hl), a
RAM:70E6 23                          inc     hl
RAM:70E7 FD 7E 15                    ld      a, (iy+15h)
RAM:70EA FD 77 11                    ld      (iy+11h), a
RAM:70ED 77                          ld      (hl), a
RAM:70EE 23                          inc     hl
RAM:70EF AF                          xor     a
RAM:70F0 77                          ld      (hl), a
RAM:70F1 CD 13 68                    call    WRITE_ZERO_SECTOR ; zero sector then write to disk
RAM:70F4
RAM:70F4             loc_70F4:                               ; CODE XREF: sub_704F+58↑j
RAM:70F4 F1                          pop     af
RAM:70F5 C1                          pop     bc
RAM:70F6 D1                          pop     de
RAM:70F7 E1                          pop     hl
RAM:70F8 C9                          ret
RAM:70F8             ; End of function sub_704F
RAM:70F8
RAM:70F9
RAM:70F9             ; =============== S U B R O U T I N E =======================================
RAM:70F9
RAM:70F9
RAM:70F9             sub_70F9:                               ; CODE XREF: RAM:6C95↑p
RAM:70F9                                                     ; RAM:DRIVE↑p ...
RAM:70F9 E5                          push    hl
RAM:70FA D5                          push    de
RAM:70FB FD E5                       push    iy
RAM:70FD E1                          pop     hl
RAM:70FE 11 17 00                    ld      de, 17h
RAM:7101 19                          add     hl, de
RAM:7102 CD 0F 71                    call    sub_710F
RAM:7105 11 15 00                    ld      de, 15h
RAM:7108 19                          add     hl, de
RAM:7109 CD 0F 71                    call    sub_710F
RAM:710C D1                          pop     de
RAM:710D E1                          pop     hl
RAM:710E C9                          ret
RAM:710E             ; End of function sub_70F9
RAM:710E
RAM:710F
RAM:710F             ; =============== S U B R O U T I N E =======================================
RAM:710F
RAM:710F
RAM:710F             sub_710F:                               ; CODE XREF: sub_70F9+9↑p
RAM:710F                                                     ; sub_70F9+10↑p
RAM:710F 7E                          ld      a, (hl)
RAM:7110 B7                          or      a
RAM:7111 C8                          ret     z
RAM:7112 FE 02                       cp      2
RAM:7114 C0                          ret     nz
RAM:7115 36 01                       ld      (hl), 1
RAM:7117 23                          inc     hl
RAM:7118 7E                          ld      a, (hl)
RAM:7119 B7                          or      a
RAM:711A 2B                          dec     hl
RAM:711B C8                          ret     z
RAM:711C 11 0A 00                    ld      de, 0Ah
RAM:711F 19                          add     hl, de
RAM:7120 7E                          ld      a, (hl)
RAM:7121 FD 77 12                    ld      (iy+12h), a
RAM:7124 23                          inc     hl
RAM:7125 7E                          ld      a, (hl)
RAM:7126 FD 77 11                    ld      (iy+11h), a
RAM:7129 E5                          push    hl
RAM:712A 06 00                       ld      b, 0
RAM:712C CD B7 79                    call    READ_WRITE_SEC_DATA ; read/write sector data. B=1 for READ, B=0 for WRITE
RAM:712F E1                          pop     hl
RAM:7130 B7                          or      a
RAM:7131 C2 06 62                    jp      nz, dos_error
RAM:7134 11 F5 FF                    ld      de, 0FFF5h
RAM:7137 19                          add     hl, de
RAM:7138 C9                          ret
RAM:7138             ; End of function sub_710F
RAM:7138
RAM:7139
RAM:7139             ; =============== S U B R O U T I N E =======================================
RAM:7139
RAM:7139
RAM:7139             sub_7139:                               ; CODE XREF: sub_75C6:loc_7607↓p
RAM:7139 E5                          push    hl
RAM:713A D5                          push    de
RAM:713B C5                          push    bc
RAM:713C F5                          push    af
RAM:713D C3 A9 70                    jp      loc_70A9
RAM:713D             ; End of function sub_7139
RAM:713D
RAM:7140
RAM:7140             ; =============== S U B R O U T I N E =======================================
RAM:7140
RAM:7140
RAM:7140             sub_7140:                               ; CODE XREF: RAM:6EFF↑p
RAM:7140                                                     ; sub_6F70+3↑p ...
RAM:7140 FD E5                       push    iy
RAM:7142 E1                          pop     hl
RAM:7143 FD 36 00 00                 ld      (iy+0), 0
RAM:7147 11 17 00                    ld      de, 17h
RAM:714A 19                          add     hl, de
RAM:714B 7E                          ld      a, (hl)
RAM:714C B7                          or      a
RAM:714D 28 09                       jr      z, loc_7158
RAM:714F CD 87 71                    call    sub_7187
RAM:7152 FE 08                       cp      8
RAM:7154 C8                          ret     z
RAM:7155 FD 34 00                    inc     (iy+0)
RAM:7158
RAM:7158             loc_7158:                               ; CODE XREF: sub_7140+D↑j
RAM:7158 11 15 00                    ld      de, 15h
RAM:715B 19                          add     hl, de
RAM:715C 7E                          ld      a, (hl)
RAM:715D B7                          or      a
RAM:715E 20 14                       jr      nz, loc_7174
RAM:7160 FD E5                       push    iy
RAM:7162 E1                          pop     hl
RAM:7163 11 17 00                    ld      de, 17h
RAM:7166 19                          add     hl, de
RAM:7167 FD 7E 00                    ld      a, (iy+0)
RAM:716A B7                          or      a
RAM:716B 28 04                       jr      z, loc_7171
RAM:716D 11 15 00                    ld      de, 15h
RAM:7170 19                          add     hl, de
RAM:7171
RAM:7171             loc_7171:                               ; CODE XREF: sub_7140+2B↑j
RAM:7171 3E 05                       ld      a, 5
RAM:7173 C9                          ret
RAM:7174             ; ---------------------------------------------------------------------------
RAM:7174
RAM:7174             loc_7174:                               ; CODE XREF: sub_7140+1E↑j
RAM:7174 CD 87 71                    call    sub_7187
RAM:7177 FE 08                       cp      8
RAM:7179 C8                          ret     z
RAM:717A B7                          or      a
RAM:717B ED 52                       sbc     hl, de
RAM:717D FD 7E 17                    ld      a, (iy+17h)
RAM:7180 B7                          or      a
RAM:7181 3E 0E                       ld      a, 0Eh
RAM:7183 C0                          ret     nz
RAM:7184 3E 05                       ld      a, 5
RAM:7186 C9                          ret
RAM:7186             ; End of function sub_7140
RAM:7186
RAM:7187
RAM:7187             ; =============== S U B R O U T I N E =======================================
RAM:7187
RAM:7187
RAM:7187             sub_7187:                               ; CODE XREF: sub_7140+F↑p
RAM:7187                                                     ; sub_7140:loc_7174↑p
RAM:7187 FD E5                       push    iy
RAM:7189 E5                          push    hl
RAM:718A 06 08                       ld      b, 8
RAM:718C 23                          inc     hl
RAM:718D 23                          inc     hl
RAM:718E
RAM:718E             loc_718E:                               ; CODE XREF: sub_7187+10↓j
RAM:718E FD 7E 01                    ld      a, (iy+1)
RAM:7191 BE                          cp      (hl)
RAM:7192 23                          inc     hl
RAM:7193 FD 23                       inc     iy
RAM:7195 20 08                       jr      nz, loc_719F
RAM:7197 10 F5                       djnz    loc_718E
RAM:7199 3E 08                       ld      a, 8
RAM:719B D1                          pop     de
RAM:719C FD E1                       pop     iy
RAM:719E C9                          ret
RAM:719F             ; ---------------------------------------------------------------------------
RAM:719F
RAM:719F             loc_719F:                               ; CODE XREF: sub_7187+E↑j
RAM:719F E1                          pop     hl
RAM:71A0 FD E1                       pop     iy
RAM:71A2 3E 05                       ld      a, 5
RAM:71A4 C9                          ret
RAM:71A4             ; End of function sub_7187
RAM:71A4
RAM:71A5             ; ---------------------------------------------------------------------------
RAM:71A5
RAM:71A5             CLOSE:                                  ; DATA XREF: RAM:631B↑o
RAM:71A5                                                     ; RAM:63BC↑o
RAM:71A5 CD F8 77                    call    sub_77F8
RAM:71A8 B7                          or      a
RAM:71A9 C2 06 62                    jp      nz, dos_error
RAM:71AC E5                          push    hl
RAM:71AD 2A 3F 80                    ld      hl, (word_803F)
RAM:71B0 23                          inc     hl
RAM:71B1 7C                          ld      a, h
RAM:71B2 B5                          or      l
RAM:71B3 20 0A                       jr      nz, loc_71BF
RAM:71B5 CD 40 71                    call    sub_7140
RAM:71B8 E1                          pop     hl
RAM:71B9 FE 08                       cp      8
RAM:71BB C0                          ret     nz
RAM:71BC AF                          xor     a
RAM:71BD 12                          ld      (de), a
RAM:71BE C9                          ret
RAM:71BF             ; ---------------------------------------------------------------------------
RAM:71BF
RAM:71BF             loc_71BF:                               ; CODE XREF: RAM:71B3↑j
RAM:71BF CD 40 71                    call    sub_7140
RAM:71C2 E1                          pop     hl
RAM:71C3 FE 08                       cp      8
RAM:71C5 C0                          ret     nz
RAM:71C6 1A                          ld      a, (de)
RAM:71C7 FE 02                       cp      2
RAM:71C9 3E 00                       ld      a, 0
RAM:71CB 12                          ld      (de), a
RAM:71CC C0                          ret     nz
RAM:71CD 13                          inc     de
RAM:71CE 1A                          ld      a, (de)
RAM:71CF E6 7F                       and     7Fh
RAM:71D1 B7                          or      a
RAM:71D2 C8                          ret     z
RAM:71D3 E5                          push    hl
RAM:71D4 EB                          ex      de, hl
RAM:71D5 11 09 00                    ld      de, 9
RAM:71D8 19                          add     hl, de
RAM:71D9 7E                          ld      a, (hl)
RAM:71DA 23                          inc     hl
RAM:71DB FD 77 12                    ld      (iy+12h), a
RAM:71DE 7E                          ld      a, (hl)
RAM:71DF FD 77 11                    ld      (iy+11h), a
RAM:71E2 06 00                       ld      b, 0
RAM:71E4 CD B7 79                    call    READ_WRITE_SEC_DATA ; read/write sector data. B=1 for READ, B=0 for WRITE
RAM:71E7 B7                          or      a
RAM:71E8 C2 06 62                    jp      nz, dos_error
RAM:71EB E1                          pop     hl
RAM:71EC C9                          ret
RAM:71ED             ; ---------------------------------------------------------------------------
RAM:71ED
RAM:71ED             OPEN:                                   ; DATA XREF: RAM:6311↑o
RAM:71ED                                                     ; RAM:63BA↑o
RAM:71ED CD B4 6E                    call    sub_6EB4
RAM:71F0 CD 09 78                    call    sub_7809
RAM:71F3 E5                          push    hl
RAM:71F4 B7                          or      a
RAM:71F5 C2 06 62                    jp      nz, dos_error
RAM:71F8 F1                          pop     af
RAM:71F9 CF                          rst     8
RAM:71FA 2C                          inc     l
RAM:71FB 23                          inc     hl
RAM:71FC FE 4C                       cp      4Ch ; 'L'
RAM:71FE CA 73 73                    jp      z, loc_7373
RAM:7201 2B                          dec     hl
RAM:7202 FD 36 50 44                 ld      (iy+50h), 44h ; 'D'
RAM:7206 DD 21 0A 35                 ld      ix, 350Ah
RAM:720A DF                          rst     18h
RAM:720B B7                          or      a
RAM:720C 28 09                       jr      z, loc_7217
RAM:720E FE 02                       cp      2
RAM:7210 38 05                       jr      c, loc_7217
RAM:7212 3E 05                       ld      a, 5
RAM:7214 C3 78 62                    jp      loc_6278
RAM:7217             ; ---------------------------------------------------------------------------
RAM:7217
RAM:7217             loc_7217:                               ; CODE XREF: RAM:720C↑j
RAM:7217                                                     ; RAM:7210↑j
RAM:7217 FD 77 0C                    ld      (iy+0Ch), a
RAM:721A E5                          push    hl
RAM:721B
RAM:721B             loc_721B:                               ; CODE XREF: RAM:7392↓j
RAM:721B CD F9 70                    call    sub_70F9
RAM:721E CD 40 71                    call    sub_7140
RAM:7221 FE 05                       cp      5
RAM:7223 C2 06 62                    jp      nz, dos_error
RAM:7226 E5                          push    hl
RAM:7227 DD E1                       pop     ix
RAM:7229 FD 7E 50                    ld      a, (iy+50h)
RAM:722C FD 77 09                    ld      (iy+9), a
RAM:722F DD 77 14                    ld      (ix+14h), a
RAM:7232 36 01                       ld      (hl), 1
RAM:7234 23                          inc     hl
RAM:7235 FE 52                       cp      52h ; 'R'
RAM:7237 3E 80                       ld      a, 80h
RAM:7239 28 03                       jr      z, loc_723E
RAM:723B FD 7E 0C                    ld      a, (iy+0Ch)
RAM:723E
RAM:723E             loc_723E:                               ; CODE XREF: RAM:7239↑j
RAM:723E 77                          ld      (hl), a
RAM:723F 23                          inc     hl
RAM:7240 FD E5                       push    iy
RAM:7242 D1                          pop     de
RAM:7243 13                          inc     de
RAM:7244 EB                          ex      de, hl
RAM:7245 01 08 00                    ld      bc, 8
RAM:7248 ED B0                       ldir
RAM:724A D5                          push    de
RAM:724B CD E6 67                    call    READ_T2_SF
RAM:724E CD 61 7B                    call    sub_7B61
RAM:7251 B7                          or      a
RAM:7252 C2 06 62                    jp      nz, dos_error
RAM:7255 E5                          push    hl
RAM:7256 C5                          push    bc
RAM:7257 CD BF 7B                    call    sub_7BBF
RAM:725A FE 02                       cp      2
RAM:725C C2 91 72                    jp      nz, loc_7291
RAM:725F C1                          pop     bc
RAM:7260 E1                          pop     hl
RAM:7261 79                          ld      a, c
RAM:7262 AE                          xor     (hl)
RAM:7263 77                          ld      (hl), a
RAM:7264 FD 46 50                    ld      b, (iy+50h)
RAM:7267 FD 7E 0A                    ld      a, (iy+0Ah)
RAM:726A B8                          cp      b
RAM:726B 3E 0C                       ld      a, 0Ch
RAM:726D C2 06 62                    jp      nz, dos_error
RAM:7270 E1                          pop     hl
RAM:7271 1A                          ld      a, (de)
RAM:7272 77                          ld      (hl), a
RAM:7273 FD 77 12                    ld      (iy+12h), a
RAM:7276 13                          inc     de
RAM:7277 23                          inc     hl
RAM:7278 1A                          ld      a, (de)
RAM:7279 77                          ld      (hl), a
RAM:727A FD 77 11                    ld      (iy+11h), a
RAM:727D AF                          xor     a
RAM:727E 23                          inc     hl
RAM:727F 77                          ld      (hl), a
RAM:7280 FD 7E 50                    ld      a, (iy+50h)
RAM:7283 FE 52                       cp      52h ; 'R'
RAM:7285 CA 95 73                    jp      z, loc_7395
RAM:7288 FD 7E 0C                    ld      a, (iy+0Ch)
RAM:728B B7                          or      a
RAM:728C C2 20 73                    jp      nz, loc_7320
RAM:728F
RAM:728F             loc_728F:                               ; CODE XREF: RAM:73D7↓j
RAM:728F E1                          pop     hl
RAM:7290 C9                          ret
RAM:7291             ; ---------------------------------------------------------------------------
RAM:7291
RAM:7291             loc_7291:                               ; CODE XREF: RAM:725C↑j
RAM:7291 C1                          pop     bc
RAM:7292 C1                          pop     bc
RAM:7293 4F                          ld      c, a
RAM:7294 C5                          push    bc
RAM:7295 FD 7E 0C                    ld      a, (iy+0Ch)
RAM:7298 B7                          or      a
RAM:7299 0E 0D                       ld      c, 0Dh
RAM:729B CA 14 73                    jp      z, loc_7314
RAM:729E CD 91 7C                    call    sub_7C91
RAM:72A1 C5                          push    bc
RAM:72A2 01 02 00                    ld      bc, 2
RAM:72A5 CD 34 79                    call    DELAY_BC
RAM:72A8 C1                          pop     bc
RAM:72A9 DB 12                       in      a, (12h)
RAM:72AB 0F                          rrca
RAM:72AC 0E 04                       ld      c, 4
RAM:72AE DA 14 73                    jp      c, loc_7314
RAM:72B1 C1                          pop     bc
RAM:72B2 79                          ld      a, c
RAM:72B3 FE 03                       cp      3
RAM:72B5 CA 06 62                    jp      z, dos_error
RAM:72B8 E1                          pop     hl
RAM:72B9 FD 7E 16                    ld      a, (iy+16h)
RAM:72BC FD 77 12                    ld      (iy+12h), a
RAM:72BF 77                          ld      (hl), a
RAM:72C0 23                          inc     hl
RAM:72C1 FD 7E 15                    ld      a, (iy+15h)
RAM:72C4 FD 77 11                    ld      (iy+11h), a
RAM:72C7 77                          ld      (hl), a
RAM:72C8 23                          inc     hl
RAM:72C9 36 00                       ld      (hl), 0
RAM:72CB E5                          push    hl
RAM:72CC DD E1                       pop     ix
RAM:72CE FD 7E 50                    ld      a, (iy+50h)
RAM:72D1 DD 77 08                    ld      (ix+8), a
RAM:72D4 CD 13 68                    call    WRITE_ZERO_SECTOR ; zero sector then write to disk
RAM:72D7 CD 20 68                    call    WRITE_T2_SF
RAM:72DA CD 33 6B                    call    sub_6B33
RAM:72DD 06 00                       ld      b, 0
RAM:72DF CD B7 79                    call    READ_WRITE_SEC_DATA ; read/write sector data. B=1 for READ, B=0 for WRITE
RAM:72E2 B7                          or      a
RAM:72E3 C2 06 62                    jp      nz, dos_error
RAM:72E6 FD 7E 50                    ld      a, (iy+50h)
RAM:72E9 FE 44                       cp      44h ; 'D'
RAM:72EB 28 25                       jr      z, loc_7312
RAM:72ED CD 05 68                    call    ZERO_UNENC_BUFFER ; clear unencoded buffer
RAM:72F0 21 56 FC                    ld      hl, UNENCODED_BUFFER
RAM:72F3 FD 7E 4D                    ld      a, (iy+4Dh)
RAM:72F6 DD 77 03                    ld      (ix+3), a
RAM:72F9 77                          ld      (hl), a
RAM:72FA FD 7E 4E                    ld      a, (iy+4Eh)
RAM:72FD DD 77 04                    ld      (ix+4), a
RAM:7300 23                          inc     hl
RAM:7301 77                          ld      (hl), a
RAM:7302 FD 7E 16                    ld      a, (iy+16h)
RAM:7305 DD 77 2F                    ld      (ix+2Fh), a
RAM:7308 FD 7E 15                    ld      a, (iy+15h)
RAM:730B DD 77 30                    ld      (ix+30h), a
RAM:730E DD 36 F4 02                 ld      (ix+0F4h), 2
RAM:7312
RAM:7312             loc_7312:                               ; CODE XREF: RAM:72EB↑j
RAM:7312 E1                          pop     hl
RAM:7313 C9                          ret
RAM:7314             ; ---------------------------------------------------------------------------
RAM:7314
RAM:7314             loc_7314:                               ; CODE XREF: RAM:729B↑j
RAM:7314                                                     ; RAM:72AE↑j
RAM:7314 F1                          pop     af
RAM:7315 E1                          pop     hl
RAM:7316 11 F6 FF                    ld      de, 0FFF6h
RAM:7319 19                          add     hl, de
RAM:731A 36 00                       ld      (hl), 0
RAM:731C 79                          ld      a, c
RAM:731D C3 06 62                    jp      dos_error
RAM:7320             ; ---------------------------------------------------------------------------
RAM:7320
RAM:7320             loc_7320:                               ; CODE XREF: RAM:728C↑j
RAM:7320 E5                          push    hl
RAM:7321
RAM:7321             loc_7321:                               ; CODE XREF: RAM:7339↓j
RAM:7321 06 01                       ld      b, 1
RAM:7323 CD B7 79                    call    READ_WRITE_SEC_DATA ; read/write sector data. B=1 for READ, B=0 for WRITE
RAM:7326 B7                          or      a
RAM:7327 C2 06 62                    jp      nz, dos_error
RAM:732A 21 54 FD                    ld      hl, 0FD54h
RAM:732D 7E                          ld      a, (hl)
RAM:732E B7                          or      a
RAM:732F 28 0A                       jr      z, loc_733B
RAM:7331 FD 77 12                    ld      (iy+12h), a
RAM:7334 23                          inc     hl
RAM:7335 7E                          ld      a, (hl)
RAM:7336 FD 77 11                    ld      (iy+11h), a
RAM:7339 18 E6                       jr      loc_7321
RAM:733B             ; ---------------------------------------------------------------------------
RAM:733B
RAM:733B             loc_733B:                               ; CODE XREF: RAM:732F↑j
RAM:733B 06 FE                       ld      b, 0FEh
RAM:733D 21 56 FC                    ld      hl, UNENCODED_BUFFER
RAM:7340
RAM:7340             loc_7340:                               ; CODE XREF: RAM:7345↓j
RAM:7340 7E                          ld      a, (hl)
RAM:7341 23                          inc     hl
RAM:7342 B7                          or      a
RAM:7343 28 1D                       jr      z, loc_7362
RAM:7345 10 F9                       djnz    loc_7340
RAM:7347 CD E6 67                    call    READ_T2_SF
RAM:734A CD 61 7B                    call    sub_7B61
RAM:734D B7                          or      a
RAM:734E C2 06 62                    jp      nz, dos_error
RAM:7351 FD 7E 16                    ld      a, (iy+16h)
RAM:7354 FD 77 12                    ld      (iy+12h), a
RAM:7357 FD 7E 15                    ld      a, (iy+15h)
RAM:735A FD 77 11                    ld      (iy+11h), a
RAM:735D CD 13 68                    call    WRITE_ZERO_SECTOR ; zero sector then write to disk
RAM:7360 06 FE                       ld      b, 0FEh
RAM:7362
RAM:7362             loc_7362:                               ; CODE XREF: RAM:7343↑j
RAM:7362 3E FE                       ld      a, 0FEh
RAM:7364 90                          sub     b
RAM:7365 E1                          pop     hl
RAM:7366 77                          ld      (hl), a
RAM:7367 2B                          dec     hl
RAM:7368 FD 7E 11                    ld      a, (iy+11h)
RAM:736B 77                          ld      (hl), a
RAM:736C 2B                          dec     hl
RAM:736D FD 7E 12                    ld      a, (iy+12h)
RAM:7370 77                          ld      (hl), a
RAM:7371 E1                          pop     hl
RAM:7372 C9                          ret
RAM:7373             ; ---------------------------------------------------------------------------
RAM:7373
RAM:7373             loc_7373:                               ; CODE XREF: RAM:71FE↑j
RAM:7373 CD BA 6E                    call    sub_6EBA
RAM:7376 E5                          push    hl
RAM:7377 CD C0 6E                    call    sub_6EC0
RAM:737A 7C                          ld      a, h
RAM:737B B7                          or      a
RAM:737C 3E 14                       ld      a, 14h
RAM:737E FA 06 62                    jp      m, dos_error
RAM:7381 CD 9E 75                    call    sub_759E
RAM:7384 FD 75 4D                    ld      (iy+4Dh), l
RAM:7387 FD 74 4E                    ld      (iy+4Eh), h
RAM:738A FD 36 50 52                 ld      (iy+50h), 52h ; 'R'
RAM:738E FD 36 0C 01                 ld      (iy+0Ch), 1
RAM:7392 C3 1B 72                    jp      loc_721B
RAM:7395             ; ---------------------------------------------------------------------------
RAM:7395
RAM:7395             loc_7395:                               ; CODE XREF: RAM:7285↑j
RAM:7395 E5                          push    hl
RAM:7396 DD E1                       pop     ix
RAM:7398 DD 36 08 52                 ld      (ix+8), 52h ; 'R'
RAM:739C DD 7E FE                    ld      a, (ix+0FEh)
RAM:739F FD 77 12                    ld      (iy+12h), a
RAM:73A2 DD 77 2F                    ld      (ix+2Fh), a
RAM:73A5 DD 7E FF                    ld      a, (ix+0FFh)
RAM:73A8 FD 77 11                    ld      (iy+11h), a
RAM:73AB DD 77 30                    ld      (ix+30h), a
RAM:73AE 06 01                       ld      b, 1
RAM:73B0 CD B7 79                    call    READ_WRITE_SEC_DATA ; read/write sector data. B=1 for READ, B=0 for WRITE
RAM:73B3 B7                          or      a
RAM:73B4 C2 06 62                    jp      nz, dos_error
RAM:73B7 21 56 FC                    ld      hl, UNENCODED_BUFFER
RAM:73BA 7E                          ld      a, (hl)
RAM:73BB DD 77 03                    ld      (ix+3), a
RAM:73BE FD BE 4D                    cp      (iy+4Dh)
RAM:73C1 3E 15                       ld      a, 15h
RAM:73C3 C2 06 62                    jp      nz, dos_error
RAM:73C6 23                          inc     hl
RAM:73C7 7E                          ld      a, (hl)
RAM:73C8 DD 77 04                    ld      (ix+4), a
RAM:73CB FD BE 4E                    cp      (iy+4Eh)
RAM:73CE 3E 15                       ld      a, 15h
RAM:73D0 C2 06 62                    jp      nz, dos_error
RAM:73D3 DD 36 00 02                 ld      (ix+0), 2
RAM:73D7 C3 8F 72                    jp      loc_728F
RAM:73DA
RAM:73DA             ; =============== S U B R O U T I N E =======================================
RAM:73DA
RAM:73DA
RAM:73DA             sub_73DA:                               ; CODE XREF: sub_73E0+7D↓p
RAM:73DA 7C                          ld      a, h
RAM:73DB 92                          sub     d
RAM:73DC C0                          ret     nz
RAM:73DD 7D                          ld      a, l
RAM:73DE 93                          sub     e
RAM:73DF C9                          ret
RAM:73DF             ; End of function sub_73DA
RAM:73DF
RAM:73E0
RAM:73E0             ; =============== S U B R O U T I N E =======================================
RAM:73E0
RAM:73E0
RAM:73E0             sub_73E0:                               ; CODE XREF: RAM:75B3↓p
RAM:73E0                                                     ; RAM:75BC↓p
RAM:73E0
RAM:73E0             ; FUNCTION CHUNK AT RAM:7598 SIZE 00000006 BYTES
RAM:73E0
RAM:73E0 CD B4 6E                    call    sub_6EB4
RAM:73E3 CD 09 78                    call    sub_7809
RAM:73E6 E5                          push    hl
RAM:73E7 B7                          or      a
RAM:73E8 C2 06 62                    jp      nz, dos_error
RAM:73EB CD 40 71                    call    sub_7140
RAM:73EE D5                          push    de
RAM:73EF DD E1                       pop     ix
RAM:73F1 FE 08                       cp      8
RAM:73F3 3E 05                       ld      a, 5
RAM:73F5 C2 06 62                    jp      nz, dos_error
RAM:73F8 DD 7E 14                    ld      a, (ix+14h)
RAM:73FB FE 52                       cp      52h ; 'R'
RAM:73FD 3E 0C                       ld      a, 0Ch
RAM:73FF C2 06 62                    jp      nz, dos_error
RAM:7402 CD F9 70                    call    sub_70F9
RAM:7405 FD 7E 50                    ld      a, (iy+50h)
RAM:7408 FE 01                       cp      1
RAM:740A 20 06                       jr      nz, loc_7412
RAM:740C DD 36 01 01                 ld      (ix+1), 1
RAM:7410 18 04                       jr      loc_7416
RAM:7412             ; ---------------------------------------------------------------------------
RAM:7412
RAM:7412             loc_7412:                               ; CODE XREF: sub_73E0+2A↑j
RAM:7412 DD 36 01 00                 ld      (ix+1), 0
RAM:7416
RAM:7416             loc_7416:                               ; CODE XREF: sub_73E0+30↑j
RAM:7416 EB                          ex      de, hl
RAM:7417 E3                          ex      (sp), hl
RAM:7418 CF                          rst     8
RAM:7419 2C                          inc     l
RAM:741A CD BA 6E                    call    sub_6EBA
RAM:741D E5                          push    hl
RAM:741E CD C0 6E                    call    sub_6EC0
RAM:7421 7C                          ld      a, h
RAM:7422 B7                          or      a
RAM:7423 3E 14                       ld      a, 14h
RAM:7425 FA 06 62                    jp      m, dos_error
RAM:7428 F1                          pop     af
RAM:7429 DD E1                       pop     ix
RAM:742B DD E5                       push    ix
RAM:742D F5                          push    af
RAM:742E CD 9E 75                    call    sub_759E
RAM:7431 DD 75 0D                    ld      (ix+0Dh), l
RAM:7434 DD 74 0E                    ld      (ix+0Eh), h
RAM:7437 E1                          pop     hl
RAM:7438 CF                          rst     8
RAM:7439 2C                          inc     l
RAM:743A CD BA 6E                    call    sub_6EBA
RAM:743D E5                          push    hl
RAM:743E CD C0 6E                    call    sub_6EC0
RAM:7441 7C                          ld      a, h
RAM:7442 B7                          or      a
RAM:7443 3E 14                       ld      a, 14h
RAM:7445 FA 06 62                    jp      m, dos_error
RAM:7448 F1                          pop     af
RAM:7449 D1                          pop     de
RAM:744A D5                          push    de
RAM:744B F5                          push    af
RAM:744C CD 9E 75                    call    sub_759E
RAM:744F DD 21 0F 00                 ld      ix, 0Fh
RAM:7453 DD 19                       add     ix, de
RAM:7455 E5                          push    hl
RAM:7456 D1                          pop     de
RAM:7457 DD 6E 00                    ld      l, (ix+0)
RAM:745A DD 66 01                    ld      h, (ix+1)
RAM:745D CD DA 73                    call    sub_73DA
RAM:7460 3E 13                       ld      a, 13h
RAM:7462 DA 06 62                    jp      c, dos_error
RAM:7465 DD 72 03                    ld      (ix+3), d
RAM:7468 DD 73 02                    ld      (ix+2), e
RAM:746B DD 36 F1 02                 ld      (ix+0F1h), 2
RAM:746F DD 7E 2C                    ld      a, (ix+2Ch)
RAM:7472 FD 77 12                    ld      (iy+12h), a
RAM:7475 DD 77 FB                    ld      (ix+0FBh), a
RAM:7478 DD 7E 2D                    ld      a, (ix+2Dh)
RAM:747B FD 77 11                    ld      (iy+11h), a
RAM:747E DD 77 FC                    ld      (ix+0FCh), a
RAM:7481 DD 36 FD 02                 ld      (ix+0FDh), 2
RAM:7485 06 01                       ld      b, 1
RAM:7487 CD B7 79                    call    READ_WRITE_SEC_DATA ; read/write sector data. B=1 for READ, B=0 for WRITE
RAM:748A B7                          or      a
RAM:748B C2 06 62                    jp      nz, dos_error
RAM:748E DD 77 04                    ld      (ix+4), a
RAM:7491
RAM:7491             loc_7491:                               ; CODE XREF: sub_73E0+12E↓j
RAM:7491 DD 7E FD                    ld      a, (ix+0FDh)
RAM:7494 3C                          inc     a
RAM:7495 FE FE                       cp      0FEh
RAM:7497 C2 98 75                    jp      nz, loc_7598
RAM:749A 11 FD 00                    ld      de, 0FDh
RAM:749D CD 93 75                    call    sub_7593
RAM:74A0 7E                          ld      a, (hl)
RAM:74A1 FD 77 49                    ld      (iy+49h), a
RAM:74A4 CD C6 75                    call    sub_75C6
RAM:74A7 FD 77 4A                    ld      (iy+4Ah), a
RAM:74AA DD 34 FD                    inc     (ix+0FDh)
RAM:74AD
RAM:74AD             loc_74AD:                               ; CODE XREF: sub_73E0+1BB↓j
RAM:74AD DD 7E FD                    ld      a, (ix+0FDh)
RAM:74B0 FE FE                       cp      0FEh
RAM:74B2 CC C6 75                    call    z, sub_75C6
RAM:74B5 FD 7E 49                    ld      a, (iy+49h)
RAM:74B8 B7                          or      a
RAM:74B9 20 38                       jr      nz, loc_74F3
RAM:74BB FD 7E 4A                    ld      a, (iy+4Ah)
RAM:74BE B7                          or      a
RAM:74BF 20 32                       jr      nz, loc_74F3
RAM:74C1 DD 7E F2                    ld      a, (ix+0F2h)
RAM:74C4 FE 01                       cp      1
RAM:74C6 3E 12                       ld      a, 12h
RAM:74C8 C2 06 62                    jp      nz, dos_error
RAM:74CB DD 77 04                    ld      (ix+4), a
RAM:74CE DD 7E FD                    ld      a, (ix+0FDh)
RAM:74D1 FE 02                       cp      2
RAM:74D3 38 48                       jr      c, loc_751D
RAM:74D5 DD 7E FD                    ld      a, (ix+0FDh)
RAM:74D8 3D                          dec     a
RAM:74D9 3D                          dec     a
RAM:74DA 5F                          ld      e, a
RAM:74DB CD 91 75                    call    sub_7591
RAM:74DE DD 7E FE                    ld      a, (ix+0FEh)
RAM:74E1 77                          ld      (hl), a
RAM:74E2 DD 7E FF                    ld      a, (ix+0FFh)
RAM:74E5 23                          inc     hl
RAM:74E6 77                          ld      (hl), a
RAM:74E7 06 00                       ld      b, 0
RAM:74E9 CD B7 79                    call    READ_WRITE_SEC_DATA ; read/write sector data. B=1 for READ, B=0 for WRITE
RAM:74EC 06 01                       ld      b, 1
RAM:74EE CD B7 79                    call    READ_WRITE_SEC_DATA ; read/write sector data. B=1 for READ, B=0 for WRITE
RAM:74F1
RAM:74F1             loc_74F1:                               ; CODE XREF: sub_73E0+186↓j
RAM:74F1                                                     ; sub_73E0+196↓j
RAM:74F1 18 1D                       jr      loc_7510
RAM:74F3             ; ---------------------------------------------------------------------------
RAM:74F3
RAM:74F3             loc_74F3:                               ; CODE XREF: sub_73E0+D9↑j
RAM:74F3                                                     ; sub_73E0+DF↑j
RAM:74F3 DD 4E FE                    ld      c, (ix+0FEh)
RAM:74F6 DD 46 FF                    ld      b, (ix+0FFh)
RAM:74F9 FD 6E 49                    ld      l, (iy+49h)
RAM:74FC FD 66 4A                    ld      h, (iy+4Ah)
RAM:74FF 37                          scf
RAM:7500 3F                          ccf
RAM:7501 ED 42                       sbc     hl, bc
RAM:7503 28 0B                       jr      z, loc_7510
RAM:7505 DD 6E 00                    ld      l, (ix+0)
RAM:7508 DD 66 01                    ld      h, (ix+1)
RAM:750B CD 0D 76                    call    sub_760D
RAM:750E 18 81                       jr      loc_7491
RAM:7510             ; ---------------------------------------------------------------------------
RAM:7510
RAM:7510             loc_7510:                               ; CODE XREF: sub_73E0:loc_74F1↑j
RAM:7510                                                     ; sub_73E0+123↑j
RAM:7510 DD 6E 02                    ld      l, (ix+2)
RAM:7513 DD 66 03                    ld      h, (ix+3)
RAM:7516 2B                          dec     hl
RAM:7517 CD 0D 76                    call    sub_760D
RAM:751A E1                          pop     hl
RAM:751B D1                          pop     de
RAM:751C C9                          ret
RAM:751D             ; ---------------------------------------------------------------------------
RAM:751D
RAM:751D             loc_751D:                               ; CODE XREF: sub_73E0+F3↑j
RAM:751D FD 7E 4B                    ld      a, (iy+4Bh)
RAM:7520 FD 77 12                    ld      (iy+12h), a
RAM:7523 FD 7E 4C                    ld      a, (iy+4Ch)
RAM:7526 FD 77 11                    ld      (iy+11h), a
RAM:7529 CD 91 7C                    call    sub_7C91
RAM:752C C5                          push    bc
RAM:752D 01 02 00                    ld      bc, 2
RAM:7530 CD 34 79                    call    DELAY_BC
RAM:7533 C1                          pop     bc
RAM:7534 DB 12                       in      a, (12h)
RAM:7536 0F                          rrca
RAM:7537 3E 04                       ld      a, 4
RAM:7539 DA 06 62                    jp      c, dos_error
RAM:753C 06 01                       ld      b, 1
RAM:753E CD B7 79                    call    READ_WRITE_SEC_DATA ; read/write sector data. B=1 for READ, B=0 for WRITE
RAM:7541 B7                          or      a
RAM:7542 C2 06 62                    jp      nz, dos_error
RAM:7545 DD 46 FE                    ld      b, (ix+0FEh)
RAM:7548 11 FC 00                    ld      de, 0FCh
RAM:754B CD 93 75                    call    sub_7593
RAM:754E DD 7E FD                    ld      a, (ix+0FDh)
RAM:7551 FE 01                       cp      1
RAM:7553 28 04                       jr      z, loc_7559
RAM:7555 70                          ld      (hl), b
RAM:7556 DD 46 FF                    ld      b, (ix+0FFh)
RAM:7559
RAM:7559             loc_7559:                               ; CODE XREF: sub_73E0+173↑j
RAM:7559 23                          inc     hl
RAM:755A 70                          ld      (hl), b
RAM:755B 06 00                       ld      b, 0
RAM:755D CD B7 79                    call    READ_WRITE_SEC_DATA ; read/write sector data. B=1 for READ, B=0 for WRITE
RAM:7560 CD C6 75                    call    sub_75C6
RAM:7563 79                          ld      a, c
RAM:7564 FE 00                       cp      0
RAM:7566 CA F1 74                    jp      z, loc_74F1
RAM:7569 11 00 00                    ld      de, 0
RAM:756C CD 93 75                    call    sub_7593
RAM:756F DD 46 FF                    ld      b, (ix+0FFh)
RAM:7572 70                          ld      (hl), b
RAM:7573 DD 34 FD                    inc     (ix+0FDh)
RAM:7576 C3 F1 74                    jp      loc_74F1
RAM:7576             ; End of function sub_73E0
RAM:7576
RAM:7579
RAM:7579             ; =============== S U B R O U T I N E =======================================
RAM:7579
RAM:7579
RAM:7579             sub_7579:                               ; CODE XREF: sub_73E0:loc_7598↓p
RAM:7579 3D                          dec     a
RAM:757A 5F                          ld      e, a
RAM:757B CD 91 75                    call    sub_7591
RAM:757E 7E                          ld      a, (hl)
RAM:757F FD 77 49                    ld      (iy+49h), a
RAM:7582 23                          inc     hl
RAM:7583 7E                          ld      a, (hl)
RAM:7584 FD 77 4A                    ld      (iy+4Ah), a
RAM:7587 DD 34 FD                    inc     (ix+0FDh)
RAM:758A DD 34 FD                    inc     (ix+0FDh)
RAM:758D C9                          ret
RAM:758D             ; End of function sub_7579
RAM:758D
RAM:758E             ; ---------------------------------------------------------------------------
RAM:758E DD 5E FD                    ld      e, (ix+0FDh)
RAM:7591
RAM:7591             ; =============== S U B R O U T I N E =======================================
RAM:7591
RAM:7591
RAM:7591             sub_7591:                               ; CODE XREF: sub_73E0+FB↑p
RAM:7591                                                     ; sub_7579+2↑p ...
RAM:7591 16 00                       ld      d, 0
RAM:7591             ; End of function sub_7591
RAM:7591
RAM:7593
RAM:7593             ; =============== S U B R O U T I N E =======================================
RAM:7593
RAM:7593
RAM:7593             sub_7593:                               ; CODE XREF: sub_73E0+BD↑p
RAM:7593                                                     ; sub_73E0+16B↑p ...
RAM:7593 21 56 FC                    ld      hl, UNENCODED_BUFFER
RAM:7596 19                          add     hl, de
RAM:7597 C9                          ret
RAM:7597             ; End of function sub_7593
RAM:7597
RAM:7598             ; ---------------------------------------------------------------------------
RAM:7598             ; START OF FUNCTION CHUNK FOR sub_73E0
RAM:7598
RAM:7598             loc_7598:                               ; CODE XREF: sub_73E0+B7↑j
RAM:7598 CD 79 75                    call    sub_7579
RAM:759B C3 AD 74                    jp      loc_74AD
RAM:759B             ; END OF FUNCTION CHUNK FOR sub_73E0
RAM:759E
RAM:759E             ; =============== S U B R O U T I N E =======================================
RAM:759E
RAM:759E
RAM:759E             sub_759E:                               ; CODE XREF: RAM:7381↑p
RAM:759E                                                     ; sub_73E0+4E↑p ...
RAM:759E 7C                          ld      a, h
RAM:759F FE 00                       cp      0
RAM:75A1 20 0A                       jr      nz, locret_75AD
RAM:75A3 7D                          ld      a, l
RAM:75A4 FE 00                       cp      0
RAM:75A6 20 05                       jr      nz, locret_75AD
RAM:75A8 3E 14                       ld      a, 14h
RAM:75AA C3 06 62                    jp      dos_error
RAM:75AD             ; ---------------------------------------------------------------------------
RAM:75AD
RAM:75AD             locret_75AD:                            ; CODE XREF: sub_759E+3↑j
RAM:75AD                                                     ; sub_759E+8↑j
RAM:75AD C9                          ret
RAM:75AD             ; End of function sub_759E
RAM:75AD
RAM:75AE             ; ---------------------------------------------------------------------------
RAM:75AE
RAM:75AE             WRITE:                                  ; DATA XREF: RAM:62DB↑o
RAM:75AE                                                     ; RAM:63D6↑o
RAM:75AE 3E 01                       ld      a, 1
RAM:75B0 FD 77 50                    ld      (iy+50h), a
RAM:75B3 CD E0 73                    call    sub_73E0
RAM:75B6 C9                          ret
RAM:75B7             ; ---------------------------------------------------------------------------
RAM:75B7
RAM:75B7             ACCEPT:                                 ; DATA XREF: RAM:63D8↑o
RAM:75B7 3E 00                       ld      a, 0
RAM:75B9 FD 77 50                    ld      (iy+50h), a
RAM:75BC CD E0 73                    call    sub_73E0
RAM:75BF C9                          ret
RAM:75C0             ; ---------------------------------------------------------------------------
RAM:75C0 7E                          ld      a, (hl)
RAM:75C1 B7                          or      a
RAM:75C2 28 43                       jr      z, loc_7607
RAM:75C4 18 1F                       jr      loc_75E5
RAM:75C6
RAM:75C6             ; =============== S U B R O U T I N E =======================================
RAM:75C6
RAM:75C6
RAM:75C6             sub_75C6:                               ; CODE XREF: sub_73E0+C4↑p
RAM:75C6                                                     ; sub_73E0+D2↑p ...
RAM:75C6 E5                          push    hl
RAM:75C7 FD 46 12                    ld      b, (iy+12h)
RAM:75CA FD 70 4B                    ld      (iy+4Bh), b
RAM:75CD FD 46 11                    ld      b, (iy+11h)
RAM:75D0 FD 70 4C                    ld      (iy+4Ch), b
RAM:75D3 06 01                       ld      b, 1
RAM:75D5 CD B7 79                    call    READ_WRITE_SEC_DATA ; read/write sector data. B=1 for READ, B=0 for WRITE
RAM:75D8 11 FE 00                    ld      de, 0FEh
RAM:75DB CD 93 75                    call    sub_7593
RAM:75DE 7E                          ld      a, (hl)
RAM:75DF B7                          or      a
RAM:75E0 23                          inc     hl
RAM:75E1 4F                          ld      c, a
RAM:75E2 28 23                       jr      z, loc_7607
RAM:75E4 7E                          ld      a, (hl)
RAM:75E5
RAM:75E5             loc_75E5:                               ; CODE XREF: RAM:75C4↑j
RAM:75E5 FD 71 12                    ld      (iy+12h), c
RAM:75E8 FD 77 11                    ld      (iy+11h), a
RAM:75EB DD 71 FB                    ld      (ix+0FBh), c
RAM:75EE DD 77 FC                    ld      (ix+0FCh), a
RAM:75F1 06 01                       ld      b, 1
RAM:75F3 CD B7 79                    call    READ_WRITE_SEC_DATA ; read/write sector data. B=1 for READ, B=0 for WRITE
RAM:75F6 B7                          or      a
RAM:75F7 C2 06 62                    jp      nz, dos_error
RAM:75FA
RAM:75FA             loc_75FA:                               ; CODE XREF: sub_75C6+44↓j
RAM:75FA AF                          xor     a
RAM:75FB DD 4E FD                    ld      c, (ix+0FDh)
RAM:75FE DD 77 FD                    ld      (ix+0FDh), a
RAM:7601 21 56 FC                    ld      hl, UNENCODED_BUFFER
RAM:7604 7E                          ld      a, (hl)
RAM:7605 E1                          pop     hl
RAM:7606 C9                          ret
RAM:7607             ; ---------------------------------------------------------------------------
RAM:7607
RAM:7607             loc_7607:                               ; CODE XREF: RAM:75C2↑j
RAM:7607                                                     ; sub_75C6+1C↑j
RAM:7607 CD 39 71                    call    sub_7139
RAM:760A C3 FA 75                    jp      loc_75FA
RAM:760A             ; End of function sub_75C6
RAM:760A
RAM:760D
RAM:760D             ; =============== S U B R O U T I N E =======================================
RAM:760D
RAM:760D
RAM:760D             sub_760D:                               ; CODE XREF: sub_73E0+12B↑p
RAM:760D                                                     ; sub_73E0+137↑p
RAM:760D 16 00                       ld      d, 0
RAM:760F DD 5E FD                    ld      e, (ix+0FDh)
RAM:7612 19                          add     hl, de
RAM:7613
RAM:7613             loc_7613:                               ; CODE XREF: sub_760D+19↓j
RAM:7613 01 FE 00                    ld      bc, 0FEh
RAM:7616 37                          scf
RAM:7617 3F                          ccf
RAM:7618 E5                          push    hl
RAM:7619 ED 42                       sbc     hl, bc
RAM:761B 30 05                       jr      nc, loc_7622
RAM:761D E1                          pop     hl
RAM:761E DD 75 FD                    ld      (ix+0FDh), l
RAM:7621 C9                          ret
RAM:7622             ; ---------------------------------------------------------------------------
RAM:7622
RAM:7622             loc_7622:                               ; CODE XREF: sub_760D+E↑j
RAM:7622 CD C6 75                    call    sub_75C6
RAM:7625 F1                          pop     af
RAM:7626 18 EB                       jr      loc_7613
RAM:7626             ; End of function sub_760D
RAM:7626
RAM:7628             ; ---------------------------------------------------------------------------
RAM:7628
RAM:7628             GET:                                    ; DATA XREF: RAM:62FF↑o
RAM:7628                                                     ; RAM:63DC↑o
RAM:7628 CD B4 6E                    call    sub_6EB4
RAM:762B CD 09 78                    call    sub_7809
RAM:762E B7                          or      a
RAM:762F C2 06 62                    jp      nz, dos_error
RAM:7632 CF                          rst     8
RAM:7633 2C                          inc     l
RAM:7634 E5                          push    hl
RAM:7635 E5                          push    hl
RAM:7636 CD C6 6E                    call    sub_6EC6
RAM:7639 E1                          pop     hl
RAM:763A CD 40 71                    call    sub_7140
RAM:763D FE 08                       cp      8
RAM:763F 3E 05                       ld      a, 5
RAM:7641 C2 06 62                    jp      nz, dos_error
RAM:7644 CD EA 77                    call    CHECK_R_FILETYPE ; look for 'R' filetype, else error out
RAM:7647 13                          inc     de
RAM:7648 1A                          ld      a, (de)
RAM:7649 B7                          or      a
RAM:764A 3E 0F                       ld      a, 0Fh
RAM:764C C2 06 62                    jp      nz, dos_error
RAM:764F 1B                          dec     de
RAM:7650 1A                          ld      a, (de)
RAM:7651 FE 02                       cp      2
RAM:7653 28 1D                       jr      z, loc_7672
RAM:7655 CD F9 70                    call    sub_70F9
RAM:7658 3E 02                       ld      a, 2
RAM:765A 12                          ld      (de), a
RAM:765B EB                          ex      de, hl
RAM:765C 11 0A 00                    ld      de, 0Ah
RAM:765F 19                          add     hl, de
RAM:7660 7E                          ld      a, (hl)
RAM:7661 23                          inc     hl
RAM:7662 FD 77 12                    ld      (iy+12h), a
RAM:7665 7E                          ld      a, (hl)
RAM:7666 FD 77 11                    ld      (iy+11h), a
RAM:7669 06 01                       ld      b, 1
RAM:766B CD B7 79                    call    READ_WRITE_SEC_DATA ; read/write sector data. B=1 for READ, B=0 for WRITE
RAM:766E B7                          or      a
RAM:766F C2 06 62                    jp      nz, dos_error
RAM:7672
RAM:7672             loc_7672:                               ; CODE XREF: RAM:7653↑j
RAM:7672 DD 6E 0F                    ld      l, (ix+0Fh)
RAM:7675 DD 66 10                    ld      h, (ix+10h)
RAM:7678 DD 5E 11                    ld      e, (ix+11h)
RAM:767B DD 56 12                    ld      d, (ix+12h)
RAM:767E 37                          scf
RAM:767F ED 52                       sbc     hl, de
RAM:7681 23                          inc     hl
RAM:7682 7C                          ld      a, h
RAM:7683 FE 00                       cp      0
RAM:7685 20 0D                       jr      nz, loc_7694
RAM:7687 7D                          ld      a, l
RAM:7688 FE FD                       cp      0FDh
RAM:768A 30 08                       jr      nc, loc_7694
RAM:768C 45                          ld      b, l
RAM:768D 04                          inc     b
RAM:768E
RAM:768E             loc_768E:                               ; CODE XREF: RAM:7696↓j
RAM:768E 21 89 82                    ld      hl, 8289h
RAM:7691 C3 3C 6F                    jp      loc_6F3C
RAM:7694             ; ---------------------------------------------------------------------------
RAM:7694
RAM:7694             loc_7694:                               ; CODE XREF: RAM:7685↑j
RAM:7694                                                     ; RAM:768A↑j
RAM:7694 06 FD                       ld      b, 0FDh
RAM:7696 18 F6                       jr      loc_768E
RAM:7698             ; ---------------------------------------------------------------------------
RAM:7698
RAM:7698             PUT:                                    ; DATA XREF: RAM:6308↑o
RAM:7698                                                     ; RAM:63DA↑o
RAM:7698 CD B4 6E                    call    sub_6EB4
RAM:769B CD 09 78                    call    sub_7809
RAM:769E B7                          or      a
RAM:769F C2 06 62                    jp      nz, dos_error
RAM:76A2 E5                          push    hl
RAM:76A3 CD 40 71                    call    sub_7140
RAM:76A6 FE 08                       cp      8
RAM:76A8 3E 05                       ld      a, 5
RAM:76AA C2 06 62                    jp      nz, dos_error
RAM:76AD CD EA 77                    call    CHECK_R_FILETYPE ; look for 'R' filetype, else error out
RAM:76B0 13                          inc     de
RAM:76B1 1A                          ld      a, (de)
RAM:76B2 FE 01                       cp      1
RAM:76B4 3E 10                       ld      a, 10h
RAM:76B6 C2 06 62                    jp      nz, dos_error
RAM:76B9 1B                          dec     de
RAM:76BA E1                          pop     hl
RAM:76BB CF                          rst     8
RAM:76BC 2C                          inc     l
RAM:76BD
RAM:76BD             loc_76BD:                               ; CODE XREF: RAM:76F2↓j
RAM:76BD 2B                          dec     hl
RAM:76BE CD 6F 60                    call    sub_606F
RAM:76C1 CC F4 76                    call    z, sub_76F4
RAM:76C4
RAM:76C4             loc_76C4:                               ; CODE XREF: RAM:7700↓j
RAM:76C4 C8                          ret     z
RAM:76C5 E5                          push    hl
RAM:76C6 FE 2C                       cp      2Ch ; ','
RAM:76C8 CA FB 76                    jp      z, loc_76FB
RAM:76CB FE 3B                       cp      3Bh ; ';'
RAM:76CD 28 2F                       jr      z, loc_76FE
RAM:76CF C1                          pop     bc
RAM:76D0 CD BA 6E                    call    sub_6EBA
RAM:76D3 E5                          push    hl
RAM:76D4 DD 21 0F 32                 ld      ix, 320Fh
RAM:76D8 DF                          rst     18h
RAM:76D9 28 13                       jr      z, loc_76EE
RAM:76DB DD 21 B5 44                 ld      ix, 44B5h
RAM:76DF DF                          rst     18h
RAM:76E0 DD 21 7D 62                 ld      ix, 627Dh
RAM:76E4 DF                          rst     18h
RAM:76E5 CD 02 77                    call    sub_7702
RAM:76E8 3E 20                       ld      a, 20h ; ' '
RAM:76EA CD 16 77                    call    sub_7716
RAM:76ED B7                          or      a
RAM:76EE
RAM:76EE             loc_76EE:                               ; CODE XREF: RAM:76D9↑j
RAM:76EE CC 02 77                    call    z, sub_7702
RAM:76F1 E1                          pop     hl
RAM:76F2 18 C9                       jr      loc_76BD
RAM:76F4
RAM:76F4             ; =============== S U B R O U T I N E =======================================
RAM:76F4
RAM:76F4
RAM:76F4             sub_76F4:                               ; CODE XREF: RAM:76C1↑p
RAM:76F4 3E 0D                       ld      a, 0Dh
RAM:76F6 CD 16 77                    call    sub_7716
RAM:76F9 AF                          xor     a
RAM:76FA C9                          ret
RAM:76FA             ; End of function sub_76F4
RAM:76FA
RAM:76FB             ; ---------------------------------------------------------------------------
RAM:76FB
RAM:76FB             loc_76FB:                               ; CODE XREF: RAM:76C8↑j
RAM:76FB CD 16 77                    call    sub_7716
RAM:76FE
RAM:76FE             loc_76FE:                               ; CODE XREF: RAM:76CD↑j
RAM:76FE E1                          pop     hl
RAM:76FF D7                          rst     10h
RAM:7700 18 C2                       jr      loc_76C4
RAM:7702
RAM:7702             ; =============== S U B R O U T I N E =======================================
RAM:7702
RAM:7702
RAM:7702             sub_7702:                               ; CODE XREF: RAM:76E5↑p
RAM:7702                                                     ; RAM:loc_76EE↑p
RAM:7702 DD 21 4B 64                 ld      ix, 644Bh
RAM:7706 DF                          rst     18h
RAM:7707 DD 21 A8 3C                 ld      ix, 3CA8h
RAM:770B DF                          rst     18h
RAM:770C 14                          inc     d
RAM:770D
RAM:770D             loc_770D:                               ; CODE XREF: sub_7702+12↓j
RAM:770D 15                          dec     d
RAM:770E C8                          ret     z
RAM:770F 0A                          ld      a, (bc)
RAM:7710 CD 16 77                    call    sub_7716
RAM:7713 03                          inc     bc
RAM:7714 18 F7                       jr      loc_770D
RAM:7714             ; End of function sub_7702
RAM:7714
RAM:7716
RAM:7716             ; =============== S U B R O U T I N E =======================================
RAM:7716
RAM:7716
RAM:7716             sub_7716:                               ; CODE XREF: RAM:76EA↑p
RAM:7716                                                     ; sub_76F4+2↑p ...
RAM:7716 E5                          push    hl
RAM:7717 D5                          push    de
RAM:7718 C5                          push    bc
RAM:7719 F5                          push    af
RAM:771A CD 40 71                    call    sub_7140
RAM:771D EB                          ex      de, hl
RAM:771E 23                          inc     hl
RAM:771F 7E                          ld      a, (hl)
RAM:7720 B7                          or      a
RAM:7721 3E 10                       ld      a, 10h
RAM:7723 CA 06 62                    jp      z, dos_error
RAM:7726 2B                          dec     hl
RAM:7727 7E                          ld      a, (hl)
RAM:7728 FE 02                       cp      2
RAM:772A 28 35                       jr      z, loc_7761
RAM:772C CD F9 70                    call    sub_70F9
RAM:772F 11 0A 00                    ld      de, 0Ah
RAM:7732 19                          add     hl, de
RAM:7733 7E                          ld      a, (hl)
RAM:7734 23                          inc     hl
RAM:7735 FD 77 12                    ld      (iy+12h), a
RAM:7738 7E                          ld      a, (hl)
RAM:7739 23                          inc     hl
RAM:773A FD 77 11                    ld      (iy+11h), a
RAM:773D CD 91 7C                    call    sub_7C91
RAM:7740 C5                          push    bc
RAM:7741 01 02 00                    ld      bc, 2
RAM:7744 CD 34 79                    call    DELAY_BC
RAM:7747 C1                          pop     bc
RAM:7748 DB 12                       in      a, (12h)
RAM:774A 0F                          rrca
RAM:774B 3E 04                       ld      a, 4
RAM:774D DA 06 62                    jp      c, dos_error
RAM:7750 E5                          push    hl
RAM:7751 06 01                       ld      b, 1
RAM:7753 CD B7 79                    call    READ_WRITE_SEC_DATA ; read/write sector data. B=1 for READ, B=0 for WRITE
RAM:7756 B7                          or      a
RAM:7757 C2 06 62                    jp      nz, dos_error
RAM:775A E1                          pop     hl
RAM:775B 11 F4 FF                    ld      de, 0FFF4h
RAM:775E 19                          add     hl, de
RAM:775F 36 02                       ld      (hl), 2
RAM:7761
RAM:7761             loc_7761:                               ; CODE XREF: sub_7716+14↑j
RAM:7761 E5                          push    hl
RAM:7762 DD E1                       pop     ix
RAM:7764 DD 7E 0F                    ld      a, (ix+0Fh)
RAM:7767 DD 96 11                    sub     (ix+11h)
RAM:776A FE 00                       cp      0
RAM:776C 20 18                       jr      nz, loc_7786
RAM:776E DD 7E 10                    ld      a, (ix+10h)
RAM:7771 DD 9E 12                    sbc     a, (ix+12h)
RAM:7774 FE 00                       cp      0
RAM:7776 20 0E                       jr      nz, loc_7786
RAM:7778 DD 5E 0C                    ld      e, (ix+0Ch)
RAM:777B CD 91 75                    call    sub_7591
RAM:777E AF                          xor     a
RAM:777F 77                          ld      (hl), a
RAM:7780 FD 77 50                    ld      (iy+50h), a
RAM:7783 C3 E5 77                    jp      loc_77E5
RAM:7786             ; ---------------------------------------------------------------------------
RAM:7786
RAM:7786             loc_7786:                               ; CODE XREF: sub_7716+56↑j
RAM:7786                                                     ; sub_7716+60↑j
RAM:7786 F1                          pop     af
RAM:7787 F5                          push    af
RAM:7788 DD 5E 0C                    ld      e, (ix+0Ch)
RAM:778B DD 34 0C                    inc     (ix+0Ch)
RAM:778E CD 91 75                    call    sub_7591
RAM:7791 77                          ld      (hl), a
RAM:7792 2B                          dec     hl
RAM:7793 7E                          ld      a, (hl)
RAM:7794 FE 0D                       cp      0Dh
RAM:7796 20 02                       jr      nz, loc_779A
RAM:7798 36 2C                       ld      (hl), 2Ch ; ','
RAM:779A
RAM:779A             loc_779A:                               ; CODE XREF: sub_7716+80↑j
RAM:779A 23                          inc     hl
RAM:779B DD 34 11                    inc     (ix+11h)
RAM:779E 20 0F                       jr      nz, loc_77AF
RAM:77A0 DD 34 12                    inc     (ix+12h)
RAM:77A3 F2 AF 77                    jp      p, loc_77AF
RAM:77A6 DD 35 11                    dec     (ix+11h)
RAM:77A9 DD 35 12                    dec     (ix+12h)
RAM:77AC AF                          xor     a
RAM:77AD 18 33                       jr      loc_77E2
RAM:77AF             ; ---------------------------------------------------------------------------
RAM:77AF
RAM:77AF             loc_77AF:                               ; CODE XREF: sub_7716+88↑j
RAM:77AF                                                     ; sub_7716+8D↑j
RAM:77AF DD 7E 0C                    ld      a, (ix+0Ch)
RAM:77B2 FE FE                       cp      0FEh
RAM:77B4 20 2A                       jr      nz, loc_77E0
RAM:77B6 11 FE 00                    ld      de, 0FEh
RAM:77B9 CD 93 75                    call    sub_7593
RAM:77BC 7E                          ld      a, (hl)
RAM:77BD B7                          or      a
RAM:77BE 20 0F                       jr      nz, loc_77CF
RAM:77C0 06 00                       ld      b, 0
RAM:77C2 CD B7 79                    call    READ_WRITE_SEC_DATA ; read/write sector data. B=1 for READ, B=0 for WRITE
RAM:77C5 11 0F 00                    ld      de, 0Fh
RAM:77C8 DD 19                       add     ix, de
RAM:77CA CD C6 75                    call    sub_75C6
RAM:77CD 18 11                       jr      loc_77E0
RAM:77CF             ; ---------------------------------------------------------------------------
RAM:77CF
RAM:77CF             loc_77CF:                               ; CODE XREF: sub_7716+A8↑j
RAM:77CF 06 00                       ld      b, 0
RAM:77D1 CD B7 79                    call    READ_WRITE_SEC_DATA ; read/write sector data. B=1 for READ, B=0 for WRITE
RAM:77D4 B7                          or      a
RAM:77D5 C2 06 62                    jp      nz, dos_error
RAM:77D8 11 0F 00                    ld      de, 0Fh
RAM:77DB DD 19                       add     ix, de
RAM:77DD CD C6 75                    call    sub_75C6
RAM:77E0
RAM:77E0             loc_77E0:                               ; CODE XREF: sub_7716+9E↑j
RAM:77E0                                                     ; sub_7716+B7↑j
RAM:77E0 3E 01                       ld      a, 1
RAM:77E2
RAM:77E2             loc_77E2:                               ; CODE XREF: sub_7716+97↑j
RAM:77E2 FD 77 50                    ld      (iy+50h), a
RAM:77E5
RAM:77E5             loc_77E5:                               ; CODE XREF: sub_7716+6D↑j
RAM:77E5 F1                          pop     af
RAM:77E6 C1                          pop     bc
RAM:77E7 D1                          pop     de
RAM:77E8 E1                          pop     hl
RAM:77E9 C9                          ret
RAM:77E9             ; End of function sub_7716
RAM:77E9
RAM:77EA
RAM:77EA             ; =============== S U B R O U T I N E =======================================
RAM:77EA
RAM:77EA             ; look for 'R' filetype, else error out
RAM:77EA
RAM:77EA             CHECK_R_FILETYPE:                       ; CODE XREF: RAM:7644↑p
RAM:77EA                                                     ; RAM:76AD↑p
RAM:77EA D5                          push    de
RAM:77EB DD E1                       pop     ix
RAM:77ED DD 7E 14                    ld      a, (ix+14h)
RAM:77F0 FE 52                       cp      52h ; 'R'
RAM:77F2 3E 0C                       ld      a, 12           ; File Type Mismatch
RAM:77F4 C2 06 62                    jp      nz, dos_error
RAM:77F7 C9                          ret
RAM:77F7             ; End of function CHECK_R_FILETYPE
RAM:77F7
RAM:77F8
RAM:77F8             ; =============== S U B R O U T I N E =======================================
RAM:77F8
RAM:77F8
RAM:77F8             sub_77F8:                               ; CODE XREF: RAM:5F15↑j
RAM:77F8                                                     ; RAM:LOAD↑p ...
RAM:77F8 CD 09 78                    call    sub_7809
RAM:77FB
RAM:77FB             loc_77FB:                               ; CODE XREF: RAM:6422↑j
RAM:77FB B7                          or      a
RAM:77FC C2 06 62                    jp      nz, dos_error
RAM:77FF 7E                          ld      a, (hl)
RAM:7800 B7                          or      a
RAM:7801 C8                          ret     z
RAM:7802 FE 3A                       cp      3Ah ; ':'
RAM:7804 C2 67 62                    jp      nz, loc_6267
RAM:7807 AF                          xor     a
RAM:7808 C9                          ret
RAM:7808             ; End of function sub_77F8
RAM:7808
RAM:7809
RAM:7809             ; =============== S U B R O U T I N E =======================================
RAM:7809
RAM:7809
RAM:7809             sub_7809:                               ; CODE XREF: RAM:641F↑p
RAM:7809                                                     ; RAM:BSAVE↑p ...
RAM:7809 FD E5                       push    iy
RAM:780B 06 08                       ld      b, 8
RAM:780D
RAM:780D             loc_780D:                               ; CODE XREF: sub_7809+A↓j
RAM:780D FD 36 01 20                 ld      (iy+1), 20h ; ' '
RAM:7811 FD 23                       inc     iy
RAM:7813 10 F8                       djnz    loc_780D
RAM:7815 FD E1                       pop     iy
RAM:7817
RAM:7817             loc_7817:                               ; CODE XREF: sub_7809+12↓j
RAM:7817 7E                          ld      a, (hl)
RAM:7818 23                          inc     hl
RAM:7819 FE 20                       cp      20h ; ' '
RAM:781B 28 FA                       jr      z, loc_7817
RAM:781D 2B                          dec     hl
RAM:781E CF                          rst     8
RAM:781F 22 06 08                    ld      (word_806), hl
RAM:7822 7E                          ld      a, (hl)
RAM:7823 FE 22                       cp      22h ; '"'
RAM:7825 20 03                       jr      nz, loc_782A
RAM:7827
RAM:7827             loc_7827:                               ; CODE XREF: sub_7809+35↓j
RAM:7827 3E 01                       ld      a, 1
RAM:7829 C9                          ret
RAM:782A             ; ---------------------------------------------------------------------------
RAM:782A
RAM:782A             loc_782A:                               ; CODE XREF: sub_7809+1C↑j
RAM:782A FD E5                       push    iy
RAM:782C
RAM:782C             loc_782C:                               ; CODE XREF: sub_7809+2E↓j
RAM:782C 7E                          ld      a, (hl)
RAM:782D 23                          inc     hl
RAM:782E FE 22                       cp      22h ; '"'
RAM:7830 28 14                       jr      z, loc_7846
RAM:7832 FD 77 01                    ld      (iy+1), a
RAM:7835 FD 23                       inc     iy
RAM:7837 10 F3                       djnz    loc_782C
RAM:7839 FD E1                       pop     iy
RAM:783B
RAM:783B             loc_783B:                               ; CODE XREF: sub_7809+3B↓j
RAM:783B 7E                          ld      a, (hl)
RAM:783C 23                          inc     hl
RAM:783D B7                          or      a
RAM:783E 28 E7                       jr      z, loc_7827
RAM:7840 FE 22                       cp      22h ; '"'
RAM:7842 28 04                       jr      z, loc_7848
RAM:7844 18 F5                       jr      loc_783B
RAM:7846             ; ---------------------------------------------------------------------------
RAM:7846
RAM:7846             loc_7846:                               ; CODE XREF: sub_7809+27↑j
RAM:7846 FD E1                       pop     iy
RAM:7848
RAM:7848             loc_7848:                               ; CODE XREF: sub_7809+39↑j
RAM:7848 AF                          xor     a
RAM:7849 C9                          ret
RAM:7849             ; End of function sub_7809
RAM:7849
RAM:784A
RAM:784A             ; =============== S U B R O U T I N E =======================================
RAM:784A
RAM:784A
RAM:784A             FIND_SECTOR_HEADER:                     ; CODE XREF: RAM:5F18↑j
RAM:784A                                                     ; FORMAT_DISK+FB↑p ...
RAM:784A D9                          exx
RAM:784B 21 40 1F                    ld      hl, 8000        ; Maximum byte count to test on a track. Timeout after this
RAM:784E D9                          exx
RAM:784F 3A 42 FB                    ld      a, (REQUIRED_TRACK)
RAM:7852 FD 96 7F                    sub     (iy+7Fh)        ; compare requested track# with last known
RAM:7855 28 1F                       jr      z, track_correct ; jump if on correct track already
RAM:7857 F2 6A 78                    jp      p, loc_786A
RAM:785A ED 44                       neg
RAM:785C 47                          ld      b, a            ; number of tracks to step out
RAM:785D CD 77 79                    call    STEP_HEAD_OUT
RAM:7860 C5                          push    bc
RAM:7861 01 1E 00                    ld      bc, 30
RAM:7864 CD 34 79                    call    DELAY_BC
RAM:7867 C1                          pop     bc
RAM:7868 18 0C                       jr      track_correct
RAM:786A             ; ---------------------------------------------------------------------------
RAM:786A
RAM:786A             loc_786A:                               ; CODE XREF: FIND_SECTOR_HEADER+D↑j
RAM:786A 47                          ld      b, a            ; number of tracks to step in
RAM:786B CD 44 79                    call    STEP_HEAD_IN
RAM:786E C5                          push    bc
RAM:786F 01 0F 00                    ld      bc, 15
RAM:7872 CD 34 79                    call    DELAY_BC
RAM:7875 C1                          pop     bc
RAM:7876
RAM:7876             track_correct:                          ; CODE XREF: FIND_SECTOR_HEADER+B↑j
RAM:7876                                                     ; FIND_SECTOR_HEADER+1E↑j ...
RAM:7876 3E 10                       ld      a, 16
RAM:7878 32 59 FE                    ld      (SECTORS_EXAMINED), a ; Look at all 16 sector headers on a track before failing
RAM:787B
RAM:787B             loc_787B:                               ; CODE XREF: FIND_SECTOR_HEADER+87↓j
RAM:787B 3A 42 FB                    ld      a, (REQUIRED_TRACK)
RAM:787E 67                          ld      h, a            ; H = required track
RAM:787F FD 6E 7E                    ld      l, (iy+7Eh)     ; L = skewed sector number
RAM:7882
RAM:7882             loc_7882:                               ; CODE XREF: FIND_SECTOR_HEADER+A2↓j
RAM:7882 CD F7 78                    call    read_disk_byte
RAM:7885 FE D5                       cp      0D5h
RAM:7887 C2 E7 78                    jp      nz, CHECK_BYTECOUNT
RAM:788A CD F7 78                    call    read_disk_byte
RAM:788D FE AA                       cp      0AAh
RAM:788F C2 E7 78                    jp      nz, CHECK_BYTECOUNT
RAM:7892 CD F7 78                    call    read_disk_byte
RAM:7895 FE 96                       cp      96h
RAM:7897 C2 E7 78                    jp      nz, CHECK_BYTECOUNT
RAM:789A CD FF 78                    call    read_disk_byte_4x4
RAM:789D 57                          ld      d, a            ; Volume# to D, but ignored?
RAM:789E 47                          ld      b, a
RAM:789F CD FF 78                    call    read_disk_byte_4x4
RAM:78A2 BC                          cp      h               ; Compare found Track# with requested
RAM:78A3 20 37                       jr      nz, loc_78DC
RAM:78A5 A8                          xor     b
RAM:78A6 47                          ld      b, a
RAM:78A7 CD FF 78                    call    read_disk_byte_4x4
RAM:78AA BD                          cp      l               ; Compare found sector# with requested
RAM:78AB C2 CA 78                    jp      nz, loc_78CA
RAM:78AE A8                          xor     b
RAM:78AF 47                          ld      b, a
RAM:78B0 CD FF 78                    call    read_disk_byte_4x4 ; Checksum : vol^trk^sec
RAM:78B3 A8                          xor     b
RAM:78B4 20 1E                       jr      nz, loc_78D4    ; XOR Checksum byte should result in ZERO
RAM:78B6 CD F7 78                    call    read_disk_byte
RAM:78B9 FE DE                       cp      0DEh
RAM:78BB 20 17                       jr      nz, loc_78D4
RAM:78BD CD F7 78                    call    read_disk_byte
RAM:78C0 FE AA                       cp      0AAh
RAM:78C2 20 10                       jr      nz, loc_78D4
RAM:78C4 7A                          ld      a, d            ; Save volume# to DOUBLE_SIDED flag. $AA for side#1
RAM:78C5 32 40 FB                    ld      (DOUBLE_SIDED), a
RAM:78C8 B7                          or      a
RAM:78C9 C9                          ret
RAM:78CA             ; ---------------------------------------------------------------------------
RAM:78CA
RAM:78CA             loc_78CA:                               ; CODE XREF: FIND_SECTOR_HEADER+61↑j
RAM:78CA 3A 59 FE                    ld      a, (SECTORS_EXAMINED)
RAM:78CD 3D                          dec     a
RAM:78CE 32 59 FE                    ld      (SECTORS_EXAMINED), a
RAM:78D1 C2 7B 78                    jp      nz, loc_787B
RAM:78D4
RAM:78D4             loc_78D4:                               ; CODE XREF: FIND_SECTOR_HEADER+6A↑j
RAM:78D4                                                     ; FIND_SECTOR_HEADER+71↑j ...
RAM:78D4 FD 35 13                    dec     (iy+13h)        ; retry count
RAM:78D7 C2 76 78                    jp      nz, track_correct
RAM:78DA 37                          scf
RAM:78DB C9                          ret
RAM:78DC             ; ---------------------------------------------------------------------------
RAM:78DC
RAM:78DC             loc_78DC:                               ; CODE XREF: FIND_SECTOR_HEADER+59↑j
RAM:78DC                                                     ; FIND_SECTOR_HEADER+AA↓j
RAM:78DC FD 77 7F                    ld      (iy+7Fh), a
RAM:78DF FD 35 13                    dec     (iy+13h)
RAM:78E2 C2 4A 78                    jp      nz, FIND_SECTOR_HEADER
RAM:78E5 37                          scf
RAM:78E6 C9                          ret
RAM:78E7             ; ---------------------------------------------------------------------------
RAM:78E7
RAM:78E7             CHECK_BYTECOUNT:                        ; CODE XREF: FIND_SECTOR_HEADER+3D↑j
RAM:78E7                                                     ; FIND_SECTOR_HEADER+45↑j ...
RAM:78E7 D9                          exx
RAM:78E8 2B                          dec     hl
RAM:78E9 7C                          ld      a, h            ; Allow 8000 bytes to be read on a track before timout
RAM:78EA B5                          or      l
RAM:78EB D9                          exx
RAM:78EC C2 82 78                    jp      nz, loc_7882
RAM:78EF 3E 28                       ld      a, 40
RAM:78F1 FD 77 7F                    ld      (iy+7Fh), a
RAM:78F4 C3 DC 78                    jp      loc_78DC
RAM:78F4             ; End of function FIND_SECTOR_HEADER
RAM:78F4
RAM:78F7
RAM:78F7             ; =============== S U B R O U T I N E =======================================
RAM:78F7
RAM:78F7
RAM:78F7             read_disk_byte:                         ; CODE XREF: FIND_SECTOR_HEADER:loc_7882↑p
RAM:78F7                                                     ; FIND_SECTOR_HEADER+40↑p ...
RAM:78F7 DB 12                       in      a, (12h)
RAM:78F9 07                          rlca
RAM:78FA 30 FB                       jr      nc, read_disk_byte
RAM:78FC DB 13                       in      a, (13h)
RAM:78FE C9                          ret
RAM:78FE             ; End of function read_disk_byte
RAM:78FE
RAM:78FF
RAM:78FF             ; =============== S U B R O U T I N E =======================================
RAM:78FF
RAM:78FF
RAM:78FF             read_disk_byte_4x4:                     ; CODE XREF: FIND_SECTOR_HEADER+50↑p
RAM:78FF                                                     ; FIND_SECTOR_HEADER+55↑p ...
RAM:78FF DB 12                       in      a, (12h)
RAM:7901 07                          rlca
RAM:7902 30 FB                       jr      nc, read_disk_byte_4x4
RAM:7904 DB 13                       in      a, (13h)
RAM:7906 17                          rla
RAM:7907 5F                          ld      e, a
RAM:7908
RAM:7908             loc_7908:                               ; CODE XREF: read_disk_byte_4x4+C↓j
RAM:7908 DB 12                       in      a, (12h)
RAM:790A 07                          rlca
RAM:790B 30 FB                       jr      nc, loc_7908
RAM:790D DB 13                       in      a, (13h)
RAM:790F A3                          and     e
RAM:7910 C9                          ret
RAM:7910             ; End of function read_disk_byte_4x4
RAM:7910
RAM:7911
RAM:7911             ; =============== S U B R O U T I N E =======================================
RAM:7911
RAM:7911
RAM:7911             WRITE_DISK_BYTE_D:                      ; CODE XREF: FORMAT_DISK:loc_66C4↑p
RAM:7911                                                     ; FORMAT_DISK+3C↑p ...
RAM:7911 DB 12                       in      a, (12h)
RAM:7913 07                          rlca
RAM:7914 30 FB                       jr      nc, WRITE_DISK_BYTE_D
RAM:7916 7A                          ld      a, d
RAM:7917 D3 13                       out     (13h), a
RAM:7919 C9                          ret
RAM:7919             ; End of function WRITE_DISK_BYTE_D
RAM:7919
RAM:791A
RAM:791A             ; =============== S U B R O U T I N E =======================================
RAM:791A
RAM:791A
RAM:791A             WRITE_4X4_D:                            ; CODE XREF: FORMAT_DISK+4F↑p
RAM:791A                                                     ; FORMAT_DISK+58↑p ...
RAM:791A 7A                          ld      a, d
RAM:791B 1F                          rra
RAM:791C F6 AA                       or      0AAh
RAM:791E 5F                          ld      e, a
RAM:791F
RAM:791F             loc_791F:                               ; CODE XREF: WRITE_4X4_D+8↓j
RAM:791F DB 12                       in      a, (12h)
RAM:7921 07                          rlca
RAM:7922 30 FB                       jr      nc, loc_791F
RAM:7924 7B                          ld      a, e
RAM:7925 D3 13                       out     (13h), a
RAM:7927 7A                          ld      a, d
RAM:7928 F6 AA                       or      0AAh
RAM:792A 5F                          ld      e, a
RAM:792B
RAM:792B             loc_792B:                               ; CODE XREF: WRITE_4X4_D+14↓j
RAM:792B DB 12                       in      a, (12h)
RAM:792D 07                          rlca
RAM:792E 30 FB                       jr      nc, loc_792B
RAM:7930 7B                          ld      a, e
RAM:7931 D3 13                       out     (13h), a
RAM:7933 C9                          ret
RAM:7933             ; End of function WRITE_4X4_D
RAM:7933
RAM:7934
RAM:7934             ; =============== S U B R O U T I N E =======================================
RAM:7934
RAM:7934
RAM:7934             DELAY_BC:                               ; CODE XREF: RAM:5F24↑j
RAM:7934                                                     ; RAM:688C↑p ...
RAM:7934 C5                          push    bc
RAM:7935 01 89 00                    ld      bc, 89h
RAM:7938
RAM:7938             loc_7938:                               ; CODE XREF: DELAY_BC+7↓j
RAM:7938 0B                          dec     bc
RAM:7939 78                          ld      a, b
RAM:793A B1                          or      c
RAM:793B 20 FB                       jr      nz, loc_7938
RAM:793D C1                          pop     bc
RAM:793E 0B                          dec     bc
RAM:793F 78                          ld      a, b
RAM:7940 B1                          or      c
RAM:7941 20 F1                       jr      nz, DELAY_BC
RAM:7943 C9                          ret
RAM:7943             ; End of function DELAY_BC
RAM:7943
RAM:7944
RAM:7944             ; =============== S U B R O U T I N E =======================================
RAM:7944
RAM:7944
RAM:7944             STEP_HEAD_IN:                           ; CODE XREF: FORMAT_DISK+115↑p
RAM:7944                                                     ; FIND_SECTOR_HEADER+21↑p
RAM:7944 FD 7E 7F                    ld      a, (iy+7Fh)
RAM:7947 80                          add     a, b
RAM:7948 FE 28                       cp      28h ; '('
RAM:794A 38 02                       jr      c, loc_794E
RAM:794C 3E 27                       ld      a, 27h ; '''
RAM:794E
RAM:794E             loc_794E:                               ; CODE XREF: STEP_HEAD_IN+6↑j
RAM:794E FD 77 7F                    ld      (iy+7Fh), a
RAM:7951 CB 20                       sla     b
RAM:7953
RAM:7953             loc_7953:                               ; CODE XREF: STEP_HEAD_IN+30↓j
RAM:7953 FD 7E 14                    ld      a, (iy+14h)
RAM:7956 4F                          ld      c, a
RAM:7957 07                          rlca
RAM:7958 F5                          push    af
RAM:7959 FD 77 14                    ld      (iy+14h), a
RAM:795C B1                          or      c
RAM:795D CD A8 79                    call    UPDATE_STEPPER_A
RAM:7960 C5                          push    bc
RAM:7961 01 01 00                    ld      bc, 1
RAM:7964 CD 34 79                    call    DELAY_BC
RAM:7967 C1                          pop     bc
RAM:7968 F1                          pop     af
RAM:7969 CD A8 79                    call    UPDATE_STEPPER_A
RAM:796C C5                          push    bc
RAM:796D 01 07 00                    ld      bc, 7
RAM:7970 CD 34 79                    call    DELAY_BC
RAM:7973 C1                          pop     bc
RAM:7974 10 DD                       djnz    loc_7953
RAM:7976 C9                          ret
RAM:7976             ; End of function STEP_HEAD_IN
RAM:7976
RAM:7977
RAM:7977             ; =============== S U B R O U T I N E =======================================
RAM:7977
RAM:7977
RAM:7977             STEP_HEAD_OUT:                          ; CODE XREF: FORMAT_DISK+1A↑p
RAM:7977                                                     ; FIND_SECTOR_HEADER+13↑p
RAM:7977 FD 7E 7F                    ld      a, (iy+7Fh)
RAM:797A 90                          sub     b
RAM:797B F2 7F 79                    jp      p, loc_797F
RAM:797E AF                          xor     a
RAM:797F
RAM:797F             loc_797F:                               ; CODE XREF: STEP_HEAD_OUT+4↑j
RAM:797F FD 77 7F                    ld      (iy+7Fh), a
RAM:7982 CB 20                       sla     b
RAM:7984
RAM:7984             loc_7984:                               ; CODE XREF: STEP_HEAD_OUT+2E↓j
RAM:7984 FD 7E 14                    ld      a, (iy+14h)
RAM:7987 4F                          ld      c, a
RAM:7988 0F                          rrca
RAM:7989 F5                          push    af
RAM:798A FD 77 14                    ld      (iy+14h), a
RAM:798D B1                          or      c
RAM:798E CD A8 79                    call    UPDATE_STEPPER_A
RAM:7991 C5                          push    bc
RAM:7992 01 01 00                    ld      bc, 1
RAM:7995 CD 34 79                    call    DELAY_BC
RAM:7998 C1                          pop     bc
RAM:7999 F1                          pop     af
RAM:799A CD A8 79                    call    UPDATE_STEPPER_A
RAM:799D C5                          push    bc
RAM:799E 01 07 00                    ld      bc, 7
RAM:79A1 CD 34 79                    call    DELAY_BC
RAM:79A4 C1                          pop     bc
RAM:79A5 10 DD                       djnz    loc_7984
RAM:79A7 C9                          ret
RAM:79A7             ; End of function STEP_HEAD_OUT
RAM:79A7
RAM:79A8
RAM:79A8             ; =============== S U B R O U T I N E =======================================
RAM:79A8
RAM:79A8
RAM:79A8             UPDATE_STEPPER_A:                       ; CODE XREF: STEP_HEAD_IN+19↑p
RAM:79A8                                                     ; STEP_HEAD_IN+25↑p ...
RAM:79A8 E6 0F                       and     0Fh
RAM:79AA 4F                          ld      c, a
RAM:79AB 3E F0                       ld      a, 0F0h
RAM:79AD FD A6 43                    and     (iy+43h)
RAM:79B0 B1                          or      c
RAM:79B1 FD 77 43                    ld      (iy+43h), a
RAM:79B4 D3 10                       out     (10h), a
RAM:79B6 C9                          ret
RAM:79B6             ; End of function UPDATE_STEPPER_A
RAM:79B6
RAM:79B7
RAM:79B7             ; =============== S U B R O U T I N E =======================================
RAM:79B7
RAM:79B7             ; read/write sector data. B=1 for READ, B=0 for WRITE
RAM:79B7
RAM:79B7             READ_WRITE_SEC_DATA:                    ; CODE XREF: RAM:5F21↑j
RAM:79B7                                                     ; sub_644B+36↑p ...
RAM:79B7 21 43 FB                    ld      hl, CURRENT_DRIVE
RAM:79BA FD 7E 0B                    ld      a, (iy+0Bh)     ; examine drive mask
RAM:79BD FE 40                       cp      40h ; '@'
RAM:79BF FD 7E 43                    ld      a, (iy+43h)     ; get current LATCH value
RAM:79C2 20 06                       jr      nz, loc_79CA
RAM:79C4 CB AF                       res     5, a            ; drive#1
RAM:79C6 36 01                       ld      (hl), 1         ; also save in CURRENT_DRIVE
RAM:79C8 18 04                       jr      loc_79CE
RAM:79CA             ; ---------------------------------------------------------------------------
RAM:79CA
RAM:79CA             loc_79CA:                               ; CODE XREF: READ_WRITE_SEC_DATA+B↑j
RAM:79CA CB EF                       set     5, a            ; drive#2
RAM:79CC 36 02                       ld      (hl), 2
RAM:79CE
RAM:79CE             loc_79CE:                               ; CODE XREF: READ_WRITE_SEC_DATA+11↑j
RAM:79CE FD 77 43                    ld      (iy+43h), a     ; save current LATCH value
RAM:79D1 FD 7E 12                    ld      a, (iy+12h)     ; Look at Track#
RAM:79D4 FD CB 43 BE                 res     7, (iy+43h)
RAM:79D8 FE 28                       cp      40              ; Track 40+ denotes second side of the disk?
RAM:79DA 38 08                       jr      c, side_zero
RAM:79DC FD CB 43 FE                 set     7, (iy+43h)     ; Set side#2 in the status register
RAM:79E0 D6 4F                       sub     79              ; normalise the Track#
RAM:79E2 ED 44                       neg                     ; track numbers on side#2 are reversed? 40 = innermost, 79 = outer.
RAM:79E4
RAM:79E4             side_zero:                              ; CODE XREF: READ_WRITE_SEC_DATA+23↑j
RAM:79E4 32 42 FB                    ld      (REQUIRED_TRACK), a
RAM:79E7 FD 5E 11                    ld      e, (iy+11h)     ; get sector#
RAM:79EA 16 00                       ld      d, 0
RAM:79EC 21 28 7D                    ld      hl, SECTOR_SKEW_TABLE2
RAM:79EF 19                          add     hl, de
RAM:79F0 7E                          ld      a, (hl)         ; get skewed sector number
RAM:79F1 FD 77 7E                    ld      (iy+7Eh), a
RAM:79F4 CD 91 7C                    call    sub_7C91
RAM:79F7 78                          ld      a, b
RAM:79F8 B7                          or      a               ; B=1 for READ, B=0 for WRITE
RAM:79F9 C2 A0 7A                    jp      nz, READ_SECTOR
RAM:79FC
RAM:79FC             WRITE_SECTOR:
RAM:79FC CD 35 7B                    call    ENCODE_BUFFER_62
RAM:79FF DB 12                       in      a, (12h)
RAM:7A01 0F                          rrca                    ; Check Write Protect Bit
RAM:7A02 3E 04                       ld      a, 4            ; Write Protect error
RAM:7A04 D8                          ret     c
RAM:7A05 FD 36 13 20                 ld      (iy+13h), 32    ; Set retry count to 32  (DOS1.0 = 10)****
RAM:7A09 CD 4A 78                    call    FIND_SECTOR_HEADER
RAM:7A0C 3E 09                       ld      a, 9
RAM:7A0E D8                          ret     c               ; C indicates sector couldn't be located.
RAM:7A0F 06 03                       ld      b, 3
RAM:7A11
RAM:7A11             loc_7A11:                               ; CODE XREF: READ_WRITE_SEC_DATA:loc_7A11↓j
RAM:7A11 10 FE                       djnz    $
RAM:7A13 21 00 FC                    ld      hl, ENCODED_BUFFER ; 342 byte buffer of 62 encoded data
RAM:7A16 0E 00                       ld      c, 0
RAM:7A18 06 04                       ld      b, 4            ; 5 bytes of self-sync $FF bytes
RAM:7A1A 16 FF                       ld      d, 0FFh
RAM:7A1C FD 7E 43                    ld      a, (iy+43h)
RAM:7A1F E6 BF                       and     0BFh            ; Turn on *WRREQ - self-sync appears to default to *ON*
RAM:7A21 FD 77 43                    ld      (iy+43h), a
RAM:7A24 D3 10                       out     (10h), a
RAM:7A26 7A                          ld      a, d            ; $FF
RAM:7A27 D3 13                       out     (13h), a        ; Write 5 bytes of self-sync $FF
RAM:7A29
RAM:7A29             loc_7A29:                               ; CODE XREF: READ_WRITE_SEC_DATA+75↓j
RAM:7A29 CD 11 79                    call    WRITE_DISK_BYTE_D
RAM:7A2C 10 FB                       djnz    loc_7A29
RAM:7A2E 16 D5                       ld      d, 0D5h
RAM:7A30 CD 11 79                    call    WRITE_DISK_BYTE_D
RAM:7A33 D3 11                       out     (11h), a        ; Turn *off* self-sync style bytes
RAM:7A35 16 AA                       ld      d, 0AAh
RAM:7A37 CD 11 79                    call    WRITE_DISK_BYTE_D
RAM:7A3A 16 AD                       ld      d, 0ADh
RAM:7A3C CD 11 79                    call    WRITE_DISK_BYTE_D
RAM:7A3F 11 00 FB                    ld      de, XLATE_T2_COPY
RAM:7A42
RAM:7A42             loc_7A42:                               ; CODE XREF: READ_WRITE_SEC_DATA+8E↓j
RAM:7A42 DB 12                       in      a, (12h)
RAM:7A44 B7                          or      a
RAM:7A45 F2 42 7A                    jp      p, loc_7A42     ; Wait for write register to be ready
RAM:7A48 5E                          ld      e, (hl)         ; Start reading from encoded buffer
RAM:7A49 1A                          ld      a, (de)         ; Translate on the fly!
RAM:7A4A D3 13                       out     (13h), a
RAM:7A4C 06 00                       ld      b, 0            ; 256 bytes
RAM:7A4E
RAM:7A4E             loc_7A4E:                               ; CODE XREF: READ_WRITE_SEC_DATA+9A↓j
RAM:7A4E                                                     ; READ_WRITE_SEC_DATA+A4↓j
RAM:7A4E DB 12                       in      a, (12h)
RAM:7A50 B7                          or      a
RAM:7A51 F2 4E 7A                    jp      p, loc_7A4E
RAM:7A54 7E                          ld      a, (hl)
RAM:7A55 23                          inc     hl
RAM:7A56 AE                          xor     (hl)
RAM:7A57 5F                          ld      e, a
RAM:7A58 1A                          ld      a, (de)         ; get translated value
RAM:7A59 D3 13                       out     (13h), a
RAM:7A5B 10 F1                       djnz    loc_7A4E
RAM:7A5D 06 55                       ld      b, 85           ; plus 86 . 256 + 86 = 342 encoded bytes in a sector
RAM:7A5F
RAM:7A5F             loc_7A5F:                               ; CODE XREF: READ_WRITE_SEC_DATA+AB↓j
RAM:7A5F                                                     ; READ_WRITE_SEC_DATA+B5↓j
RAM:7A5F DB 12                       in      a, (12h)
RAM:7A61 B7                          or      a
RAM:7A62 F2 5F 7A                    jp      p, loc_7A5F
RAM:7A65 7E                          ld      a, (hl)
RAM:7A66 23                          inc     hl
RAM:7A67 AE                          xor     (hl)
RAM:7A68 5F                          ld      e, a
RAM:7A69 1A                          ld      a, (de)
RAM:7A6A D3 13                       out     (13h), a
RAM:7A6C 10 F1                       djnz    loc_7A5F
RAM:7A6E
RAM:7A6E             loc_7A6E:                               ; CODE XREF: READ_WRITE_SEC_DATA+BA↓j
RAM:7A6E DB 12                       in      a, (12h)
RAM:7A70 B7                          or      a
RAM:7A71 F2 6E 7A                    jp      p, loc_7A6E
RAM:7A74 5E                          ld      e, (hl)         ; 1 byte checksum value
RAM:7A75 1A                          ld      a, (de)
RAM:7A76 D3 13                       out     (13h), a
RAM:7A78 16 DE                       ld      d, 0DEh
RAM:7A7A CD 11 79                    call    WRITE_DISK_BYTE_D
RAM:7A7D 16 AA                       ld      d, 0AAh
RAM:7A7F CD 11 79                    call    WRITE_DISK_BYTE_D
RAM:7A82 16 EB                       ld      d, 0EBh
RAM:7A84 CD 11 79                    call    WRITE_DISK_BYTE_D
RAM:7A87 DB 12                       in      a, (12h)
RAM:7A89 B7                          or      a               ; waste small amount of time
RAM:7A8A 3E FF                       ld      a, 0FFh
RAM:7A8C D3 13                       out     (13h), a
RAM:7A8E
RAM:7A8E             loc_7A8E:                               ; CODE XREF: READ_WRITE_SEC_DATA+DA↓j
RAM:7A8E DB 12                       in      a, (12h)
RAM:7A90 B7                          or      a
RAM:7A91 F2 8E 7A                    jp      p, loc_7A8E     ; Wait for write register to be ready
RAM:7A94 FD 7E 43                    ld      a, (iy+43h)
RAM:7A97 F6 40                       or      40h ; '@'       ; Turn off *WRREQ
RAM:7A99 FD 77 43                    ld      (iy+43h), a
RAM:7A9C D3 10                       out     (10h), a
RAM:7A9E 18 12                       jr      write_ok        ; Sector Written OK : exit_success
RAM:7AA0             ; ---------------------------------------------------------------------------
RAM:7AA0
RAM:7AA0             READ_SECTOR:                            ; CODE XREF: READ_WRITE_SEC_DATA+42↑j
RAM:7AA0 FD 36 13 20                 ld      (iy+13h), 32    ; retry count
RAM:7AA4
RAM:7AA4             loc_7AA4:                               ; CODE XREF: READ_WRITE_SEC_DATA+103↓j
RAM:7AA4 CD 4A 78                    call    FIND_SECTOR_HEADER
RAM:7AA7 3E 09                       ld      a, 9
RAM:7AA9 D8                          ret     c
RAM:7AAA CD BF 7A                    call    READ_SECTOR_DATA
RAM:7AAD 38 08                       jr      c, read_error
RAM:7AAF CD 17 7B                    call    DECODE_BUFFER_62
RAM:7AB2
RAM:7AB2             write_ok:                               ; CODE XREF: READ_WRITE_SEC_DATA+E7↑j
RAM:7AB2 CD C8 7C                    call    DRIVE_OFF
RAM:7AB5 AF                          xor     a
RAM:7AB6 C9                          ret
RAM:7AB7             ; ---------------------------------------------------------------------------
RAM:7AB7
RAM:7AB7             read_error:                             ; CODE XREF: READ_WRITE_SEC_DATA+F6↑j
RAM:7AB7 FD 35 13                    dec     (iy+13h)        ; decrement retry count and have another go
RAM:7ABA 20 E8                       jr      nz, loc_7AA4
RAM:7ABC 3E 16                       ld      a, 22           ; unreadable data error
RAM:7ABE C9                          ret
RAM:7ABE             ; End of function READ_WRITE_SEC_DATA
RAM:7ABE
RAM:7ABF
RAM:7ABF             ; =============== S U B R O U T I N E =======================================
RAM:7ABF
RAM:7ABF
RAM:7ABF             READ_SECTOR_DATA:                       ; CODE XREF: READ_WRITE_SEC_DATA+F3↑p
RAM:7ABF 21 96 FB                    ld      hl, XLATE_T1_COPY
RAM:7AC2 11 00 FC                    ld      de, ENCODED_BUFFER
RAM:7AC5 0E 00                       ld      c, 0
RAM:7AC7 41                          ld      b, c            ; read 256 bytes
RAM:7AC8
RAM:7AC8             wait_D5:                                ; CODE XREF: READ_SECTOR_DATA+E↓j
RAM:7AC8                                                     ; READ_SECTOR_DATA+15↓j
RAM:7AC8 CD F7 78                    call    read_disk_byte
RAM:7ACB FE D5                       cp      0D5h
RAM:7ACD 20 F9                       jr      nz, wait_D5
RAM:7ACF CD F7 78                    call    read_disk_byte
RAM:7AD2 FE AA                       cp      0AAh
RAM:7AD4 20 F2                       jr      nz, wait_D5
RAM:7AD6 CD F7 78                    call    read_disk_byte
RAM:7AD9 FE AD                       cp      0ADh
RAM:7ADB 20 38                       jr      nz, read_sector_error
RAM:7ADD
RAM:7ADD             loc_7ADD:                               ; CODE XREF: READ_SECTOR_DATA+21↓j
RAM:7ADD                                                     ; READ_SECTOR_DATA+2C↓j
RAM:7ADD DB 12                       in      a, (12h)
RAM:7ADF B7                          or      a
RAM:7AE0 F2 DD 7A                    jp      p, loc_7ADD
RAM:7AE3 DB 13                       in      a, (13h)
RAM:7AE5 6F                          ld      l, a
RAM:7AE6 79                          ld      a, c
RAM:7AE7 AE                          xor     (hl)
RAM:7AE8 4F                          ld      c, a
RAM:7AE9 12                          ld      (de), a
RAM:7AEA 13                          inc     de
RAM:7AEB 10 F0                       djnz    loc_7ADD
RAM:7AED 06 57                       ld      b, 87           ; read another 87. 256+86 = 342 data bytes, plus 1 checksum byte
RAM:7AEF
RAM:7AEF             loc_7AEF:                               ; CODE XREF: READ_SECTOR_DATA+33↓j
RAM:7AEF                                                     ; READ_SECTOR_DATA+3E↓j
RAM:7AEF DB 12                       in      a, (12h)
RAM:7AF1 B7                          or      a
RAM:7AF2 F2 EF 7A                    jp      p, loc_7AEF
RAM:7AF5 DB 13                       in      a, (13h)
RAM:7AF7 6F                          ld      l, a
RAM:7AF8 79                          ld      a, c
RAM:7AF9 AE                          xor     (hl)
RAM:7AFA 4F                          ld      c, a            ; save checksum value for below
RAM:7AFB 12                          ld      (de), a
RAM:7AFC 13                          inc     de
RAM:7AFD 10 F0                       djnz    loc_7AEF
RAM:7AFF
RAM:7AFF             loc_7AFF:                               ; CODE XREF: READ_SECTOR_DATA+43↓j
RAM:7AFF DB 12                       in      a, (12h)
RAM:7B01 B7                          or      a
RAM:7B02 F2 FF 7A                    jp      p, loc_7AFF
RAM:7B05 DB 13                       in      a, (13h)
RAM:7B07 FE DE                       cp      0DEh            ; post amble bytes
RAM:7B09 20 0A                       jr      nz, read_sector_error
RAM:7B0B CD F7 78                    call    read_disk_byte
RAM:7B0E FE AA                       cp      0AAh
RAM:7B10 20 03                       jr      nz, read_sector_error
RAM:7B12 79                          ld      a, c            ; checksum == ZERO if all ok
RAM:7B13 B7                          or      a
RAM:7B14 C9                          ret
RAM:7B15             ; ---------------------------------------------------------------------------
RAM:7B15
RAM:7B15             read_sector_error:                      ; CODE XREF: READ_SECTOR_DATA+1C↑j
RAM:7B15                                                     ; READ_SECTOR_DATA+4A↑j ...
RAM:7B15 37                          scf
RAM:7B16 C9                          ret
RAM:7B16             ; End of function READ_SECTOR_DATA
RAM:7B16
RAM:7B17
RAM:7B17             ; =============== S U B R O U T I N E =======================================
RAM:7B17
RAM:7B17
RAM:7B17             DECODE_BUFFER_62:                       ; CODE XREF: READ_WRITE_SEC_DATA+F8↑p
RAM:7B17 11 56 FC                    ld      de, UNENCODED_BUFFER
RAM:7B1A 0E 02                       ld      c, 2
RAM:7B1C
RAM:7B1C             loc_7B1C:                               ; CODE XREF: DECODE_BUFFER_62+18↓j
RAM:7B1C 06 56                       ld      b, 86
RAM:7B1E
RAM:7B1E             loc_7B1E:                               ; CODE XREF: DECODE_BUFFER_62+1C↓j
RAM:7B1E 21 00 FC                    ld      hl, ENCODED_BUFFER
RAM:7B21
RAM:7B21             loc_7B21:                               ; CODE XREF: DECODE_BUFFER_62+14↓j
RAM:7B21 1A                          ld      a, (de)
RAM:7B22 CB 3E                       srl     (hl)
RAM:7B24 17                          rla
RAM:7B25 CB 3E                       srl     (hl)
RAM:7B27 17                          rla
RAM:7B28 23                          inc     hl
RAM:7B29 12                          ld      (de), a
RAM:7B2A 13                          inc     de
RAM:7B2B 10 F4                       djnz    loc_7B21
RAM:7B2D 0D                          dec     c
RAM:7B2E F8                          ret     m
RAM:7B2F 20 EB                       jr      nz, loc_7B1C
RAM:7B31 06 54                       ld      b, 84
RAM:7B33 18 E9                       jr      loc_7B1E
RAM:7B33             ; End of function DECODE_BUFFER_62
RAM:7B33
RAM:7B35
RAM:7B35             ; =============== S U B R O U T I N E =======================================
RAM:7B35
RAM:7B35
RAM:7B35             ENCODE_BUFFER_62:                       ; CODE XREF: READ_WRITE_SEC_DATA:WRITE_SECTOR↑p
RAM:7B35 21 00 FC                    ld      hl, ENCODED_BUFFER
RAM:7B38 06 56                       ld      b, 86
RAM:7B3A AF                          xor     a
RAM:7B3B
RAM:7B3B             loc_7B3B:                               ; CODE XREF: ENCODE_BUFFER_62+8↓j
RAM:7B3B 77                          ld      (hl), a
RAM:7B3C 23                          inc     hl
RAM:7B3D 10 FC                       djnz    loc_7B3B
RAM:7B3F 11 55 FD                    ld      de, byte_FD55
RAM:7B42 21 53 FC                    ld      hl, byte_FC53
RAM:7B45 06 54                       ld      b, 84
RAM:7B47 0E 03                       ld      c, 3
RAM:7B49 18 05                       jr      loc_7B50
RAM:7B4B             ; ---------------------------------------------------------------------------
RAM:7B4B
RAM:7B4B             loc_7B4B:                               ; CODE XREF: ENCODE_BUFFER_62+29↓j
RAM:7B4B 21 55 FC                    ld      hl, byte_FC55
RAM:7B4E 06 56                       ld      b, 86
RAM:7B50
RAM:7B50             loc_7B50:                               ; CODE XREF: ENCODE_BUFFER_62+14↑j
RAM:7B50                                                     ; ENCODE_BUFFER_62+26↓j
RAM:7B50 1A                          ld      a, (de)
RAM:7B51 CB 3F                       srl     a
RAM:7B53 CB 16                       rl      (hl)
RAM:7B55 1F                          rra
RAM:7B56 CB 16                       rl      (hl)
RAM:7B58 2B                          dec     hl
RAM:7B59 12                          ld      (de), a
RAM:7B5A 1B                          dec     de
RAM:7B5B 10 F3                       djnz    loc_7B50
RAM:7B5D 0D                          dec     c
RAM:7B5E 20 EB                       jr      nz, loc_7B4B
RAM:7B60 C9                          ret
RAM:7B60             ; End of function ENCODE_BUFFER_62
RAM:7B60
RAM:7B61
RAM:7B61             ; =============== S U B R O U T I N E =======================================
RAM:7B61
RAM:7B61
RAM:7B61             sub_7B61:                               ; CODE XREF: RAM:5F1B↑j
RAM:7B61                                                     ; sub_64E7+18↑p ...
RAM:7B61 FD 36 16 03                 ld      (iy+16h), 3
RAM:7B65 FD 36 15 00                 ld      (iy+15h), 0
RAM:7B69 21 FF F9                    ld      hl, byte_F9FF
RAM:7B6C 2B                          dec     hl
RAM:7B6D
RAM:7B6D             loc_7B6D:                               ; CODE XREF: sub_7B61+3C↓j
RAM:7B6D                                                     ; sub_7B61+43↓j
RAM:7B6D 23                          inc     hl
RAM:7B6E 4E                          ld      c, (hl)
RAM:7B6F
RAM:7B6F             loc_7B6F:                               ; CODE XREF: sub_7B61+1A↓j
RAM:7B6F CB 09                       rrc     c
RAM:7B71 30 36                       jr      nc, loc_7BA9
RAM:7B73 FD 34 15                    inc     (iy+15h)
RAM:7B76 FD 7E 15                    ld      a, (iy+15h)
RAM:7B79 FE 08                       cp      8
RAM:7B7B 20 F2                       jr      nz, loc_7B6F
RAM:7B7D 23                          inc     hl
RAM:7B7E 4E                          ld      c, (hl)
RAM:7B7F
RAM:7B7F             loc_7B7F:                               ; CODE XREF: sub_7B61+2A↓j
RAM:7B7F CB 09                       rrc     c
RAM:7B81 30 26                       jr      nc, loc_7BA9
RAM:7B83 FD 34 15                    inc     (iy+15h)
RAM:7B86 FD 7E 15                    ld      a, (iy+15h)
RAM:7B89 FE 10                       cp      10h
RAM:7B8B 20 F2                       jr      nz, loc_7B7F
RAM:7B8D FD 36 15 00                 ld      (iy+15h), 0
RAM:7B91 FD 34 16                    inc     (iy+16h)
RAM:7B94 FD 7E 16                    ld      a, (iy+16h)
RAM:7B97 FE 50                       cp      80
RAM:7B99 28 0B                       jr      z, loc_7BA6
RAM:7B9B FE 28                       cp      40
RAM:7B9D 20 CE                       jr      nz, loc_7B6D
RAM:7B9F 3A 40 FB                    ld      a, (DOUBLE_SIDED)
RAM:7BA2 FE AA                       cp      0AAh
RAM:7BA4 28 C7                       jr      z, loc_7B6D
RAM:7BA6
RAM:7BA6             loc_7BA6:                               ; CODE XREF: sub_7B61+38↑j
RAM:7BA6 3E 07                       ld      a, 7
RAM:7BA8 C9                          ret
RAM:7BA9             ; ---------------------------------------------------------------------------
RAM:7BA9
RAM:7BA9             loc_7BA9:                               ; CODE XREF: sub_7B61+10↑j
RAM:7BA9                                                     ; sub_7B61+20↑j
RAM:7BA9 CB 01                       rlc     c
RAM:7BAB 0E 01                       ld      c, 1
RAM:7BAD FD 7E 15                    ld      a, (iy+15h)
RAM:7BB0 E6 07                       and     7
RAM:7BB2 3C                          inc     a
RAM:7BB3 47                          ld      b, a
RAM:7BB4 CB 09                       rrc     c
RAM:7BB6
RAM:7BB6             loc_7BB6:                               ; CODE XREF: sub_7B61+57↓j
RAM:7BB6 CB 01                       rlc     c
RAM:7BB8 10 FC                       djnz    loc_7BB6
RAM:7BBA 7E                          ld      a, (hl)
RAM:7BBB B1                          or      c
RAM:7BBC 77                          ld      (hl), a
RAM:7BBD AF                          xor     a
RAM:7BBE C9                          ret
RAM:7BBE             ; End of function sub_7B61
RAM:7BBE
RAM:7BBF
RAM:7BBF             ; =============== S U B R O U T I N E =======================================
RAM:7BBF
RAM:7BBF
RAM:7BBF             sub_7BBF:                               ; CODE XREF: RAM:5F1E↑j
RAM:7BBF                                                     ; sub_644B↑p ...
RAM:7BBF FD 36 51 00                 ld      (iy+81), 0
RAM:7BC3
RAM:7BC3             loc_7BC3:                               ; CODE XREF: RAM:6A9C↑p
RAM:7BC3 21 56 FC                    ld      hl, UNENCODED_BUFFER
RAM:7BC6 FD 36 12 02                 ld      (iy+12h), 2     ; track#2, Sector#3
RAM:7BCA FD 36 11 03                 ld      (iy+11h), 3
RAM:7BCE
RAM:7BCE             loc_7BCE:                               ; CODE XREF: sub_7BBF+63↓j
RAM:7BCE 06 01                       ld      b, 1
RAM:7BD0 CD B7 79                    call    READ_WRITE_SEC_DATA ; read/write sector data. B=1 for READ, B=0 for WRITE
RAM:7BD3 B7                          or      a
RAM:7BD4 C2 06 62                    jp      nz, dos_error
RAM:7BD7 06 10                       ld      b, 16
RAM:7BD9 21 56 FC                    ld      hl, UNENCODED_BUFFER
RAM:7BDC FD E5                       push    iy
RAM:7BDE D1                          pop     de
RAM:7BDF 13                          inc     de
RAM:7BE0
RAM:7BE0             loc_7BE0:                               ; CODE XREF: sub_7BBF+59↓j
RAM:7BE0 7E                          ld      a, (hl)
RAM:7BE1 B7                          or      a
RAM:7BE2 20 09                       jr      nz, loc_7BED
RAM:7BE4 FD 7E 51                    ld      a, (iy+81)
RAM:7BE7 B7                          or      a
RAM:7BE8 CC 2F 7C                    call    z, sub_7C2F
RAM:7BEB AF                          xor     a
RAM:7BEC C9                          ret
RAM:7BED             ; ---------------------------------------------------------------------------
RAM:7BED
RAM:7BED             loc_7BED:                               ; CODE XREF: sub_7BBF+23↑j
RAM:7BED D5                          push    de
RAM:7BEE E5                          push    hl
RAM:7BEF FE 01                       cp      1
RAM:7BF1 20 09                       jr      nz, loc_7BFC
RAM:7BF3 FD 7E 51                    ld      a, (iy+81)
RAM:7BF6 B7                          or      a
RAM:7BF7 CC 2F 7C                    call    z, sub_7C2F
RAM:7BFA 18 16                       jr      loc_7C12
RAM:7BFC             ; ---------------------------------------------------------------------------
RAM:7BFC
RAM:7BFC             loc_7BFC:                               ; CODE XREF: sub_7BBF+32↑j
RAM:7BFC FD 77 0A                    ld      (iy+0Ah), a
RAM:7BFF 23                          inc     hl
RAM:7C00 23                          inc     hl
RAM:7C01 0E 08                       ld      c, 8
RAM:7C03 EB                          ex      de, hl
RAM:7C04
RAM:7C04             loc_7C04:                               ; CODE XREF: sub_7BBF+4C↓j
RAM:7C04 1A                          ld      a, (de)
RAM:7C05 BE                          cp      (hl)
RAM:7C06 20 0A                       jr      nz, loc_7C12
RAM:7C08 23                          inc     hl
RAM:7C09 13                          inc     de
RAM:7C0A 0D                          dec     c
RAM:7C0B 20 F7                       jr      nz, loc_7C04
RAM:7C0D F1                          pop     af
RAM:7C0E F1                          pop     af
RAM:7C0F 3E 02                       ld      a, 2
RAM:7C11 C9                          ret
RAM:7C12             ; ---------------------------------------------------------------------------
RAM:7C12
RAM:7C12             loc_7C12:                               ; CODE XREF: sub_7BBF+3B↑j
RAM:7C12                                                     ; sub_7BBF+47↑j
RAM:7C12 E1                          pop     hl
RAM:7C13 11 10 00                    ld      de, 10h
RAM:7C16 19                          add     hl, de
RAM:7C17 D1                          pop     de
RAM:7C18 10 C6                       djnz    loc_7BE0
RAM:7C1A FD 34 11                    inc     (iy+11h)
RAM:7C1D FD 7E 11                    ld      a, (iy+11h)
RAM:7C20 FE 0B                       cp      0Bh
RAM:7C22 20 AA                       jr      nz, loc_7BCE
RAM:7C24 FD 7E 51                    ld      a, (iy+81)
RAM:7C27 B7                          or      a
RAM:7C28 3E 0D                       ld      a, 0Dh
RAM:7C2A 20 02                       jr      nz, locret_7C2E
RAM:7C2C 3E 03                       ld      a, 3
RAM:7C2E
RAM:7C2E             locret_7C2E:                            ; CODE XREF: sub_7BBF+6B↑j
RAM:7C2E C9                          ret
RAM:7C2E             ; End of function sub_7BBF
RAM:7C2E
RAM:7C2F
RAM:7C2F             ; =============== S U B R O U T I N E =======================================
RAM:7C2F
RAM:7C2F
RAM:7C2F             sub_7C2F:                               ; CODE XREF: sub_7BBF+29↑p
RAM:7C2F                                                     ; sub_7BBF+38↑p
RAM:7C2F FD 36 51 01                 ld      (iy+81), 1
RAM:7C33 E5                          push    hl
RAM:7C34 D5                          push    de
RAM:7C35 C5                          push    bc
RAM:7C36 FD 7E 11                    ld      a, (iy+11h)
RAM:7C39 FD 77 46                    ld      (iy+70), a
RAM:7C3C FD 7E 09                    ld      a, (iy+9)
RAM:7C3F 77                          ld      (hl), a
RAM:7C40 23                          inc     hl
RAM:7C41 36 3A                       ld      (hl), 3Ah ; ':'
RAM:7C43 23                          inc     hl
RAM:7C44 EB                          ex      de, hl
RAM:7C45 01 08 00                    ld      bc, 8
RAM:7C48 ED B0                       ldir
RAM:7C4A EB                          ex      de, hl
RAM:7C4B FD 7E 16                    ld      a, (iy+16h)
RAM:7C4E 77                          ld      (hl), a
RAM:7C4F 23                          inc     hl
RAM:7C50 FD 7E 15                    ld      a, (iy+15h)
RAM:7C53 77                          ld      (hl), a
RAM:7C54 23                          inc     hl
RAM:7C55 ED 5B 41 80                 ld      de, (word_8041)
RAM:7C59 73                          ld      (hl), e
RAM:7C5A 23                          inc     hl
RAM:7C5B 72                          ld      (hl), d
RAM:7C5C 23                          inc     hl
RAM:7C5D ED 5B E9 83                 ld      de, (word_83E9)
RAM:7C61 73                          ld      (hl), e
RAM:7C62 23                          inc     hl
RAM:7C63 72                          ld      (hl), d
RAM:7C64 CD 6B 7C                    call    sub_7C6B
RAM:7C67 C1                          pop     bc
RAM:7C68 D1                          pop     de
RAM:7C69 E1                          pop     hl
RAM:7C6A C9                          ret
RAM:7C6A             ; End of function sub_7C2F
RAM:7C6A
RAM:7C6B
RAM:7C6B             ; =============== S U B R O U T I N E =======================================
RAM:7C6B
RAM:7C6B
RAM:7C6B             sub_7C6B:                               ; CODE XREF: sub_69A0+26↑p
RAM:7C6B                                                     ; RAM:6AC2↑p ...
RAM:7C6B 21 56 FC                    ld      hl, UNENCODED_BUFFER
RAM:7C6E 11 57 FD                    ld      de, byte_FD57
RAM:7C71 01 00 01                    ld      bc, 256
RAM:7C74 ED B0                       ldir
RAM:7C76 C9                          ret
RAM:7C76             ; End of function sub_7C6B
RAM:7C76
RAM:7C77             ; ---------------------------------------------------------------------------
RAM:7C77
RAM:7C77             loc_7C77:                               ; CODE XREF: RAM:7C7C↓j
RAM:7C77                                                     ; RAM:7C8B↓j
RAM:7C77 3A FD 6F                    ld      a, (locret_6FFD)
RAM:7C7A CB 77                       bit     6, a
RAM:7C7C 28 F9                       jr      z, loc_7C77
RAM:7C7E C5                          push    bc
RAM:7C7F 01 14 00                    ld      bc, 20
RAM:7C82 CD 34 79                    call    DELAY_BC
RAM:7C85 C1                          pop     bc
RAM:7C86 3A FD 6F                    ld      a, (locret_6FFD)
RAM:7C89 CB 77                       bit     6, a
RAM:7C8B 28 EA                       jr      z, loc_7C77
RAM:7C8D 3E 11                       ld      a, 11h
RAM:7C8F B7                          or      a
RAM:7C90 C9                          ret
RAM:7C91
RAM:7C91             ; =============== S U B R O U T I N E =======================================
RAM:7C91
RAM:7C91
RAM:7C91             sub_7C91:                               ; CODE XREF: sub_5EC1+3F↑j
RAM:7C91                                                     ; RAM:6885↑p ...
RAM:7C91 F3                          di
RAM:7C92 3A 43 FB                    ld      a, (CURRENT_DRIVE)
RAM:7C95 21 44 FB                    ld      hl, byte_FB44
RAM:7C98 BE                          cp      (hl)
RAM:7C99 28 15                       jr      z, DRIVE_ON
RAM:7C9B 77                          ld      (hl), a
RAM:7C9C C5                          push    bc
RAM:7C9D 01 F4 01                    ld      bc, 500
RAM:7CA0 CD 34 79                    call    DELAY_BC
RAM:7CA3 C1                          pop     bc
RAM:7CA4 CD B0 7C                    call    DRIVE_ON
RAM:7CA7 C5                          push    bc
RAM:7CA8 01 BC 02                    ld      bc, 700
RAM:7CAB CD 34 79                    call    DELAY_BC
RAM:7CAE C1                          pop     bc
RAM:7CAF C9                          ret
RAM:7CAF             ; End of function sub_7C91
RAM:7CAF
RAM:7CB0
RAM:7CB0             ; =============== S U B R O U T I N E =======================================
RAM:7CB0
RAM:7CB0
RAM:7CB0             DRIVE_ON:                               ; CODE XREF: sub_7C91+8↑j
RAM:7CB0                                                     ; sub_7C91+13↑p
RAM:7CB0 FD 7E 43                    ld      a, (iy+43h)
RAM:7CB3 E6 CF                       and     0CFh            ; 1100 1111
RAM:7CB5 FD B6 0B                    or      (iy+11)
RAM:7CB8 F6 10                       or      10h
RAM:7CBA FD 77 43                    ld      (iy+43h), a
RAM:7CBD D3 10                       out     (10h), a
RAM:7CBF C5                          push    bc
RAM:7CC0 01 05 00                    ld      bc, 5
RAM:7CC3 CD 34 79                    call    DELAY_BC        ; wait for drive to spin up
RAM:7CC6 C1                          pop     bc
RAM:7CC7 C9                          ret
RAM:7CC7             ; End of function DRIVE_ON
RAM:7CC7
RAM:7CC8
RAM:7CC8             ; =============== S U B R O U T I N E =======================================
RAM:7CC8
RAM:7CC8
RAM:7CC8             DRIVE_OFF:                              ; CODE XREF: RAM:5F03↑j
RAM:7CC8                                                     ; RAM:5F3B↑p ...
RAM:7CC8 FD 7E 43                    ld      a, (iy+43h)
RAM:7CCB E6 EF                       and     0EFh            ; 1110 1111
RAM:7CCD FD 77 43                    ld      (iy+43h), a
RAM:7CD0 D3 10                       out     (10h), a
RAM:7CD2 C9                          ret
RAM:7CD2             ; End of function DRIVE_OFF
RAM:7CD2
RAM:7CD3
RAM:7CD3             ; =============== S U B R O U T I N E =======================================
RAM:7CD3
RAM:7CD3
RAM:7CD3             SELECT_DRIVE:                           ; CODE XREF: RAM:64D8↑p
RAM:7CD3                                                     ; FORMAT_DISK↑p ...
RAM:7CD3 CD 91 7C                    call    sub_7C91
RAM:7CD6 C5                          push    bc
RAM:7CD7 01 14 00                    ld      bc, 14h
RAM:7CDA CD 34 79                    call    DELAY_BC
RAM:7CDD C1                          pop     bc
RAM:7CDE DB 12                       in      a, (12h)
RAM:7CE0 0F                          rrca                    ; Bit#0 = Write Protect Status
RAM:7CE1 3E 04                       ld      a, 4            ; ?DISK WRITE PROTECTED
RAM:7CE3 DA 06 62                    jp      c, dos_error
RAM:7CE6 AF                          xor     a
RAM:7CE7 C9                          ret
RAM:7CE7             ; End of function SELECT_DRIVE
RAM:7CE7
RAM:7CE7             ; ---------------------------------------------------------------------------
RAM:7CE8 96          XLATE_TABLE_2:  db  96h                 ; DATA XREF: RAM:5F8B↑o
RAM:7CE9 97                          db  97h
RAM:7CEA 9A                          db  9Ah
RAM:7CEB 9B                          db  9Bh
RAM:7CEC 9D                          db  9Dh
RAM:7CED 9E                          db  9Eh
RAM:7CEE 9F                          db  9Fh
RAM:7CEF A6                          db 0A6h
RAM:7CF0 A7                          db 0A7h
RAM:7CF1 AB                          db 0ABh
RAM:7CF2 AC                          db 0ACh
RAM:7CF3 AD                          db 0ADh
RAM:7CF4 AE                          db 0AEh
RAM:7CF5 AF                          db 0AFh
RAM:7CF6 B2                          db 0B2h
RAM:7CF7 B3                          db 0B3h
RAM:7CF8 B4                          db 0B4h
RAM:7CF9 B5                          db 0B5h
RAM:7CFA B6                          db 0B6h
RAM:7CFB B7                          db 0B7h
RAM:7CFC B9                          db 0B9h
RAM:7CFD BA                          db 0BAh
RAM:7CFE BB                          db 0BBh
RAM:7CFF BC                          db 0BCh
RAM:7D00 BD                          db 0BDh
RAM:7D01 BE                          db 0BEh
RAM:7D02 BF                          db 0BFh
RAM:7D03 CB                          db 0CBh
RAM:7D04 CD                          db 0CDh
RAM:7D05 CE                          db 0CEh
RAM:7D06 CF                          db 0CFh
RAM:7D07 D3                          db 0D3h
RAM:7D08 D6                          db 0D6h
RAM:7D09 D7                          db 0D7h
RAM:7D0A D9                          db 0D9h
RAM:7D0B DA                          db 0DAh
RAM:7D0C DB                          db 0DBh
RAM:7D0D DC                          db 0DCh
RAM:7D0E DD                          db 0DDh
RAM:7D0F DE                          db 0DEh
RAM:7D10 DF                          db 0DFh
RAM:7D11 E5                          db 0E5h
RAM:7D12 E6                          db 0E6h
RAM:7D13 E7                          db 0E7h
RAM:7D14 E9                          db 0E9h
RAM:7D15 EA                          db 0EAh
RAM:7D16 EB                          db 0EBh
RAM:7D17 EC                          db 0ECh
RAM:7D18 ED                          db 0EDh
RAM:7D19 EE                          db 0EEh
RAM:7D1A EF                          db 0EFh
RAM:7D1B F2                          db 0F2h
RAM:7D1C F3                          db 0F3h
RAM:7D1D F4                          db 0F4h
RAM:7D1E F5                          db 0F5h
RAM:7D1F F6                          db 0F6h
RAM:7D20 F7                          db 0F7h
RAM:7D21 F9                          db 0F9h
RAM:7D22 FA                          db 0FAh
RAM:7D23 FB                          db 0FBh
RAM:7D24 FC                          db 0FCh
RAM:7D25 FD                          db 0FDh
RAM:7D26 FE                          db 0FEh
RAM:7D27 FF                          db 0FFh
RAM:7D28 00          SECTOR_SKEW_TABLE2:db 0                 ; DATA XREF: READ_WRITE_SEC_DATA+35↑o
RAM:7D29 03                          db 3
RAM:7D2A 06                          db 6
RAM:7D2B 09                          db 9
RAM:7D2C 0C                          db 0Ch
RAM:7D2D 0F                          db 0Fh
RAM:7D2E 02                          db 2
RAM:7D2F 05                          db 5
RAM:7D30 08                          db 8
RAM:7D31 0B                          db 0Bh
RAM:7D32 0E                          db 0Eh
RAM:7D33 01                          db 1
RAM:7D34 04                          db 4
RAM:7D35 07                          db 7
RAM:7D36 0A                          db 0Ah
RAM:7D37 0D                          db 0Dh
RAM:7D38 00          XLATE_TABLE:    db 0                    ; DATA XREF: RAM:5F96↑o
RAM:7D39 01                          db    1
RAM:7D3A 98                          db  98h
RAM:7D3B 99                          db  99h
RAM:7D3C 02                          db    2
RAM:7D3D 03                          db    3
RAM:7D3E 9C                          db  9Ch
RAM:7D3F 04                          db    4
RAM:7D40 05                          db    5
RAM:7D41 06                          db    6
RAM:7D42 A0                          db 0A0h
RAM:7D43 A1                          db 0A1h
RAM:7D44 A2                          db 0A2h
RAM:7D45 A3                          db 0A3h
RAM:7D46 A4                          db 0A4h
RAM:7D47 A5                          db 0A5h
RAM:7D48 07                          db    7
RAM:7D49 08                          db    8
RAM:7D4A A8                          db 0A8h
RAM:7D4B A9                          db 0A9h
RAM:7D4C AA                          db 0AAh
RAM:7D4D 09                          db    9
RAM:7D4E 0A                          db  0Ah
RAM:7D4F 0B                          db  0Bh
RAM:7D50 0C                          db  0Ch
RAM:7D51 0D                          db  0Dh
RAM:7D52 B0                          db 0B0h
RAM:7D53 B1                          db 0B1h
RAM:7D54 0E                          db  0Eh
RAM:7D55 0F                          db  0Fh
RAM:7D56 10                          db  10h
RAM:7D57 11                          db  11h
RAM:7D58 12                          db  12h
RAM:7D59 13                          db  13h
RAM:7D5A B8                          db 0B8h
RAM:7D5B 14                          db  14h
RAM:7D5C 15                          db  15h
RAM:7D5D 16                          db  16h
RAM:7D5E 17                          db  17h
RAM:7D5F 18                          db  18h
RAM:7D60 19                          db  19h
RAM:7D61 1A                          db  1Ah
RAM:7D62 C0                          db 0C0h
RAM:7D63 C1                          db 0C1h
RAM:7D64 C2                          db 0C2h
RAM:7D65 C3                          db 0C3h
RAM:7D66 C4                          db 0C4h
RAM:7D67 C5                          db 0C5h
RAM:7D68 C6                          db 0C6h
RAM:7D69 C7                          db 0C7h
RAM:7D6A C8                          db 0C8h
RAM:7D6B C9                          db 0C9h
RAM:7D6C CA                          db 0CAh
RAM:7D6D 1B                          db  1Bh
RAM:7D6E CC                          db 0CCh
RAM:7D6F 1C                          db  1Ch
RAM:7D70 1D                          db  1Dh
RAM:7D71 1E                          db  1Eh
RAM:7D72 D0                          db 0D0h
RAM:7D73 D1                          db 0D1h
RAM:7D74 D2                          db 0D2h
RAM:7D75 1F                          db  1Fh
RAM:7D76 D4                          db 0D4h
RAM:7D77 D5                          db 0D5h
RAM:7D78 20                          db  20h
RAM:7D79 21                          db  21h ; !
RAM:7D7A D8                          db 0D8h
RAM:7D7B 22                          db  22h ; "
RAM:7D7C 23                          db  23h ; #
RAM:7D7D 24                          db  24h ; $
RAM:7D7E 25                          db  25h ; %
RAM:7D7F 26                          db  26h ; &
RAM:7D80 27                          db  27h ; '
RAM:7D81 28                          db  28h ; (
RAM:7D82 E0                          db 0E0h
RAM:7D83 E1                          db 0E1h
RAM:7D84 E2                          db 0E2h
RAM:7D85 E3                          db 0E3h
RAM:7D86 E4                          db 0E4h
RAM:7D87 29                          db  29h ; )
RAM:7D88 2A                          db  2Ah ; *
RAM:7D89 2B                          db  2Bh ; +
RAM:7D8A E8                          db 0E8h
RAM:7D8B 2C                          db  2Ch ; ,
RAM:7D8C 2D                          db  2Dh ; -
RAM:7D8D 2E                          db  2Eh ; .
RAM:7D8E 2F                          db  2Fh ; /
RAM:7D8F 30                          db  30h ; 0
RAM:7D90 31                          db  31h ; 1
RAM:7D91 32                          db  32h ; 2
RAM:7D92 F0                          db 0F0h
RAM:7D93 F1                          db 0F1h
RAM:7D94 33                          db  33h ; 3
RAM:7D95 34                          db  34h ; 4
RAM:7D96 35                          db  35h ; 5
RAM:7D97 36                          db  36h ; 6
RAM:7D98 37                          db  37h ; 7
RAM:7D99 38                          db  38h ; 8
RAM:7D9A F8                          db 0F8h
RAM:7D9B 39                          db  39h ; 9
RAM:7D9C 3A                          db  3Ah ; :
RAM:7D9D 3B                          db  3Bh ; ;
RAM:7D9E 3C                          db  3Ch ; <
RAM:7D9F 3D                          db  3Dh ; =
RAM:7DA0 3E                          db  3Eh ; >
RAM:7DA1 3F                          db  3Fh ; ?
RAM:7DA2 00                          db    0



; The following high memory routines are copied here by DOS during initialisation.
; $5FA4:6071 gets copied to $FEE0:FFAD


RAM:FEE0 1C          DOS_MSG_COPY:   db  1Ch                 ; DATA XREF: RAM:5F83↑o
RAM:FEE1 0A 44 4F 53+aDosBasicV10_0: .ascii '\n'
RAM:FEE1 20 42 41 53+                .ascii 'DOS BASIC V1.0\n'
RAM:FEE1 49 43 20 56+                .ascii '\n'
RAM:FEE1 31 2E 30 0A+                .ascii '\r',0
RAM:FEF4             ; ---------------------------------------------------------------------------
RAM:FEF4
RAM:FEF4             ROM_to_BANK0_1:                         ; DATA XREF: sub_627E:loc_6274↑o
RAM:FEF4 F5                          push    af              ; Put ROM into bank#0 and bank#1, jump to IX
RAM:FEF5 3E 00                       ld      a, 0
RAM:FEF7 32 65 86                    ld      (BANK0_COPY), a
RAM:FEFA D3 40                       out     (40h), a
RAM:FEFC 3E 01                       ld      a, 1
RAM:FEFE 32 66 86                    ld      (BANK1_COPY), a
RAM:FF01 D3 41                       out     (41h), a
RAM:FF03 F1                          pop     af
RAM:FF04 D9                          exx
RAM:FF05 5F                          ld      e, a
RAM:FF06 FE 11                       cp      11h
RAM:FF08 20 01                       jr      nz, loc_FF0B
RAM:FF0A AF                          xor     a
RAM:FF0B
RAM:FF0B             loc_FF0B:                               ; CODE XREF: RAM:FF08↑j
RAM:FF0B DD E9                       jp      (ix)
RAM:FF0D             ; ---------------------------------------------------------------------------
RAM:FF0D
RAM:FF0D             ROM_to_BANK1a:                          ; DATA XREF: RAM:loc_6324↑o
RAM:FF0D F5                          push    af
RAM:FF0E 3E 01                       ld      a, 1
RAM:FF10 32 66 86                    ld      (BANK1_COPY), a
RAM:FF13 D3 41                       out     (41h), a
RAM:FF15 F1                          pop     af
RAM:FF16 E1                          pop     hl
RAM:FF17 D1                          pop     de
RAM:FF18 47                          ld      b, a
RAM:FF19 08                          ex      af, af'
RAM:FF1A 78                          ld      a, b
RAM:FF1B C9                          ret
RAM:FF1C             ; ---------------------------------------------------------------------------
RAM:FF1C
RAM:FF1C             loc_FF1C:                               ; DATA XREF: RAM:5F77↑o
RAM:FF1C 4D                          ld      c, l
RAM:FF1D 44                          ld      b, h
RAM:FF1E 08                          ex      af, af'
RAM:FF1F 21 2E FF                    ld      hl, ROM_to_BANK1_x0056 ; switch ROM1 to BANK#1, and return through $0056
RAM:FF22 E5                          push    hl
RAM:FF23 3E 06                       ld      a, 6
RAM:FF25 32 66 86                    ld      (BANK1_COPY), a
RAM:FF28 D3 41                       out     (41h), a
RAM:FF2A 21 90 62                    ld      hl, INTERCEPT_BASIC ; intercept BASIC tokens to provide disk based functionality
RAM:FF2D E9                          jp      (hl)
RAM:FF2E             ; ---------------------------------------------------------------------------
RAM:FF2E
RAM:FF2E             ROM_to_BANK1_x0056:                     ; DATA XREF: RAM:5FE3↑o
RAM:FF2E                                                     ; RAM:FF1F↑o
RAM:FF2E 3E 01                       ld      a, 1            ; switch ROM1 to BANK#1, and return through $0056
RAM:FF30 32 66 86                    ld      (BANK1_COPY), a
RAM:FF33 D3 41                       out     (41h), a
RAM:FF35 C1                          pop     bc
RAM:FF36 01 56 00                    ld      bc, 56h ; 'V'
RAM:FF39 C5                          push    bc
RAM:FF3A C9                          ret
RAM:FF3B             ; ---------------------------------------------------------------------------
RAM:FF3B
RAM:FF3B             ROM_to_BANK1:                           ; DATA XREF: RAM:5F6C↑o
RAM:FF3B                                                     ; RAM:FFAB↓o
RAM:FF3B DD E5                       push    ix              ; switch ROM1 to BANK#1, and jump to (IX)
RAM:FF3D D9                          exx
RAM:FF3E 21 4E FF                    ld      hl, RAM_to_BANK1 ; move DOS into BANK#1
RAM:FF41 E5                          push    hl
RAM:FF42 F5                          push    af
RAM:FF43 3E 01                       ld      a, 1
RAM:FF45 32 66 86                    ld      (BANK1_COPY), a
RAM:FF48 D3 41                       out     (41h), a
RAM:FF4A F1                          pop     af
RAM:FF4B D9                          exx
RAM:FF4C DD E9                       jp      (ix)
RAM:FF4E             ; ---------------------------------------------------------------------------
RAM:FF4E
RAM:FF4E             RAM_to_BANK1:                           ; DATA XREF: RAM:FF3E↑o
RAM:FF4E F5                          push    af              ; move DOS into BANK#1
RAM:FF4F 3E 06                       ld      a, 6
RAM:FF51 32 66 86                    ld      (BANK1_COPY), a
RAM:FF54 D3 41                       out     (41h), a
RAM:FF56 F1                          pop     af
RAM:FF57 DD E1                       pop     ix
RAM:FF59 C9                          ret
RAM:FF5A             ; ---------------------------------------------------------------------------
RAM:FF5A
RAM:FF5A             ROM_to_BANK1b:                          ; CODE XREF: RAM:5FA1↑j
RAM:FF5A 3E 01                       ld      a, 1
RAM:FF5C 32 66 86                    ld      (BANK1_COPY), a
RAM:FF5F D3 41                       out     (41h), a
RAM:FF61 ED 56                       im      1
RAM:FF63 FB                          ei
RAM:FF64 C3 59 00                    jp      byte_59
RAM:FF67             ; ---------------------------------------------------------------------------
RAM:FF67
RAM:FF67             SCREEN_to_BK1:                          ; CODE XREF: SCREEN_to_BANK1+9↑j
RAM:FF67 D3 41                       out     (41h), a
RAM:FF69
RAM:FF69             loc_FF69:                               ; CODE XREF: RAM:FF8C↓j
RAM:FF69 15                          dec     d
RAM:FF6A 20 17                       jr      nz, loc_FF83
RAM:FF6C 53                          ld      d, e
RAM:FF6D 7E                          ld      a, (hl)
RAM:FF6E EE 80                       xor     80h
RAM:FF70 77                          ld      (hl), a
RAM:FF71 01 80 00                    ld      bc, 80h
RAM:FF74
RAM:FF74             loc_FF74:                               ; CODE XREF: RAM:FF81↓j
RAM:FF74 C5                          push    bc
RAM:FF75 01 89 00                    ld      bc, 89h
RAM:FF78
RAM:FF78             loc_FF78:                               ; CODE XREF: RAM:FF7B↓j
RAM:FF78 0B                          dec     bc
RAM:FF79 78                          ld      a, b
RAM:FF7A B1                          or      c
RAM:FF7B 20 FB                       jr      nz, loc_FF78
RAM:FF7D C1                          pop     bc
RAM:FF7E 0B                          dec     bc
RAM:FF7F 78                          ld      a, b
RAM:FF80 B1                          or      c
RAM:FF81 20 F1                       jr      nz, loc_FF74
RAM:FF83
RAM:FF83             loc_FF83:                               ; CODE XREF: RAM:FF6A↑j
RAM:FF83 E5                          push    hl
RAM:FF84 D5                          push    de
RAM:FF85 CD 1B 00                    call    unk_1B
RAM:FF88 D1                          pop     de
RAM:FF89 E1                          pop     hl
RAM:FF8A FE FF                       cp      0FFh
RAM:FF8C 20 DB                       jr      nz, loc_FF69
RAM:FF8E E5                          push    hl
RAM:FF8F D5                          push    de
RAM:FF90 CD 13 00                    call    unk_13
RAM:FF93 D1                          pop     de
RAM:FF94 E1                          pop     hl
RAM:FF95 F5                          push    af
RAM:FF96 3E 06                       ld      a, 6            ; switch DOS back into BANK#1 and return
RAM:FF98 32 66 86                    ld      (BANK1_COPY), a
RAM:FF9B D3 41                       out     (41h), a
RAM:FF9D F1                          pop     af
RAM:FF9E FB                          ei
RAM:FF9F C9                          ret
RAM:FFA0             ; ---------------------------------------------------------------------------
RAM:FFA0 7E                          ld      a, (hl)
RAM:FFA1 E3                          ex      (sp), hl
RAM:FFA2 BE                          cp      (hl)
RAM:FFA3 23                          inc     hl
RAM:FFA4 E3                          ex      (sp), hl
RAM:FFA5 CA 3B 00                    jp      z, byte_3B
RAM:FFA8 C3 67 62                    jp      loc_6267
RAM:FFAB             ; ---------------------------------------------------------------------------
RAM:FFAB DD 21 3B ??                 ld      ix, ROM_to_BANK1 ; switch ROM1 to BANK#1, and jump to (IX)
RAM:FFAB             ; ---------------------------------------------------------------------------
RAM:FFAF ??                          ds 1
RAM:FFB0 ??                          ds 1
RAM:FFB1 ??                          ds 1
RAM:FFB2 ??                          ds 1
RAM:FFB3 ??                          ds 1
RAM:FFB4 ??                          ds 1
RAM:FFB5 ??                          ds 1
RAM:FFB6 ??                          ds 1
RAM:FFB7 ??                          ds 1
RAM:FFB8 ??                          ds 1
RAM:FFB9 ??                          ds 1
RAM:FFBA ??                          ds 1
RAM:FFBB ??                          ds 1
RAM:FFBC ??                          ds 1
RAM:FFBD ??                          ds 1
RAM:FFBE ??                          ds 1
RAM:FFBF ??                          ds 1
RAM:FFC0 ??                          ds 1
RAM:FFC1 ??                          ds 1
RAM:FFC2 ??                          ds 1
RAM:FFC3 ??                          ds 1
RAM:FFC4 ??                          ds 1
RAM:FFC5 ??                          ds 1
RAM:FFC6 ??                          ds 1
RAM:FFC7 ??                          ds 1
RAM:FFC8 ??                          ds 1
RAM:FFC9 ??                          ds 1
RAM:FFCA ??                          ds 1
RAM:FFCB ??                          ds 1
RAM:FFCC ??                          ds 1
RAM:FFCD ??                          ds 1
RAM:FFCE ??                          ds 1
RAM:FFCF ??                          ds 1
RAM:FFD0 ??                          ds 1
RAM:FFD1 ??                          ds 1
RAM:FFD2 ??                          ds 1
RAM:FFD3 ??                          ds 1
RAM:FFD4 ??                          ds 1
RAM:FFD5 ??                          ds 1
RAM:FFD6 ??                          ds 1
RAM:FFD7 ??                          ds 1
RAM:FFD8 ??                          ds 1
RAM:FFD9 ??                          ds 1
RAM:FFDA ??                          ds 1
RAM:FFDB ??                          ds 1
RAM:FFDC ??                          ds 1
RAM:FFDD ??                          ds 1
RAM:FFDE ??                          ds 1
RAM:FFDF ??                          ds 1
RAM:FFE0 ??                          ds 1
RAM:FFE1 ??                          ds 1
RAM:FFE2 ??                          ds 1
RAM:FFE3 ??                          ds 1
RAM:FFE4 ??                          ds 1
RAM:FFE5 ??                          ds 1
RAM:FFE6 ??                          ds 1
RAM:FFE7 ??                          ds 1
RAM:FFE8 ??                          ds 1
RAM:FFE9 ??                          ds 1
RAM:FFEA ??                          ds 1
RAM:FFEB ??                          ds 1
RAM:FFEC ??                          ds 1
RAM:FFED ??                          ds 1
RAM:FFEE ??                          ds 1
RAM:FFEF ??                          ds 1
RAM:FFF0 ??                          ds 1
RAM:FFF1 ??                          ds 1
RAM:FFF2 ??                          ds 1
RAM:FFF3 ??                          ds 1
RAM:FFF4 ??                          ds 1
RAM:FFF5 ??                          ds 1
RAM:FFF6 ??                          ds 1
RAM:FFF7 ??                          ds 1
RAM:FFF8 ??                          ds 1
RAM:FFF9 ??                          ds 1
RAM:FFFA ??                          ds 1
RAM:FFFB ??                          ds 1
RAM:FFFC ??                          ds 1
RAM:FFFD ??                          ds 1
RAM:FFFE ??                          ds 1
RAM:FFFF ??                          ds 1
RAM:FFFF             ; end of 'RAM'
RAM:FFFF
RAM:FFFF
RAM:FFFF                             end
